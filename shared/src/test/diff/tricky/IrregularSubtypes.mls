// :NoRecursiveTypes
:IrregularTypes


type Foo[A] = A -> Foo[Foo[A]]
//│ Defined type alias Foo[=A]

type Bar[A] = A -> Bar[Bar[A]]
//│ Defined type alias Bar[=A]

// :w
// type Foo[A] = int -> Foo[Foo[A]]

// type Foo[A] = int -> Foo[Foo[A]]

// error: Foo[int]: Foo[int]

// FIXME should be a depth excess
error: Foo[int]: Bar[int]
//│ /!!!\ Uncaught error: java.lang.StackOverflowError

// type I = int

// :d
// error: Foo[int]: Foo[I]

// :d
// error: Foo[0]: Foo[1]
