
:GeneralizeCurriedFunctions
:ArgGen // Type of cons is much simpler without this...

:AllowTypeErrors // FIXME


class Z
class S[P]
  method Inv: P -> P
  method Inv = id
//│ Defined class Z
//│ Defined class S[=P]
//│ Declared S.Inv: S['P] -> 'P -> 'P
//│ Defined S.Inv: S['P] -> (forall 'a. 'a -> 'a)

:IrregularTypes

class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
class Nil: { size: Z }
type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ Defined class Cons[+A, =N]
//│ Defined class Nil
//│ Defined type alias Vec[+A, =N]

type AnyVec[A] = forall 'r. (forall 'p. Nil | Cons[A, S['p]] -> 'r) -> 'r
//│ Defined type alias AnyVec[+A]

def Nil = Nil { size = Z{} }
def Cons head tail = Cons { head; tail; size = S{} }
//│ Nil: Nil
//│ Cons: 'a -> (forall 'A, 'N, 'b, 'tail, 'head. (Vec['A, 'N] & 'b & 'tail) -> ((Cons['A | 'a, 'N] with {head: 'head | 'a, size: forall 'P, 'size. S['P] | 'size, tail: 'tail}) | 'c))


def nil k = k Nil
def cons h t k = k (Cons h t)
//│ nil: (Nil -> 'a & 'b) -> 'a
//│ cons: 'a -> (forall 'b. 'b -> ((forall 'a, 'b, 'A, 'N, 'c, 'head. ((Cons['A | 'a | 'c, 'N] with {head: 'head | 'a | 'c, size: forall 'P, 'size. S['P] | 'size, tail: 'tail | 'b}) | 'd | 'e
//│   where
//│     'b <: Vec['A, 'N])) -> 'f & 'g) -> 'f)

nil_ty = nil : Vec[int, Z]
//│ nil_ty: Vec[int, Z]

def cons_ty : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ cons_ty: 'a -> Vec['a, 'n] -> Vec['a, S['n]]

// FIXME runs out of fuel, making the test very slow...
// cons_ty = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]

// FIXME runs out of fuel, making the test very slow...
// cons_ty2 = cons : forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]

type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ Defined type alias Cons_ty












// :exit
// ====================================================================================================


















cons_ty = cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.88: 	cons_ty = cons : Cons_ty
//│ ║        	          ^^^^
//│ ╟── expression of type `S[‘n_287 & ?p]` is not an instance of type `'n_287`
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.54: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── Note: class type parameter N is defined at:
//│ ║  l.19: 	class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
//│ ╙──      	              ^
//│ Cons_ty
//│   <:  cons_ty:
//│ 'a -> Vec['a, 'n] -> Vec['a, S['n]]

cons_ty3 = cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.103: 	cons_ty3 = cons : Cons_ty
//│ ║         	           ^^^^
//│ ╟── expression of type `S[‘n_358 & ?p]` is not an instance of type `'n_358`
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.54: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── Note: class type parameter N is defined at:
//│ ║  l.19: 	class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
//│ ╙──      	              ^
//│ cons_ty3: Cons_ty

def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ cons: 'b -> (forall 'a, 'n. Vec['a, 'n] -> ((forall 'A, 'c, 'N, 'head. (Cons['a | 'A | 'b | 'c, 'N] with {head: 'head | 'b | 'c, size: forall 'P, 'size. S['P] | 'size, tail: 'tail | Vec['a, 'n]}) | 'd | 'e) -> 'f & 'g) -> 'f)
//│   where
//│     'N := 'n

cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.121: 	cons : Cons_ty
//│ ║         	^^^^
//│ ╟── expression of type `S[‘n_520 & ?p]` is not an instance of type `'n_520`
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.54: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── from type variable:
//│ ║  l.116: 	def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ ║         	                       ^^
//│ ╟── Note: class type parameter N is defined at:
//│ ║  l.19: 	class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
//│ ╙──      	              ^
//│ res: Cons_ty

def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ cons: 'b -> (forall 'a, 'n. Vec['a, 'n] -> ((forall 'A, 'c, 'N, 'head. (Cons['a | 'A | 'b | 'c, 'N] with {head: 'head | 'b | 'c, size: forall 'P, 'size. S['P] | 'size, tail: 'tail | Vec['a, 'n]}) | 'd | 'e) -> 'f & 'g) -> 'f)
//│   where
//│     'N := 'n

cons : Cons_ty
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.142: 	cons : Cons_ty
//│ ║         	^^^^
//│ ╟── expression of type `S[‘n_684 & ?p]` is not an instance of type `'n_684`
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.54: 	type Cons_ty = forall 'a. 'a -> Vec['a, 'n] -> Vec['a, S['n]]
//│ ║        	                                        ^^
//│ ╟── from type variable:
//│ ║  l.137: 	def cons h (t: Vec['a, 'n]) k = k (Cons h t)
//│ ║         	                       ^^
//│ ╟── Note: class type parameter N is defined at:
//│ ║  l.19: 	class Cons[A, N]: { size: S[N]; head: A; tail: Vec[A, N] }
//│ ╙──      	              ^
//│ res: Cons_ty


// v0 = nil

// v0_ty = v0 : Vec[int, Z]

v1_ = Cons 1 nil
//│ v1_: (Cons[1, 'N] with {size: forall 'P, 'size. S['P] | 'size, tail: forall 'a, 'b. (Nil -> 'a & 'b) -> 'a}) | 'c
//│   where
//│     'N :> Z

v1_ty = v1_ : Cons[int, Z]
//│ v1_ty: Cons[int, Z]

v1_0 = cons 1 nil
//│ v1_0: ((forall 'A, 'a, 'N, 'head. (Cons[1 | 'A | 'a, 'N] with {head: 1 | 'head | 'a, size: forall 'P, 'size. S['P] | 'size, tail: 'tail | Vec['A, 'n]}) | 'b | 'c) -> 'd & 'e) -> 'd
//│   where
//│     'N := 'n
//│     'n :> Z

v1_0 : Vec[int, S[Z]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.177: 	v1_0 : Vec[int, S[Z]]
//│ ║         	^^^^
//│ ╟── application of type `Z` is not an instance of type `S`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.177: 	v1_0 : Vec[int, S[Z]]
//│ ║         	                ^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: Vec[int, S[Z]]

v1_1 k = k v1_
//│ v1_1: ((forall 'N. (Cons[1, 'N] with {size: forall 'P, 'size. S['P] | 'size, tail: forall 'a, 'b. (Nil -> 'a & 'b) -> 'a}) | 'c) -> 'd & 'e) -> 'd
//│   where
//│     'N :> Z

// :e
v1_1 : Vec[int, S[Z]]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.198: 	v1_1 : Vec[int, S[Z]]
//│ ║         	^^^^
//│ ╟── application of type `Z` is not an instance of type `S`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.198: 	v1_1 : Vec[int, S[Z]]
//│ ║         	                ^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: Vec[int, S[Z]]


v1_tty = cons_ty 1 nil_ty
//│ v1_tty: Vec[int, S['n]]
//│   where
//│     'n :> Z
//│        <: S[in ‘p_1012_1014 | ‘p_1012_1015 out ‘p_1012_1014 & ‘p_1012_1015] | Z

v1_tty = cons_ty2 1 nil_ty
//│ ╔══[ERROR] identifier not found: cons_ty2
//│ ║  l.220: 	v1_tty = cons_ty2 1 nil_ty
//│ ╙──       	         ^^^^^^^^
//│ v1_tty: error

v1_tty = cons_ty3 1 nil_ty
//│ v1_tty: Vec[int, S['n]]
//│   where
//│     'n :> Z
//│        <: S[in ‘p_1034_1036 | ‘p_1034_1037 out ‘p_1034_1036 & ‘p_1034_1037] | Z


v2 = cons 1 (cons 2 nil)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.233: 	v2 = cons 1 (cons 2 nil)
//│ ║         	     ^^^^^^^^^^^^^^^^^^^
//│ ╟── application of type `Z` is not an instance of type `S`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                                                                     ^^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ v2: error


def impossible x = case x of {}
//│ impossible: nothing -> nothing

def head1 vec = vec (fun v -> case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  })
//│ head1: ((forall 'a, 'b, 'head, 'c, 'd. ('a & ((Cons['b, ?]\size\tail with {head: 'head}) & 'b | Nil & {size: nothing} & 'c)) -> ('head | 'd)) -> 'e & 'f) -> 'e

def head1_ty : Vec['a, S['p]] -> 'a
head1_ty = head1
//│ head1_ty: Vec['a, S['p]] -> 'a
//│ ((forall 'a, 'b, 'head, 'c, 'd. ('a & ((Cons['b, ?]\size\tail with {head: 'head}) & 'b | Nil & {size: nothing} & 'c)) -> ('head | 'd)) -> 'e & 'f) -> 'e
//│   <:  head1_ty:
//│ Vec['a, S['p]] -> 'a

// FIXME works without `:GeneralizeCurriedFunctions`!
def head2 (vec: Vec['a, S['p]]) = vec (fun v -> case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  })
//│ head2: Vec['a, S['p]] -> (forall 'b. 'a | 'head | 'b | 'c)

head1 v1
head1 v2
//│ ╔══[ERROR] identifier not found: v1
//│ ║  l.272: 	head1 v1
//│ ╙──       	      ^^
//│ res: error
//│ res: error

:e
head1 nil
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.281: 	head1 nil
//│ ║         	^^^^^^^^^
//│ ╟── application of type `Z` does not match type `nothing`
//│ ║  l.29: 	def Nil = Nil { size = Z{} }
//│ ║        	                       ^^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.249: 	def impossible x = case x of {}
//│ ║         	                        ^
//│ ╟── from field selection:
//│ ║  l.253: 	  | Nil -> impossible v.size
//│ ║         	                      ^^^^^^
//│ ╟── Note: class Z is defined at:
//│ ║  l.8: 	class Z
//│ ╙──     	      ^
//│ res: error


rec def sum vec = vec (fun v -> case v of {
  | Nil -> 0
  | Cons -> v.head + sum v.tail
  })
//│ sum: 'a -> 'b
//│   where
//│     'a <: (((Cons[?, ?]\size with {head: int, tail: 'a}) | Nil) -> int) -> (int & 'b)

def sum_ty : Vec[int, 'n] -> int
//│ sum_ty: Vec[int, 'n] -> int

// FIXME should be a cycle error
sum_ty = sum
//│ 'a -> 'b
//│   where
//│     'a <: (((Cons[?, ?]\size with {head: int, tail: 'a}) | Nil) -> int) -> (int & 'b)
//│   <:  sum_ty:
//│ Vec[int, 'n] -> int
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?a, ?sum, ?b, ?c, ?d, ?tail, ?head, ?e, ?f, ?g. ?sum <: forall ?n. Vec[int, ?n] -> int` exceeded recursion depth limit (300)
//│ ║  l.312: 	sum_ty = sum
//│ ║         	^^^^^^^^^^^^
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: (‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])}) | (Cons[int<number>,S['p45_1436'''']] & Cons[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])])) -> 'r44_1437')› -> 'r44_1437')  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: (‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])}) | (Cons[int<number>,S['p45_47'''']] & Cons[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  Vec[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])]  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  Vec[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])]  <!<  α1335_1383'
//│ ╟── while constraining:  Vec[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])]  <!<  tail1341_1387'
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')] | ‘n_1381')..((S[‘p_1434_1435'] & ‘n_1381') | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') | ‘p_1434_1435')]), size: S[(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])], Cons#A: mut ..int<number>, tail: Vec[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])], head: int<number>})  <!<  {tail: tail1341_1387'}
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')] | ‘n_1381')..((S[‘p_1434_1435'] & ‘n_1381') | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') | ‘p_1434_1435')]), size: S[(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])], Cons#A: mut ..int<number>, tail: Vec[int<number>,(‘n_1381' | S[((((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431') & ‘p_1434_1435')])], head: int<number>})  <!<  α1338_1386'
//│ ╟── while constraining:  (Cons[int<number>,S[‘p_1434_1435'..‘p_1434_1435']..S[‘p_1434_1435'..‘p_1434_1435']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])])  <!<  ((nil<> & α1337_1385') | ((cons<> & α1338_1386') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S[‘p_1434_1435'..‘p_1434_1435']..S[‘p_1434_1435'..‘p_1434_1435']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])]))  <!<  ((nil<> & α1337_1385') | ((cons<> & α1338_1386') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S[‘p_1434_1435'..‘p_1434_1435']..S[‘p_1434_1435'..‘p_1434_1435']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])]))  <!<  α1336_1384'
//│ ╟── while constraining:  ((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S[‘p_1434'']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])]))  <!<  α1336_1384'
//│ ╟── while constraining:  (α1336_1384' -> (0<int,number> | α1343_1389'))  <!<  ‹∀ 3. (((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S['p45_1432'''']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])])) -> 'r44_1433')›
//│ ╟── while constraining:  ((α1336_1384' -> (0<int,number> | α1343_1389')),)  <!<  (‹∀ 3. (((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S['p45_1432'''']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])])) -> 'r44_1433')›,)
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S['p45_1432'''']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])])) -> 'r44_1433')› -> 'r44_1433')  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: (‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])}) | (Cons[int<number>,S['p45_47'''']] & Cons[int<number>,(‘n_1381' | S[(((((((((‘p_1394_1395' & ‘p_1398_1399') & ‘p_1402_1403') & ‘p_1406_1407') & ‘p_1410_1411') & ‘p_1414_1415') & ‘p_1418_1419') & ‘p_1422_1423') & ‘p_1426_1427') & ‘p_1430_1431')])])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ((Nil & {size: ‘n_1381'}) | (Cons[Int,S[‘p_1394_1395'..‘p_1394_1395']..S[‘p_1394_1395'..‘p_1394_1395']] & Cons[Int,‘n_1381']))  <!<  ((nil<> & α1337_1385') | ((cons<> & α1338_1386') & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ‘n_1381'}) | (Cons[Int,S[‘p_1394_1395'..‘p_1394_1395']..S[‘p_1394_1395'..‘p_1394_1395']] & Cons[Int,‘n_1381']))  <!<  α1336_1384'
//│ ╟── while constraining:  ((Nil & {size: ‘n_1381'}) | (Cons[Int,S[‘p_1394'']] & Cons[Int,‘n_1381']))  <!<  α1336_1384'
//│ ╟── while constraining:  (α1336_1384' -> (0<int,number> | α1343_1389'))  <!<  ‹∀ 3. (((Nil & {size: ‘n_1381'}) | (Cons[Int,S['p45_1392'''']] & Cons[Int,‘n_1381'])) -> 'r44_1393')›
//│ ╟── while constraining:  ((α1336_1384' -> (0<int,number> | α1343_1389')),)  <!<  (‹∀ 3. (((Nil & {size: ‘n_1381'}) | (Cons[Int,S['p45_1392'''']] & Cons[Int,‘n_1381'])) -> 'r44_1393')›,)
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: ‘n_1381'}) | (Cons[Int,S['p45_1392'''']] & Cons[Int,‘n_1381'])) -> 'r44_1393')› -> 'r44_1393')  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: ‘n_1381'}) | (Cons[Int,S['p45_47'''']] & Cons[Int,‘n_1381'])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  Vec[Int,‘n_1381']  <!<  (((α1336_1384' -> (0<int,number> | α1343_1389')),) -> α1344_1390')
//│ ╟── while constraining:  Vec[Int,‘n_1381']  <!<  α1335_1383'
//│ ╟── while constraining:  (Vec[Int,‘n_1381'],)  <!<  (α1335_1383',)
//│ ╟── while constraining:  (α1335_1383' -> α1344_1390')  <!<  (Vec[Int,‘n_1381'] -> Int)
//│ ╟── while constraining:  sum1334_1382'#  <!<  (Vec[Int,‘n_1381'] -> Int)
//│ ╟── while constraining:  ‹∀ 0. sum1334'#›  <!<  (Vec[Int,‘n_1381'] -> Int)
//│ ╟── while constraining:  ‹∀ 0. ‹∀ 0. sum1334'#››  <!<  (Vec[Int,‘n_1381'] -> Int)
//│ ╙── while constraining:  ‹∀ 0. ‹∀ 0. sum1334'#››  <!<  ‹∀ 0. (Vec[Int,'n1359_1360'] -> Int)›


sum nil
//│ res: 'a

sum v1_0
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?b, ?sum, ?c, ?d, ?e, ?tail, ?head, ?f, ?g, ?h. ?sum <: (forall ?a, ?i, ?N, ?n, ?P, ?j, ?k, ?A. ?i) -> ?l` exceeded recursion depth limit (300)
//│ ║  l.358: 	sum v1_0
//│ ║         	^^^^^^^^
//│ ╟── while constraining:  (α1336_1471 -> (0<int,number> | α1343_1476))  <!<  ‹∀ 3. (((Nil & {size: ('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])}) | (Cons['a567_1491,S['p45_1545'''']] & Cons['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])])) -> 'r44_1546)›
//│ ╟── while constraining:  ((α1336_1471 -> (0<int,number> | α1343_1476)),)  <!<  (‹∀ 3. (((Nil & {size: ('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])}) | (Cons['a567_1491,S['p45_1545'''']] & Cons['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])])) -> 'r44_1546)›,)
//│ ╟── while constraining:  (‹∀ 3. (((Nil & {size: ('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])}) | (Cons['a567_1491,S['p45_1545'''']] & Cons['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])])) -> 'r44_1546)› -> 'r44_1546)  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  ‹∀ 2. (‹∀ 3. (((Nil & {size: ('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])}) | (Cons['a567_1491,S['p45_47'''']] & Cons['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])])) -> 'r44_48''')› -> 'r44_48''')›  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  Vec['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])]  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  Vec['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])]  <!<  α1335_1470
//│ ╟── while constraining:  Vec['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])]  <!<  tail1341_1474
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)] | 'n568_1485)..((S[‘p_1543_1544] & 'n568_1485) | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) | ‘p_1543_1544)]), size: S[('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])], Cons#A: mut ..'a567_1491, tail: Vec['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])], head: 'a567_1491})  <!<  {tail: tail1341_1474}
//│ ╟── while constraining:  (cons<> & {Cons#N: mut (S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)] | 'n568_1485)..((S[‘p_1543_1544] & 'n568_1485) | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) | ‘p_1543_1544)]), size: S[('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])], Cons#A: mut ..'a567_1491, tail: Vec['a567_1491,('n568_1485 | S[((((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540) & ‘p_1543_1544)])], head: 'a567_1491})  <!<  α1338_1473
//│ ╟── while constraining:  (Cons['a567_1491,S[‘p_1543_1544..‘p_1543_1544]..S[‘p_1543_1544..‘p_1543_1544]] & Cons['a567_1491,('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])])  <!<  ((nil<> & α1337_1472) | ((cons<> & α1338_1473) & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])}) | (Cons['a567_1491,S[‘p_1543_1544..‘p_1543_1544]..S[‘p_1543_1544..‘p_1543_1544]] & Cons['a567_1491,('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])]))  <!<  ((nil<> & α1337_1472) | ((cons<> & α1338_1473) & ~(nil<>)))
//│ ╟── while constraining:  ((Nil & {size: ('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])}) | (Cons['a567_1491,S[‘p_1543_1544..‘p_1543_1544]..S[‘p_1543_1544..‘p_1543_1544]] & Cons['a567_1491,('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])]))  <!<  α1336_1471
//│ ╟── while constraining:  ((Nil & {size: ('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])}) | (Cons['a567_1491,S[‘p_1543']] & Cons['a567_1491,('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])]))  <!<  α1336_1471
//│ ╟── while constraining:  (α1336_1471 -> (0<int,number> | α1343_1476))  <!<  ‹∀ 3. (((Nil & {size: ('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])}) | (Cons['a567_1491,S['p45_1541'''']] & Cons['a567_1491,('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])])) -> 'r44_1542)›
//│ ╟── while constraining:  ((α1336_1471 -> (0<int,number> | α1343_1476)),)  <!<  (‹∀ 3. (((Nil & {size: ('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])}) | (Cons['a567_1491,S['p45_1541'''']] & Cons['a567_1491,('n568_1485 | S[(((((((‘p_1511_1512 & ‘p_1515_1516) & ‘p_1519_1520) & ‘p_1523_1524) & ‘p_1527_1528) & ‘p_1531_1532) & ‘p_1535_1536) & ‘p_1539_1540)])])) -> 'r44_1542)›,)
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ‹∀ 4. α588_1481'''''›  <!<  α1336_1471
//│ ╟── while constraining:  (‹∀ 4. α588_1481'''''›,)  <!<  (α1336_1471,)
//│ ╟── while constraining:  (α1336_1471 -> (0<int,number> | α1343_1476))  <!<  ((‹∀ 4. α588_1481'''''›,) -> α609_1496)
//│ ╟── while constraining:  (α1336_1471 -> (0<int,number> | α1343_1476))  <!<  α569_1495
//│ ╟── while constraining:  ((α1336_1471 -> (0<int,number> | α1343_1476)),)  <!<  (α569_1495,)
//│ ╟── while constraining:  (α569_1495 -> ‹∀ 4. α609_1494'''''›)  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  ‹∀ 3. (α569_1480'''' -> ‹∀ 4. α609_1494'''''›)›  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  ‹∀ 3. (α569_1480'''' -> α609_1493'''')›  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  α850_1479  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  ‹∀ 0. α850'›  <!<  (((α1336_1471 -> (0<int,number> | α1343_1476)),) -> α1344_1477)
//│ ╟── while constraining:  ‹∀ 0. α850'›  <!<  α1335_1470
//│ ╟── while constraining:  (‹∀ 0. α850'›,)  <!<  (α1335_1470,)
//│ ╟── while constraining:  (α1335_1470 -> α1344_1477)  <!<  ((‹∀ 0. α850'›,) -> α1468)
//│ ╟── while constraining:  sum1334_1469#  <!<  ((‹∀ 0. α850'›,) -> α1468)
//│ ╙── while constraining:  ‹∀ 0. sum1334'#›  <!<  ((‹∀ 0. α850'›,) -> α1468)
//│ res: error

sum v2
//│ res: error




// === === === ERROR CASES === === === //


:ShowRelativeLineNums
:AllowTypeErrors


def head1_ty v = case v of {
  | Nil -> impossible v.size
  | Cons -> v.head
  }
//│ ('a & ((Cons['b, ?]\size\tail with {head: 'head}) & 'b | Nil & {size: nothing} & 'c)) -> ('head | 'd)
//│   <:  head1_ty:
//│ Vec['a, S['p]] -> 'a
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.+1: 	def head1_ty v = case v of {
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.+2: 	  | Nil -> impossible v.size
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.+3: 	  | Cons -> v.head
//│ ║        	^^^^^^^^^^^^^^^^^^
//│ ║  l.+4: 	  }
//│ ║        	^^^
//│ ╟── type `(forall ?p. (Cons[‘a_1621, in S[in ‘p_1622 & ?p out ?p | ‘p_1622] out S[in ?p | ‘p_1622 out ‘p_1622 & ?p]] | (Nil with {size: S[‘p_1622]})) -> ?r) -> ?r` does not match type `Cons[?, ?] & ?a | Nil & ?b`
//│ ║  l.21: 	type Vec[A, N] = forall 'r. (forall 'p. (Nil & { size: N } | Cons[A, S['p]] & Cons[A, N]) -> 'r) -> 'r
//│ ║        	                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── Note: constraint arises from reference:
//│ ║  l.+1: 	def head1_ty v = case v of {
//│ ╙──      	                      ^


sum v1_ty
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.+1: 	sum v1_ty
//│ ║        	^^^^^^^^^
//│ ╟── type `Cons[int, Z]` is not a function
//│ ║  l.168: 	v1_ty = v1_ : Cons[int, Z]
//│ ║         	              ^^^^^^^^^^^^
//│ ╟── but it flows into reference with expected type `(?a -> ?b) -> ?c`
//│ ║  l.+1: 	sum v1_ty
//│ ║        	    ^^^^^
//│ ╟── Note: constraint arises from application:
//│ ║  l.300: 	rec def sum vec = vec (fun v -> case v of {
//│ ║         	                  ^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.301: 	  | Nil -> 0
//│ ║         	^^^^^^^^^^^^
//│ ║  l.302: 	  | Cons -> v.head + sum v.tail
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ║  l.303: 	  })
//│ ║         	^^^^
//│ ╟── from reference:
//│ ║  l.300: 	rec def sum vec = vec (fun v -> case v of {
//│ ╙──       	                  ^^^
//│ res: error


