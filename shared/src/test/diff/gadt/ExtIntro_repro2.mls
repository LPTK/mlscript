:NewDefs
:DontDistributeForalls

:NoJS


class Z 
class S[type P]
//│ class Z {
//│   constructor()
//│ }
//│ class S[P] {
//│   constructor()
//│ }

// abstract class K[type T]: KS[?]
abstract class K[type T]: KS
class KS[type A](ev: K[A]) extends K[S[A]]
//│ abstract class K[T]: KS[?]
//│ class KS[A](ev: K[A]) extends K


// * TODO investigate: 'L0 :> ??A <: ??A0 bad bounds?
// :d
// :e
fun fr[L](l: K[L]) = if l is KS(e1) then () => (e1 as K['X])
//│ fun fr: forall 'L 'X. (l: K['L]) -> () -> K[in ??A & 'X out 'X | ??A0 & ??A1]

// Doesn't happen here:
fun fr[L](l: K[L]) = if l is KS(e1) then (e1 as K['X])
//│ fun fr: forall 'L 'X. (l: K['L]) -> K[in ??A & 'X out 'X | ??A0 & ??A1]

// fun fr[L](l: K[L]) = if l is KS(e1) then () => [(e1 as K['X]), e1 as K['X]]



// MIN

:d
fun fr[L](l: K[L], r: K[L]) =
  if l is KS(e1) and r is KS(e2) then [e1, e2] as [K['X], K['X]]
//│ 0. Typing TypingUnit(List(NuFunDef(None,Var(fr),None,List(TypeName(L)),Left(Lam(Tup(List((Some(Var(l)),Fld(_,TyApp(Var(K),List(TypeName(L))))), (Some(Var(r)),Fld(_,TyApp(Var(K),List(TypeName(L))))))),Blk(List(If(IfThen(App(Var(and),Tup(List((None,Fld(_,App(Var(is),Tup(List((None,Fld(_,Var(l))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(e1))))))))))))), (None,Fld(_,App(Var(is),Tup(List((None,Fld(_,Var(r))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(e2)))))))))))))))),Asc(Tup(List((None,Fld(_,Var(e1))), (None,Fld(_,Var(e2))))),Tuple(List((None,Field(None,AppliedType(TypeName(K),List('X)))), (None,Field(None,AppliedType(TypeName(K),List('X)))))))),None))))))))
//│ | 0. Created lazy type info for NuFunDef(None,Var(fr),None,List(TypeName(L)),Left(Lam(Tup(List((Some(Var(l)),Fld(_,TyApp(Var(K),List(TypeName(L))))), (Some(Var(r)),Fld(_,TyApp(Var(K),List(TypeName(L))))))),Blk(List(If(IfThen(App(Var(and),Tup(List((None,Fld(_,App(Var(is),Tup(List((None,Fld(_,Var(l))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(e1))))))))))))), (None,Fld(_,App(Var(is),Tup(List((None,Fld(_,Var(r))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(e2)))))))))))))))),Asc(Tup(List((None,Fld(_,Var(e1))), (None,Fld(_,Var(e2))))),Tuple(List((None,Field(None,AppliedType(TypeName(K),List('X)))), (None,Field(None,AppliedType(TypeName(K),List('X)))))))),None))))))
//│ | Completing fun fr = (l: K‹L›, r: K‹L›,) => {if (and(is(l, KS(e1,),), is(r, KS(e2,),),)) then [e1, e2,] : [K['X], K['X]]}
//│ | | Type params (TypeName(L),L126',TypeParamInfo(None,false,None,None))
//│ | | Params 
//│ | | Type fr polymorphically? true && (0 === 0 || false || false
//│ | | 1. Typing term (l: K‹L›, r: K‹L›,) => {if (and(is(l, KS(e1,),), is(r, KS(e2,),),)) then [e1, e2,] : [K['X], K['X]]}
//│ | | | 1. Typing pattern [l: K‹L›, r: K‹L›,]
//│ | | | | 1. Typing pattern l : K[L]
//│ | | | | | Typing type AppliedType(TypeName(K),List(TypeName(L)))
//│ | | | | | | vars=Map(L -> ‘L126') newDefsInfo=Map()
//│ | | | | | | 1. type AppliedType(TypeName(K),List(TypeName(L)))
//│ | | | | | | | 1. type TypeName(L)
//│ | | | | | | | => ‘L126'
//│ | | | | | | => K[‘L126']
//│ | | | | | => K[‘L126'] ——— 
//│ | | | | 1. : K[‘L126']
//│ | | | | 1. Typing pattern r : K[L]
//│ | | | | | Typing type AppliedType(TypeName(K),List(TypeName(L)))
//│ | | | | | | vars=Map(L -> ‘L126') newDefsInfo=Map()
//│ | | | | | | 1. type AppliedType(TypeName(K),List(TypeName(L)))
//│ | | | | | | | 1. type TypeName(L)
//│ | | | | | | | => ‘L126'
//│ | | | | | | => K[‘L126']
//│ | | | | | => K[‘L126'] ——— 
//│ | | | | 1. : K[‘L126']
//│ | | | 1. : (l: K[‘L126'], r: K[‘L126'],)
//│ | | | 1. Typing term {if (and(is(l, KS(e1,),), is(r, KS(e2,),),)) then [e1, e2,] : [K['X], K['X]]}
//│ | | | | 1. Typing term if (and(is(l, KS(e1,),), is(r, KS(e2,),),)) then [e1, e2,] : [K['X], K['X]]
//│ | | | | | [Desugarer.destructPattern] scrutinee = Var(l); pattern = App(Var(KS),Tup(List((None,Fld(_,Var(e1))))))
//│ | | | | | [Desugarer.destructPattern] Result: «l is Var(KS)»
//│ | | | | | [Desugarer.destructPattern] scrutinee = Var(r); pattern = App(Var(KS),Tup(List((None,Fld(_,Var(e2))))))
//│ | | | | | [Desugarer.destructPattern] Result: «r is Var(KS)»
//│ | | | | | Desugared term: case l of { KS => let $unapp = (KS).unapply(l,) in let e1 = ($unapp).0 in case r of { KS => let $unapp = (KS).unapply(r,) in let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]] } }
//│ | | | | | 1. Typing term case l of { KS => let $unapp = (KS).unapply(l,) in let e1 = ($unapp).0 in case r of { KS => let $unapp = (KS).unapply(r,) in let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]] } }
//│ | | | | | | 1. Typing term l
//│ | | | | | | 1. : K[‘L126']
//│ | | | | | | CONSTRAIN K[‘L126'] <! Object
//│ | | | | | |   where 
//│ | | | | | | 1. C K[‘L126'] <! Object    (0)
//│ | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | Set T36_127' ~> T36'
//│ | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | 1. C ((#K<Object> & #KS<Object,K>) & {T: mut ‘L126'..‘L126'}) <! #Object<>    (2)
//│ | | | | | | | | Already a subtype by <:<
//│ | | | | | | Match arm KS: #KS<Object,K> & {A: mut A39_128'..A39_129'} intl {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}
//│ | | | | | | var rfn: l :: K[‘L126'] & #KS<Object,K> & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}
//│ | | | | | | 2. Typing term let $unapp = (KS).unapply(l,) in let e1 = ($unapp).0 in case r of { KS => let $unapp = (KS).unapply(r,) in let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]] }
//│ | | | | | | | 2. Typing term (KS).unapply(l,)
//│ | | | | | | | | 2. Typing term (KS).unapply
//│ | | | | | | | | | 2. Typing term (x::1,) => let _ = x : KS in [(x).#ev,]
//│ | | | | | | | | | | TYPING POLY LAM
//│ | | | | | | | | | | 3. Typing pattern [x::1,]
//│ | | | | | | | | | | | 3. Typing pattern x::1
//│ | | | | | | | | | | | 3. : x132'''
//│ | | | | | | | | | | 3. : (x132''',)
//│ | | | | | | | | | | 3. Typing term let _ = x : KS in [(x).#ev,]
//│ | | | | | | | | | | | 3. Typing term x : KS
//│ | | | | | | | | | | | | 3. Typing term x
//│ | | | | | | | | | | | | 3. : x132'''
//│ | | | | | | | | | | | | Typing type TypeName(KS)
//│ | | | | | | | | | | | | | vars=Map(L -> ‘L126') newDefsInfo=Map()
//│ | | | | | | | | | | | | | 3. type TypeName(KS)
//│ | | | | | | | | | | | | | => #KS<Object,K>
//│ | | | | | | | | | | | | => #KS<Object,K> ——— 
//│ | | | | | | | | | | | | CONSTRAIN x132''' <! #KS<Object,K>
//│ | | | | | | | | | | | |   where 
//│ | | | | | | | | | | | | 3. C x132''' <! #KS<Object,K>    (0)
//│ | | | | | | | | | | | | | NEW x132''' UB (0)
//│ | | | | | | | | | | | 3. : #KS<Object,K>
//│ | | | | | | | | | | | 3. Typing term [(x).#ev,]
//│ | | | | | | | | | | | | 3. Typing term (x).#ev
//│ | | | | | | | | | | | | | 3. Typing term x
//│ | | | | | | | | | | | | | 3. : x132'''
//│ | | | | | | | | | | | | | CONSTRAIN x132''' <! {#ev: #ev133'''}
//│ | | | | | | | | | | | | |   where 
//│ 		x132''' <: #KS<Object,K>
//│ | | | | | | | | | | | | | 3. C x132''' <! {#ev: #ev133'''}    (0)
//│ | | | | | | | | | | | | | | NEW x132''' UB (3)
//│ | | | | | | | | | | | | 3. : #ev133'''
//│ | | | | | | | | | | | 3. : (#ev133''',)
//│ | | | | | | | | | | 3. : (#ev133''',)
//│ | | | | | | | | | | Inferred poly constr: (x132''' -> (#ev133''',))  —— where 
//│ 		x132''' <: {#ev: #ev133'''} & #KS<Object,K>
//│ | | | | | | | | | 2. : ‹∀ 2. (x132''' -> (#ev133''',))›
//│ | | | | | | | | 2. : ‹∀ 2. (x132''' -> (#ev133''',))›
//│ | | | | | | | | 2. Typing term l
//│ | | | | | | | | 2. : ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')})
//│ | | | | | | | | CONSTRAIN ‹∀ 2. (x132''' -> (#ev133''',))› <! (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}) -> α134'')
//│ | | | | | | | |   where 
//│ 		A39_128' <: A39_129'
//│ 		x132''' <: {#ev: #ev133'''} & #KS<Object,K>
//│ | | | | | | | | 2. C ‹∀ 2. (x132''' -> (#ev133''',))› <! (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}) -> α134'')    (0)
//│ | | | | | | | | | INST [2]   ‹∀ 2. (x132''' -> (#ev133''',))›
//│ | | | | | | | | |   where  
//│ 		x132''' <: {#ev: #ev133'''} & #KS<Object,K>
//│ | | | | | | | | | TO [2] ~>  (x132_135'' -> (#ev133_136'',))
//│ | | | | | | | | |   where  
//│ 		x132_135'' <: {#ev: #ev133_136''} & #KS<Object,K>
//│ | | | | | | | | | 2. C (x132_135'' -> (#ev133_136'',)) <! (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}) -> α134'')    (2)
//│ | | | | | | | | | | 2. C (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}),) <! (x132_135'',)    (2)
//│ | | | | | | | | | | | 2. C ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}) <! x132_135''    (3)
//│ | | | | | | | | | | | | NEW x132_135'' LB (2)
//│ | | | | | | | | | | | | 2. C ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}) <! {#ev: #ev133_136''}    (6)
//│ | | | | | | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | | | | | | Set T36_137' ~> T36'
//│ | | | | | | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | | | | | | 2. ARGH  DNF(2, #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_128' | ‘A130'')..(‘A130'' & A39_129')})  <!  DNF(2, {#ev: #ev133_136''})
//│ | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | Consider #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_128' | ‘A130'')..(‘A130'' & A39_129')} <: DNF(2, {#ev: #ev133_136''})
//│ | | | | | | | | | | | | | | Possible: List({#ev: #ev133_136''})
//│ | | | | | | | | | | | | | | 2. A  #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_128' | ‘A130'')..(‘A130'' & A39_129')}  %  List()  <!  List({#ev: #ev133_136''})  %  ⊥
//│ | | | | | | | | | | | | | | | 2. A  #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_128' | ‘A130'')..(‘A130'' & A39_129')}  %  List()  <!  List()  %  {#ev:#ev133_136''}
//│ | | | | | | | | | | | | | | | | 2. A  #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_128' | ‘A130'')..(‘A130'' & A39_129')}  %  List()  <!  List()  %  |{#ev:#ev133_136''}
//│ | | | | | | | | | | | | | | | | | Looking up field #ev in Some(KS) & TreeSet() & {...}
//│ | | | | | | | | | | | | | | | | | | Lookup KS.ev : Some(K[‘A39']) where 
//│ | | | | | | | | | | | | | | | | | | Lookup: Found mut (A39_128' | ‘A130'')..(‘A130'' & A39_129')
//│ | | | | | | | | | | | | | | | | | | Fresh[0] KS.ev : Some(K[(A39_128' | ‘A130'')..(‘A130'' & A39_129')]) where Some(
//│ 		A39_128' <: A39_129')
//│ | | | | | | | | | | | | | | | | | |   & None  (from refinement)
//│ | | | | | | | | | | | | | | | | | 2. C K[(A39_128' | ‘A130'')..(‘A130'' & A39_129')] <! #ev133_136''    (5)
//│ | | | | | | | | | | | | | | | | | | NEW #ev133_136'' LB (2)
//│ | | | | | | | | | | | | 2. C ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_128' | ‘A130'')..(A39_129' & ‘A130'')}) <! #KS<Object,K>    (6)
//│ | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | 2. C (#ev133_136'',) <! α134''    (2)
//│ | | | | | | | | | | | NEW α134'' LB (2)
//│ | | | | | | | 2. : α134''
//│ | | | | | | | 2. Typing term let e1 = ($unapp).0 in case r of { KS => let $unapp = (KS).unapply(r,) in let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]] }
//│ | | | | | | | | 2. Typing term ($unapp).0
//│ | | | | | | | | | 2. Typing term $unapp
//│ | | | | | | | | | 2. : α134''
//│ | | | | | | | | | CONSTRAIN α134'' <! {0: α138''}
//│ | | | | | | | | |   where 
//│ 		A39_128' <: A39_129'
//│ 		α134'' :> (#ev133_136'',)
//│ 		#ev133_136'' :> K[(A39_128' | ‘A130'')..(‘A130'' & A39_129')]
//│ | | | | | | | | | 2. C α134'' <! {0: α138''}    (0)
//│ | | | | | | | | | | NEW α134'' UB (2)
//│ | | | | | | | | | | 2. C (#ev133_136'',) <! {0: α138''}    (2)
//│ | | | | | | | | | | | 2. C {0: #ev133_136''} <! {0: α138''}    (4)
//│ | | | | | | | | | | | | 2. C #ev133_136'' <! α138''    (3)
//│ | | | | | | | | | | | | | NEW #ev133_136'' UB (2)
//│ | | | | | | | | | | | | | 2. C K[(A39_128' | ‘A130'')..(‘A130'' & A39_129')] <! α138''    (5)
//│ | | | | | | | | | | | | | | NEW α138'' LB (2)
//│ | | | | | | | | 2. : α138''
//│ | | | | | | | | 2. Typing term case r of { KS => let $unapp = (KS).unapply(r,) in let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]] }
//│ | | | | | | | | | 2. Typing term r
//│ | | | | | | | | | 2. : K[‘L126']
//│ | | | | | | | | | CONSTRAIN K[‘L126'] <! Object
//│ | | | | | | | | |   where 
//│ | | | | | | | | | 2. C K[‘L126'] <! Object    (0)
//│ | | | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | | | Set T36_139' ~> T36'
//│ | | | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | | | 2. C ((#K<Object> & #KS<Object,K>) & {T: mut ‘L126'..‘L126'}) <! #Object<>    (2)
//│ | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | Match arm KS: #KS<Object,K> & {A: mut A39_140''..A39_141''} intl {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}
//│ | | | | | | | | | var rfn: r :: K[‘L126'] & #KS<Object,K> & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}
//│ | | | | | | | | | 3. Typing term let $unapp = (KS).unapply(r,) in let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]]
//│ | | | | | | | | | | 3. Typing term (KS).unapply(r,)
//│ | | | | | | | | | | | 3. Typing term (KS).unapply
//│ | | | | | | | | | | | | 3. Typing term (x::2,) => let _ = x : KS in [(x).#ev,]
//│ | | | | | | | | | | | | | TYPING POLY LAM
//│ | | | | | | | | | | | | | 4. Typing pattern [x::2,]
//│ | | | | | | | | | | | | | | 4. Typing pattern x::2
//│ | | | | | | | | | | | | | | 4. : x144''''
//│ | | | | | | | | | | | | | 4. : (x144'''',)
//│ | | | | | | | | | | | | | 4. Typing term let _ = x : KS in [(x).#ev,]
//│ | | | | | | | | | | | | | | 4. Typing term x : KS
//│ | | | | | | | | | | | | | | | 4. Typing term x
//│ | | | | | | | | | | | | | | | 4. : x144''''
//│ | | | | | | | | | | | | | | | Typing type TypeName(KS)
//│ | | | | | | | | | | | | | | | | vars=Map(L -> ‘L126') newDefsInfo=Map()
//│ | | | | | | | | | | | | | | | | 4. type TypeName(KS)
//│ | | | | | | | | | | | | | | | | => #KS<Object,K>
//│ | | | | | | | | | | | | | | | => #KS<Object,K> ——— 
//│ | | | | | | | | | | | | | | | CONSTRAIN x144'''' <! #KS<Object,K>
//│ | | | | | | | | | | | | | | |   where 
//│ | | | | | | | | | | | | | | | 4. C x144'''' <! #KS<Object,K>    (0)
//│ | | | | | | | | | | | | | | | | NEW x144'''' UB (0)
//│ | | | | | | | | | | | | | | 4. : #KS<Object,K>
//│ | | | | | | | | | | | | | | 4. Typing term [(x).#ev,]
//│ | | | | | | | | | | | | | | | 4. Typing term (x).#ev
//│ | | | | | | | | | | | | | | | | 4. Typing term x
//│ | | | | | | | | | | | | | | | | 4. : x144''''
//│ | | | | | | | | | | | | | | | | CONSTRAIN x144'''' <! {#ev: #ev145''''}
//│ | | | | | | | | | | | | | | | |   where 
//│ 		x144'''' <: #KS<Object,K>
//│ | | | | | | | | | | | | | | | | 4. C x144'''' <! {#ev: #ev145''''}    (0)
//│ | | | | | | | | | | | | | | | | | NEW x144'''' UB (4)
//│ | | | | | | | | | | | | | | | 4. : #ev145''''
//│ | | | | | | | | | | | | | | 4. : (#ev145'''',)
//│ | | | | | | | | | | | | | 4. : (#ev145'''',)
//│ | | | | | | | | | | | | | Inferred poly constr: (x144'''' -> (#ev145'''',))  —— where 
//│ 		x144'''' <: {#ev: #ev145''''} & #KS<Object,K>
//│ | | | | | | | | | | | | 3. : ‹∀ 3. (x144'''' -> (#ev145'''',))›
//│ | | | | | | | | | | | 3. : ‹∀ 3. (x144'''' -> (#ev145'''',))›
//│ | | | | | | | | | | | 3. Typing term r
//│ | | | | | | | | | | | 3. : ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')})
//│ | | | | | | | | | | | CONSTRAIN ‹∀ 3. (x144'''' -> (#ev145'''',))› <! (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}) -> α146''')
//│ | | | | | | | | | | |   where 
//│ 		A39_140'' <: A39_141''
//│ 		x144'''' <: {#ev: #ev145''''} & #KS<Object,K>
//│ | | | | | | | | | | | 3. C ‹∀ 3. (x144'''' -> (#ev145'''',))› <! (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}) -> α146''')    (0)
//│ | | | | | | | | | | | | INST [3]   ‹∀ 3. (x144'''' -> (#ev145'''',))›
//│ | | | | | | | | | | | |   where  
//│ 		x144'''' <: {#ev: #ev145''''} & #KS<Object,K>
//│ | | | | | | | | | | | | TO [3] ~>  (x144_147''' -> (#ev145_148''',))
//│ | | | | | | | | | | | |   where  
//│ 		x144_147''' <: {#ev: #ev145_148'''} & #KS<Object,K>
//│ | | | | | | | | | | | | 3. C (x144_147''' -> (#ev145_148''',)) <! (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}) -> α146''')    (2)
//│ | | | | | | | | | | | | | 3. C (((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}),) <! (x144_147''',)    (2)
//│ | | | | | | | | | | | | | | 3. C ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}) <! x144_147'''    (3)
//│ | | | | | | | | | | | | | | | NEW x144_147''' LB (3)
//│ | | | | | | | | | | | | | | | 3. C ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}) <! {#ev: #ev145_148'''}    (6)
//│ | | | | | | | | | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | | | | | | | | | Set T36_149' ~> T36'
//│ | | | | | | | | | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | | | | | | | | | 3. ARGH  DNF(3, #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')})  <!  DNF(3, {#ev: #ev145_148'''})
//│ | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | Consider #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')} <: DNF(3, {#ev: #ev145_148'''})
//│ | | | | | | | | | | | | | | | | | Possible: List({#ev: #ev145_148'''})
//│ | | | | | | | | | | | | | | | | | 3. A  #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')}  %  List()  <!  List({#ev: #ev145_148'''})  %  ⊥
//│ | | | | | | | | | | | | | | | | | | 3. A  #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')}  %  List()  <!  List()  %  {#ev:#ev145_148'''}
//│ | | | | | | | | | | | | | | | | | | | 3. A  #KS<Object,K>{T: mut ‘L126'..‘L126', A: mut (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')}  %  List()  <!  List()  %  |{#ev:#ev145_148'''}
//│ | | | | | | | | | | | | | | | | | | | | Looking up field #ev in Some(KS) & TreeSet() & {...}
//│ | | | | | | | | | | | | | | | | | | | | | Lookup KS.ev : Some(K[‘A39']) where 
//│ | | | | | | | | | | | | | | | | | | | | | Lookup: Found mut (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')
//│ | | | | | | | | | | | | | | | | | | | | | Fresh[0] KS.ev : Some(K[(A39_140'' | ‘A142''')..(‘A142''' & A39_141'')]) where Some(
//│ 		A39_140'' <: A39_141'')
//│ | | | | | | | | | | | | | | | | | | | | |   & None  (from refinement)
//│ | | | | | | | | | | | | | | | | | | | | 3. C K[(A39_140'' | ‘A142''')..(‘A142''' & A39_141'')] <! #ev145_148'''    (5)
//│ | | | | | | | | | | | | | | | | | | | | | NEW #ev145_148''' LB (3)
//│ | | | | | | | | | | | | | | | 3. C ((K[‘L126'] & #KS<Object,K>) & {A: mut (A39_140'' | ‘A142''')..(A39_141'' & ‘A142''')}) <! #KS<Object,K>    (6)
//│ | | | | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | | | | 3. C (#ev145_148''',) <! α146'''    (2)
//│ | | | | | | | | | | | | | | NEW α146''' LB (3)
//│ | | | | | | | | | | 3. : α146'''
//│ | | | | | | | | | | 3. Typing term let e2 = ($unapp).0 in [e1, e2,] : [K['X], K['X]]
//│ | | | | | | | | | | | 3. Typing term ($unapp).0
//│ | | | | | | | | | | | | 3. Typing term $unapp
//│ | | | | | | | | | | | | 3. : α146'''
//│ | | | | | | | | | | | | CONSTRAIN α146''' <! {0: α150'''}
//│ | | | | | | | | | | | |   where 
//│ 		A39_140'' <: A39_141''
//│ 		α146''' :> (#ev145_148''',)
//│ 		#ev145_148''' :> K[(A39_140'' | ‘A142''')..(‘A142''' & A39_141'')]
//│ | | | | | | | | | | | | 3. C α146''' <! {0: α150'''}    (0)
//│ | | | | | | | | | | | | | NEW α146''' UB (3)
//│ | | | | | | | | | | | | | 3. C (#ev145_148''',) <! {0: α150'''}    (2)
//│ | | | | | | | | | | | | | | 3. C {0: #ev145_148'''} <! {0: α150'''}    (4)
//│ | | | | | | | | | | | | | | | 3. C #ev145_148''' <! α150'''    (3)
//│ | | | | | | | | | | | | | | | | NEW #ev145_148''' UB (3)
//│ | | | | | | | | | | | | | | | | 3. C K[(A39_140'' | ‘A142''')..(‘A142''' & A39_141'')] <! α150'''    (5)
//│ | | | | | | | | | | | | | | | | | NEW α150''' LB (3)
//│ | | | | | | | | | | | 3. : α150'''
//│ | | | | | | | | | | | 3. Typing term [e1, e2,] : [K['X], K['X]]
//│ | | | | | | | | | | | | 3. Typing term [e1, e2,]
//│ | | | | | | | | | | | | | 3. Typing term e1
//│ | | | | | | | | | | | | | 3. : α138''
//│ | | | | | | | | | | | | | 3. Typing term e2
//│ | | | | | | | | | | | | | 3. : α150'''
//│ | | | | | | | | | | | | 3. : (α138'', α150''',)
//│ | | | | | | | | | | | | Typing type Tuple(List((None,Field(None,AppliedType(TypeName(K),List('X)))), (None,Field(None,AppliedType(TypeName(K),List('X))))))
//│ | | | | | | | | | | | | | vars=Map(L -> ‘L126') newDefsInfo=Map()
//│ | | | | | | | | | | | | | 3. type Tuple(List((None,Field(None,AppliedType(TypeName(K),List('X)))), (None,Field(None,AppliedType(TypeName(K),List('X))))))
//│ | | | | | | | | | | | | | | 3. type AppliedType(TypeName(K),List('X))
//│ | | | | | | | | | | | | | | | 3. type 'X
//│ | | | | | | | | | | | | | | | => 'X151'''
//│ | | | | | | | | | | | | | | => K['X151''']
//│ | | | | | | | | | | | | | | 3. type AppliedType(TypeName(K),List('X))
//│ | | | | | | | | | | | | | | | 3. type 'X
//│ | | | | | | | | | | | | | | | => 'X151'''
//│ | | | | | | | | | | | | | | => K['X151''']
//│ | | | | | | | | | | | | | => (K['X151'''], K['X151'''],)
//│ | | | | | | | | | | | | => (K['X151'''], K['X151'''],) ——— 'X151'''
//│ | | | | | | | | | | | | CONSTRAIN (α138'', α150''',) <! (K['X151'''], K['X151'''],)
//│ | | | | | | | | | | | |   where 
//│ 		A39_128' <: A39_129'
//│ 		α138'' :> K[(A39_128' | ‘A130'')..(‘A130'' & A39_129')]
//│ 		A39_140'' <: A39_141''
//│ 		α150''' :> K[(A39_140'' | ‘A142''')..(‘A142''' & A39_141'')]
//│ | | | | | | | | | | | | 3. C (α138'', α150''',) <! (K['X151'''], K['X151'''],)    (0)
//│ | | | | | | | | | | | | | 3. C α138'' <! K['X151''']    (1)
//│ | | | | | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | | | | | EXTR[-] K['X151'''] || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | EXTR[+] 'X151''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | => 'X151_152''
//│ | | | | | | | | | | | | | | | EXTR[-] 'X151''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | EXTR[-] 'X151_152'' || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | | => 'X151_152''
//│ | | | | | | | | | | | | | | | => 'X151_153''
//│ | | | | | | | | | | | | | | => K[? :> 'X151_152'' <: 'X151_153'']
//│ | | | | | | | | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | | | | | | | | | Reconstraining 'X151_152''
//│ | | | | | | | | | | | | | | | Reconstraining 'X151_153''
//│ | | | | | | | | | | | | | | EXTR RHS  ~>  K[? :> 'X151_152'' <: 'X151_153'']  to 2
//│ | | | | | | | | | | | | | |  where 
//│ 		'X151_153'' <: 'X151_152''
//│ | | | | | | | | | | | | | | 3. C α138'' <! K[? :> 'X151_152'' <: 'X151_153'']    (1)
//│ | | | | | | | | | | | | | | | NEW α138'' UB (2)
//│ | | | | | | | | | | | | | | | 3. C K[(A39_128' | ‘A130'')..(‘A130'' & A39_129')] <! K[? :> 'X151_152'' <: 'X151_153'']    (4)
//│ | | | | | | | | | | | | | | | | 3. C 'X151_152'' <! (A39_128' | ‘A130'')..(‘A130'' & A39_129')    (3)
//│ | | | | | | | | | | | | | | | | | 3. C 'X151_152'' <! (A39_128' | ‘A130'')    (6)
//│ | | | | | | | | | | | | | | | | | | NEW 'X151_152'' UB (2)
//│ | | | | | | | | | | | | | | | | 3. C (A39_128' | ‘A130'')..(‘A130'' & A39_129') <! 'X151_153''    (3)
//│ | | | | | | | | | | | | | | | | | 3. C (‘A130'' & A39_129') <! 'X151_153''    (6)
//│ | | | | | | | | | | | | | | | | | | NEW 'X151_153'' LB (2)
//│ | | | | | | | | | | | | | | | | | | 3. C (‘A130'' & A39_129') <! 'X151_152''    (9)
//│ | | | | | | | | | | | | | | | | | | | NEW 'X151_152'' LB (2)
//│ | | | | | | | | | | | | | | | | | | | 3. C (‘A130'' & A39_129') <! (A39_128' | ‘A130'')    (10)
//│ | | | | | | | | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | | | | 3. C α150''' <! K['X151''']    (1)
//│ | | | | | | | | | | | | | | NEW α150''' UB (3)
//│ | | | | | | | | | | | | | | 3. C K[(A39_140'' | ‘A142''')..(‘A142''' & A39_141'')] <! K['X151''']    (3)
//│ | | | | | | | | | | | | | | | 3. C (A39_140'' | ‘A142''')..(‘A142''' & A39_141'') <! 'X151'''    (3)
//│ | | | | | | | | | | | | | | | | 3. C (‘A142''' & A39_141'') <! 'X151'''    (5)
//│ | | | | | | | | | | | | | | | | | NEW 'X151''' LB (3)
//│ | | | | | | | | | | | | | | | | | 3. C (‘A142''' & A39_141'') <! 'X151_152''    (7)
//│ | | | | | | | | | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | | | | | | | | | EXTR[+] (A39_141'' & ‘A142''') || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | | | | EXTR[+] A39_141'' || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | | | | | => A39_141''
//│ | | | | | | | | | | | | | | | | | | | EXTR[+] ‘A142''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | | | | => ⊤(‘A142''')
//│ | | | | | | | | | | | | | | | | | | => (A39_141'' & ⊤(‘A142'''))
//│ | | | | | | | | | | | | | | | | | | EXTR LHS  ~>  (A39_141'' & ⊤(‘A142'''))  to 2
//│ | | | | | | | | | | | | | | | | | |  where 
//│ | | | | | | | | | | | | | | | | | | 3. C (A39_141'' & ⊤(‘A142''')) <! 'X151_152''    (7)
//│ | | | | | | | | | | | | | | | | | | | NEW 'X151_152'' LB (2)
//│ | | | | | | | | | | | | | | | | | | | 3. C (A39_141'' & ⊤(‘A142''')) <! (A39_128' | ‘A130'')    (10)
//│ | | | | | | | | | | | | | | | | | | | | 3. ARGH  DNF(2, {}∧⊤(‘A142''')∧A39_141'')  <!  DNF(2, A39_128' | {}∧‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | | | 3. C A39_141'' <! ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))    (12)
//│ | | | | | | | | | | | | | | | | | | | | | | NEW A39_141'' UB (2)
//│ | | | | | | | | | | | | | | | 3. C 'X151''' <! (A39_140'' | ‘A142''')..(‘A142''' & A39_141'')    (3)
//│ | | | | | | | | | | | | | | | | 3. C 'X151''' <! (A39_140'' | ‘A142''')    (5)
//│ | | | | | | | | | | | | | | | | | NEW 'X151''' UB (3)
//│ | | | | | | | | | | | | | | | | | 3. C (‘A142''' & A39_141'') <! (A39_140'' | ‘A142''')    (7)
//│ | | | | | | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | | | | | | | | 3. C 'X151_153'' <! (A39_140'' | ‘A142''')    (7)
//│ | | | | | | | | | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | | | | | | | | | EXTR[-] (‘A142''' | A39_140'') || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | | | | EXTR[-] ‘A142''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | | | | => ⊥(‘A142''')
//│ | | | | | | | | | | | | | | | | | | | EXTR[-] A39_140'' || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | | | | | => A39_140''
//│ | | | | | | | | | | | | | | | | | | => (⊥(‘A142''') | A39_140'')
//│ | | | | | | | | | | | | | | | | | | EXTR RHS  ~>  (⊥(‘A142''') | A39_140'')  to 2
//│ | | | | | | | | | | | | | | | | | |  where 
//│ 		A39_128' <: A39_129'
//│ 		A39_140'' <: A39_141''
//│ 		A39_141'' <: ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))
//│ | | | | | | | | | | | | | | | | | | 3. C 'X151_153'' <! (⊥(‘A142''') | A39_140'')    (7)
//│ | | | | | | | | | | | | | | | | | | | NEW 'X151_153'' UB (2)
//│ | | | | | | | | | | | | | | | | | | | 3. C (‘A130'' & A39_129') <! (⊥(‘A142''') | A39_140'')    (10)
//│ | | | | | | | | | | | | | | | | | | | | 3. ARGH  DNF(2, {}∧‘A130''∧A39_129')  <!  DNF(2, {}∧⊥(‘A142''') | A39_140'')
//│ | | | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | | | 3. C A39_129' <! ((⊥(‘A142''') | A39_140'') | ~(‘A130''))    (12)
//│ | | | | | | | | | | | | | | | | | | | | | | 3. C ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <! A39_140''    (12)
//│ | | | | | | | | | | | | | | | | | | | | | | | NEW A39_140'' LB (2)
//│ | | | | | | | | | | | | | | | | | | | | | | | 3. C ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <! A39_141''    (14)
//│ | | | | | | | | | | | | | | | | | | | | | | | | NEW A39_141'' LB (2)
//│ | | | | | | | | | | | | | | | | | | | | | | | | 3. C ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <! ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))    (16)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | | 3. : (K['X151'''], K['X151'''],)
//│ | | | | | | | | | | 3. : (K['X151'''], K['X151'''],)
//│ | | | | | | | | | 3. : (K['X151'''], K['X151'''],)
//│ | | | | | | | | | CONSTRAIN (K['X151'''], K['X151'''],) <! α143''
//│ | | | | | | | | |   where 
//│ 		A39_128' <: A39_129'
//│ 		A39_140'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: A39_141''
//│ 		A39_141'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))
//│ 		'X151''' :> (‘A142''' & A39_141'') | 'X151_153'' <: (A39_140'' | ‘A142''') & 'X151_152''
//│ 		'X151_152'' :> (A39_141'' & ⊤(‘A142''')) | (‘A130'' & A39_129') <: (A39_128' | ‘A130'')
//│ 		'X151_153'' :> (‘A130'' & A39_129') <: (⊥(‘A142''') | A39_140'') & 'X151_152''
//│ | | | | | | | | | 3. C (K['X151'''], K['X151'''],) <! α143''    (0)
//│ | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | EXTR[+] (K['X151'''], K['X151'''],) || 2 .. 1024  3 false
//│ | | | | | | | | | | | EXTR[+] K['X151'''] || 2 .. 1024  3 false
//│ | | | | | | | | | | | | EXTR[-] 'X151''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | => 'X151_153''
//│ | | | | | | | | | | | | EXTR[+] 'X151''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | => 'X151_152''
//│ | | | | | | | | | | | => K[? :> 'X151_153'' <: 'X151_152'']
//│ | | | | | | | | | | | EXTR[+] K['X151'''] || 2 .. 1024  3 false
//│ | | | | | | | | | | | | EXTR[-] 'X151''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | => 'X151_153''
//│ | | | | | | | | | | | | EXTR[+] 'X151''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | => 'X151_152''
//│ | | | | | | | | | | | => K[? :> 'X151_153'' <: 'X151_152'']
//│ | | | | | | | | | | => (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],)
//│ | | | | | | | | | | EXTR LHS  ~>  (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],)  to 2
//│ | | | | | | | | | |  where 
//│ 		A39_128' <: A39_129'
//│ 		A39_140'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: A39_141''
//│ 		A39_141'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))
//│ 		'X151_152'' :> (A39_141'' & ⊤(‘A142''')) | (‘A130'' & A39_129') <: (A39_128' | ‘A130'')
//│ 		'X151_153'' :> (‘A130'' & A39_129') <: (⊥(‘A142''') | A39_140'') & 'X151_152''
//│ | | | | | | | | | | 3. C (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],) <! α143''    (0)
//│ | | | | | | | | | | | NEW α143'' LB (2)
//│ | | | | | | | | | finishing branch: [(#KS<Object,K>,{A: mut A39_140''..A39_141''})] + List() and [α143''] | ⊥
//│ | | | | | | | | | finishing case K[‘L126'] <: (#KS<Object,K> & {A: mut A39_140''..A39_141''})
//│ | | | | | | | | | CONSTRAIN K[‘L126'] <! (#KS<Object,K> & {A: mut A39_140''..A39_141''})
//│ | | | | | | | | |   where 
//│ 		A39_128' <: A39_129'
//│ 		A39_140'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: A39_141''
//│ 		A39_141'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))
//│ | | | | | | | | | 2. C K[‘L126'] <! (#KS<Object,K> & {A: mut A39_140''..A39_141''})    (0)
//│ | | | | | | | | | | 2. C K[‘L126'] <! #KS<Object,K>    (2)
//│ | | | | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | | | | Set T36_154' ~> T36'
//│ | | | | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | | | | 2. C ((#K<Object> & #KS<Object,K>) & {T: mut ‘L126'..‘L126'}) <! #KS<Object,K>    (4)
//│ | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | 2. C K[‘L126'] <! {A: mut A39_140''..A39_141''}    (2)
//│ | | | | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | | | | Set T36_155' ~> T36'
//│ | | | | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | | | | 2. ARGH  DNF(1, #KS<Object,K>{T: mut ‘L126'..‘L126'})  <!  DNF(2, {A: mut A39_140''..A39_141''})
//│ | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | Consider #KS<Object,K>{T: mut ‘L126'..‘L126'} <: DNF(2, {A: mut A39_140''..A39_141''})
//│ | | | | | | | | | | | | Possible: List({A: mut A39_140''..A39_141''})
//│ | | | | | | | | | | | | 2. A  #KS<Object,K>{T: mut ‘L126'..‘L126'}  %  List()  <!  List({A: mut A39_140''..A39_141''})  %  ⊥
//│ | | | | | | | | | | | | | 2. A  #KS<Object,K>{T: mut ‘L126'..‘L126'}  %  List()  <!  List()  %  {A:mut A39_140''..A39_141''}
//│ | | | | | | | | | | | | | | 2. A  #KS<Object,K>{T: mut ‘L126'..‘L126'}  %  List()  <!  List()  %  |{A:mut A39_140''..A39_141''}
//│ | | | | | | | | | | | | | | | Looking up field A in Some(KS) & TreeSet() & {...}
//│ | | | | | | | | | | | | | | | | Lookup KS.A : Some(mut A39'..A39') where 
//│ | | | | | | | | | | | | | | | | Lookup: field not found, creating new bounds
//│ | | | | | | | | | | | | | | | | Fresh[0] KS.A : Some(mut ⊥(‘A39')..⊤(‘A39')..⊥(‘A39')..⊤(‘A39')) where Some()
//│ | | | | | | | | | | | | | | | |   & None  (from refinement)
//│ | | | | | | | | | | | | | | | 2. C ⊥(‘A39')..⊤(‘A39') <! A39_141''    (2)
//│ | | | | | | | | | | | | | | | | 2. C ⊤(‘A39') <! A39_141''    (4)
//│ | | | | | | | | | | | | | | | | | NEW A39_141'' LB (0)
//│ | | | | | | | | | | | | | | | | | 2. C ⊤(‘A39') <! ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))    (6)
//│ | | | | | | | | | | | | | | | | | | 2. ARGH  DNF(0, {}∧⊤(‘A39'))  <!  DNF(2, A39_128' | {}∧‘A130'' | ~(⊤(‘A142''')))
//│ | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | Consider {}∧⊤(‘A39') <: DNF(2, A39_128' | {}∧‘A130'' | ~(⊤(‘A142''')))
//│ | | | | | | | | | | | | | | | | | | | Possible: List(A39_128', {}∧‘A130'', ~(⊤(‘A142''')))
//│ | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')  %  List()  <!  List(A39_128', ‘A130'', ~(⊤(‘A142''')))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')  %  List()  <!  List(‘A130'', ~(⊤(‘A142''')))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')  %  List()  <!  List(~(⊤(‘A142''')))  %  ‘A130''
//│ | | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')  %  List(⊤(‘A142'''))  <!  List()  %  ‘A130''
//│ | | | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')∧⊤(‘A142''')  %  List()  <!  List()  %  ‘A130''
//│ | | | | | | | | | | | | | | | | | | | | | | | | 2. C ((⊤(‘A39') & ⊤(‘A142''')) & ~(‘A130'')) <! A39_128'    (5)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | wrong level: 2
//│ | | | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] ((⊤(‘A142''') & ⊤(‘A39')) & ~(‘A130'')) || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] (⊤(‘A142''') & ⊤(‘A39')) || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | => (⊤(‘A142''') & ⊤(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] ~(‘A130'') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | EXTR[-] ‘A130'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | => ⊥(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | => ~(⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | => ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | EXTR LHS  ~>  ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130'')))  to 1
//│ | | | | | | | | | | | | | | | | | | | | | | | | |  where 
//│ | | | | | | | | | | | | | | | | | | | | | | | | | 2. C ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <! A39_128'    (5)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | NEW A39_128' LB (0)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | 2. C ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <! A39_129'    (7)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | NEW A39_129' LB (0)
//│ | | | | | | | | | | | | | | | 2. C A39_140'' <! ⊥(‘A39')..⊤(‘A39')    (2)
//│ | | | | | | | | | | | | | | | | 2. C A39_140'' <! ⊥(‘A39')    (4)
//│ | | | | | | | | | | | | | | | | | NEW A39_140'' UB (0)
//│ | | | | | | | | | | | | | | | | | 2. C ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <! ⊥(‘A39')    (6)
//│ | | | | | | | | | | | | | | | | | | 2. ARGH  DNF(2, {}∧‘A130''∧A39_129'∧~(⊥(‘A142''')))  <!  DNF(0, {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | 2. C A39_129' <! (⊥(‘A39') | ~((‘A130'' & ~(⊥(‘A142''')))))    (8)
//│ | | | | | | | | | | | | | | | | | | | | wrong level: 2
//│ | | | | | | | | | | | | | | | | | | | | EXTR[-] ((~(‘A130'') | ⊥(‘A142''')) | ⊥(‘A39')) || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | EXTR[-] (~(‘A130'') | ⊥(‘A142''')) || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | EXTR[-] ~(‘A130'') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] ‘A130'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | => ⊤(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | | => ~(⊤(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | EXTR[-] ⊥(‘A142''') || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | | | | | | | | | | => ⊥(‘A142''')
//│ | | | | | | | | | | | | | | | | | | | | | => (~(⊤(‘A130'')) | ⊥(‘A142'''))
//│ | | | | | | | | | | | | | | | | | | | | | EXTR[-] ⊥(‘A39') || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | | | | | | | | | => ⊥(‘A39')
//│ | | | | | | | | | | | | | | | | | | | | => ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | EXTR RHS  ~>  ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))  to 1
//│ | | | | | | | | | | | | | | | | | | | |  where 
//│ | | | | | | | | | | | | | | | | | | | | 2. C A39_129' <! ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))    (8)
//│ | | | | | | | | | | | | | | | | | | | | | NEW A39_129' UB (0)
//│ | | | | | | | | | | | | | | | | | | | | | 2. C ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <! ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))    (10)
//│ | | | | | | | | | | | | | | | | | | | | | | 2. ARGH  DNF(0, {}∧⊤(‘A39')∧⊤(‘A142''')∧~(⊥(‘A130'')))  <!  DNF(0, ~(⊤(‘A130'')) | {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | | | | | Consider {}∧⊤(‘A39')∧⊤(‘A142''') <: DNF(0, ~(⊤(‘A130'')) | {}∧⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | | Possible: List(~(⊤(‘A130'')), {}∧⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')∧⊤(‘A142''')  %  List()  <!  List(~(⊤(‘A130'')), ⊥(‘A130''))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')∧⊤(‘A142''')  %  List(⊤(‘A130''))  <!  List(⊥(‘A130''))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')∧⊤(‘A130'')∧⊤(‘A142''')  %  List()  <!  List(⊥(‘A130''))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | 2. A  {}∧⊤(‘A39')∧⊤(‘A130'')∧⊤(‘A142''')  %  List()  <!  List()  %  ⊥(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | Tag checking TreeSet(⊤(‘A39'), ⊤(‘A130''), ⊤(‘A142''')) List(⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | CONSTRAINT FAILURE: ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | allVarPols: 
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | normLike[-] ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | norm[-] ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(0, ~(⊤(‘A130'')) | {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | norm[+] ⊤(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(0, {}∧⊤(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | ~> ⊤(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | ~> (⊥(‘A39') | ~(⊤(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | allVarPols: 
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | normLike[+] ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | norm[+] ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(0, {}∧⊤(‘A39')∧⊤(‘A142''')∧~(⊥(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | ~> ((⊤(‘A39') & ⊤(‘A142''')) & ~(⊥(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | CONSTRAIN #error<> <! α143''
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | |   where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: A39_129'
//│ 		A39_129' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ 		A39_140'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ⊥(‘A39') & A39_141''
//│ 		A39_141'' :> ⊤(‘A39') | ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))
//│ 		α143'' :> (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],)
//│ 		'X151_152'' :> (A39_141'' & ⊤(‘A142''')) | (‘A130'' & A39_129') <: (A39_128' | ‘A130'')
//│ 		'X151_153'' :> (‘A130'' & A39_129') <: (⊥(‘A142''') | A39_140'') & 'X151_152''
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | 2. C #error<> <! α143''    (0)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | | NEW α143'' LB (0)
//│ ╔══[ERROR] Type mismatch in `case` expression:
//│ ║  l.42: 	  if l is KS(e1) and r is KS(e2) then [e1, e2] as [K['X], K['X]]
//│ ║        	                     ^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── expression of type `??A & ??A0 & ~??A1` does not match type `??A2 | ~??A3`
//│ ╟── Note: type parameter A is defined at:
//│ ║  l.18: 	class KS[type A](ev: K[A]) extends K[S[A]]
//│ ╙──      	              ^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ | | | | | | | | 2. : α143''
//│ | | | | | | | 2. : α143''
//│ | | | | | | 2. : α143''
//│ | | | | | | CONSTRAIN α143'' <! α131'
//│ | | | | | |   where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: A39_129'
//│ 		A39_129' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ 		A39_140'' :> ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ⊥(‘A39') & A39_141''
//│ 		A39_141'' :> ⊤(‘A39') | ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) <: ((A39_128' | ‘A130'') | ~(⊤(‘A142''')))
//│ 		α143'' :> #error<> | (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],)
//│ 		'X151_152'' :> (A39_141'' & ⊤(‘A142''')) | (‘A130'' & A39_129') <: (A39_128' | ‘A130'')
//│ 		'X151_153'' :> (‘A130'' & A39_129') <: (⊥(‘A142''') | A39_140'') & 'X151_152''
//│ | | | | | | 2. C α143'' <! α131'    (0)
//│ | | | | | | | NEW α143'' UB (1)
//│ | | | | | | | 2. C #error<> <! α131'    (2)
//│ | | | | | | | | NEW α131' LB (0)
//│ | | | | | | | 2. C (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],) <! α131'    (2)
//│ | | | | | | | | wrong level: 2
//│ | | | | | | | | EXTR[+] (K[? :> 'X151_153'' <: 'X151_152''], K[? :> 'X151_153'' <: 'X151_152''],) || 1 .. 1024  2 false
//│ | | | | | | | | | EXTR[+] K[? :> 'X151_153'' <: 'X151_152''] || 1 .. 1024  2 false
//│ | | | | | | | | | | EXTR[-] 'X151_153'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | EXTR[-] (⊥(‘A142''') | A39_140'') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | EXTR[-] ⊥(‘A142''') || 1 .. 1024  0 true
//│ | | | | | | | | | | | | => ⊥(‘A142''')
//│ | | | | | | | | | | | | EXTR[-] A39_140'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | EXTR[-] ⊥(‘A39') || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | => ⊥(‘A39')
//│ | | | | | | | | | | | | | EXTR[-] A39_141'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | EXTR[-] ((A39_128' | ‘A130'') | ~(⊤(‘A142'''))) || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | EXTR[-] (A39_128' | ‘A130'') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | EXTR[-] A39_128' || 1 .. 1024  1 true
//│ | | | | | | | | | | | | | | | | => A39_128'
//│ | | | | | | | | | | | | | | | | EXTR[-] ‘A130'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | => ⊥(‘A130'')
//│ | | | | | | | | | | | | | | | => (A39_128' | ⊥(‘A130''))
//│ | | | | | | | | | | | | | | | EXTR[-] ~(⊤(‘A142''')) || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | | | => ~(⊤(‘A142'''))
//│ | | | | | | | | | | | | | | => ((A39_128' | ⊥(‘A130'')) | ~(⊤(‘A142''')))
//│ | | | | | | | | | | | | | => A39_162'
//│ | | | | | | | | | | | | => A39_161'
//│ | | | | | | | | | | | => (⊥(‘A142''') | A39_161')
//│ | | | | | | | | | | | EXTR[-] 'X151_152'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | EXTR[-] (A39_128' | ‘A130'') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | EXTR[-] A39_128' || 1 .. 1024  1 true
//│ | | | | | | | | | | | | | => A39_128'
//│ | | | | | | | | | | | | | EXTR[-] ‘A130'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | => ⊥(‘A130'')
//│ | | | | | | | | | | | | => (A39_128' | ⊥(‘A130''))
//│ | | | | | | | | | | | => 'X151_163'
//│ | | | | | | | | | | => 'X151_160'
//│ | | | | | | | | | | EXTR[+] 'X151_152'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | EXTR[+] 'X151_163' || 1 .. 1024  1 true
//│ | | | | | | | | | | | => 'X151_163'
//│ | | | | | | | | | | | EXTR[+] (A39_141'' & ⊤(‘A142''')) || 1 .. 1024  2 false
//│ | | | | | | | | | | | | EXTR[+] A39_141'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | EXTR[+] A39_162' || 1 .. 1024  1 true
//│ | | | | | | | | | | | | | => A39_162'
//│ | | | | | | | | | | | | | EXTR[+] ⊤(‘A39') || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | => ⊤(‘A39')
//│ | | | | | | | | | | | | | EXTR[+] ((‘A130'' & A39_129') & ~(⊥(‘A142'''))) || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | EXTR[+] (‘A130'' & A39_129') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | EXTR[+] ‘A130'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | => ⊤(‘A130'')
//│ | | | | | | | | | | | | | | | EXTR[+] A39_129' || 1 .. 1024  1 true
//│ | | | | | | | | | | | | | | | => A39_129'
//│ | | | | | | | | | | | | | | => (⊤(‘A130'') & A39_129')
//│ | | | | | | | | | | | | | | EXTR[+] ~(⊥(‘A142''')) || 1 .. 1024  0 true
//│ | | | | | | | | | | | | | | => ~(⊥(‘A142'''))
//│ | | | | | | | | | | | | | => ((⊤(‘A130'') & A39_129') & ~(⊥(‘A142''')))
//│ | | | | | | | | | | | | => A39_165'
//│ | | | | | | | | | | | | EXTR[+] ⊤(‘A142''') || 1 .. 1024  0 true
//│ | | | | | | | | | | | | => ⊤(‘A142''')
//│ | | | | | | | | | | | => (A39_165' & ⊤(‘A142'''))
//│ | | | | | | | | | | | EXTR[+] (‘A130'' & A39_129') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | EXTR[+] ‘A130'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | => ⊤(‘A130'')
//│ | | | | | | | | | | | | EXTR[+] A39_129' || 1 .. 1024  1 true
//│ | | | | | | | | | | | | => A39_129'
//│ | | | | | | | | | | | => (⊤(‘A130'') & A39_129')
//│ | | | | | | | | | | => 'X151_164'
//│ | | | | | | | | | => K[? :> 'X151_160' <: 'X151_164']
//│ | | | | | | | | | EXTR[+] K[? :> 'X151_153'' <: 'X151_152''] || 1 .. 1024  2 false
//│ | | | | | | | | | | EXTR[-] 'X151_153'' || 1 .. 1024  2 false
//│ | | | | | | | | | | => 'X151_160'
//│ | | | | | | | | | | EXTR[+] 'X151_152'' || 1 .. 1024  2 false
//│ | | | | | | | | | | => 'X151_164'
//│ | | | | | | | | | => K[? :> 'X151_160' <: 'X151_164']
//│ | | | | | | | | => (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],)
//│ | | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | | | Reconstraining 'X151_160'
//│ | | | | | | | | | Reconstraining A39_161'
//│ | | | | | | | | | Reconstraining A39_162'
//│ | | | | | | | | | Reconstraining 'X151_163'
//│ | | | | | | | | | Reconstraining 'X151_164'
//│ | | | | | | | | | Reconstraining A39_165'
//│ | | | | | | | | EXTR LHS  ~>  (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],)  to 1
//│ | | | | | | | |  where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: A39_129'
//│ 		A39_129' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ 		'X151_160' <: (⊥(‘A142''') | A39_161') & 'X151_163'
//│ 		A39_161' <: ⊥(‘A39') & A39_162'
//│ 		A39_162' <: ((A39_128' | ⊥(‘A130'')) | ~(⊤(‘A142''')))
//│ 		'X151_163' <: (A39_128' | ⊥(‘A130''))
//│ 		'X151_164' :> 'X151_163' | (A39_165' & ⊤(‘A142''')) | (⊤(‘A130'') & A39_129')
//│ 		A39_165' :> A39_162' | ⊤(‘A39') | ((⊤(‘A130'') & A39_129') & ~(⊥(‘A142''')))
//│ | | | | | | | | 2. C (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],) <! α131'    (2)
//│ | | | | | | | | | NEW α131' LB (1)
//│ | | | | | | finishing branch: [(#KS<Object,K>,{A: mut A39_128'..A39_129'})] + List() and [α131'] | ⊥
//│ | | | | | | finishing case K[‘L126'] <: (#KS<Object,K> & {A: mut A39_128'..A39_129'})
//│ | | | | | | CONSTRAIN K[‘L126'] <! (#KS<Object,K> & {A: mut A39_128'..A39_129'})
//│ | | | | | |   where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: A39_129'
//│ 		A39_129' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | 1. C K[‘L126'] <! (#KS<Object,K> & {A: mut A39_128'..A39_129'})    (0)
//│ | | | | | | | 1. C K[‘L126'] <! #KS<Object,K>    (2)
//│ | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | Set T36_166' ~> T36'
//│ | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | 1. C ((#K<Object> & #KS<Object,K>) & {T: mut ‘L126'..‘L126'}) <! #KS<Object,K>    (4)
//│ | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | 1. C K[‘L126'] <! {A: mut A39_128'..A39_129'}    (2)
//│ | | | | | | | | Assigning T :: T36' := ‘L126' where 
//│ | | | | | | | | Set T36_167' ~> T36'
//│ | | | | | | | | Assigned Some(‘L126')
//│ | | | | | | | | 1. ARGH  DNF(1, #KS<Object,K>{T: mut ‘L126'..‘L126'})  <!  DNF(1, {A: mut A39_128'..A39_129'})
//│ | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | Consider #KS<Object,K>{T: mut ‘L126'..‘L126'} <: DNF(1, {A: mut A39_128'..A39_129'})
//│ | | | | | | | | | Possible: List({A: mut A39_128'..A39_129'})
//│ | | | | | | | | | 1. A  #KS<Object,K>{T: mut ‘L126'..‘L126'}  %  List()  <!  List({A: mut A39_128'..A39_129'})  %  ⊥
//│ | | | | | | | | | | 1. A  #KS<Object,K>{T: mut ‘L126'..‘L126'}  %  List()  <!  List()  %  {A:mut A39_128'..A39_129'}
//│ | | | | | | | | | | | 1. A  #KS<Object,K>{T: mut ‘L126'..‘L126'}  %  List()  <!  List()  %  |{A:mut A39_128'..A39_129'}
//│ | | | | | | | | | | | | Looking up field A in Some(KS) & TreeSet() & {...}
//│ | | | | | | | | | | | | | Lookup KS.A : Some(mut A39'..A39') where 
//│ | | | | | | | | | | | | | Lookup: field not found, creating new bounds
//│ | | | | | | | | | | | | | Fresh[0] KS.A : Some(mut ⊥(‘A39')..⊤(‘A39')..⊥(‘A39')..⊤(‘A39')) where Some()
//│ | | | | | | | | | | | | |   & None  (from refinement)
//│ | | | | | | | | | | | | 1. C ⊥(‘A39')..⊤(‘A39') <! A39_129'    (2)
//│ | | | | | | | | | | | | | 1. C ⊤(‘A39') <! A39_129'    (4)
//│ | | | | | | | | | | | | | | NEW A39_129' LB (0)
//│ | | | | | | | | | | | | | | 1. C ⊤(‘A39') <! ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))    (6)
//│ | | | | | | | | | | | | | | | 1. ARGH  DNF(0, {}∧⊤(‘A39'))  <!  DNF(0, ~(⊤(‘A130'')) | {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | Consider {}∧⊤(‘A39') <: DNF(0, ~(⊤(‘A130'')) | {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | Possible: List(~(⊤(‘A130'')), {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | 1. A  {}∧⊤(‘A39')  %  List()  <!  List(~(⊤(‘A130'')), ⊥(‘A39'))  %  ⊥
//│ | | | | | | | | | | | | | | | | | 1. A  {}∧⊤(‘A39')  %  List(⊤(‘A130''))  <!  List(⊥(‘A39'))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | 1. A  {}∧⊤(‘A39')∧⊤(‘A130'')  %  List()  <!  List(⊥(‘A39'))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | 1. A  {}∧⊤(‘A39')∧⊤(‘A130'')  %  List()  <!  List()  %  ⊥(‘A39')
//│ | | | | | | | | | | | | | | | | | | | | Tag checking TreeSet(⊤(‘A39'), ⊤(‘A130'')) List(⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | CONSTRAINT FAILURE: ⊤(‘A39') <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | allVarPols: +A39'
//│ | | | | | | | | | | | | | | | | | | | | normLike[+] ‘A39'
//│ | | | | | | | | | | | | | | | | | | | | | norm[+] ‘A39'
//│ | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(1, {}∧‘A39')
//│ | | | | | | | | | | | | | | | | | | | | | ~> ‘A39'
//│ | | | | | | | | | | | | | | | | | | | | allVarPols: 
//│ | | | | | | | | | | | | | | | | | | | | normLike[-] ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | norm[-] ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(0, ~(⊤(‘A130'')) | {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | | | | | | | norm[+] ⊤(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(0, {}∧⊤(‘A130''))
//│ | | | | | | | | | | | | | | | | | | | | | | ~> ⊤(‘A130'')
//│ | | | | | | | | | | | | | | | | | | | | | ~> (⊥(‘A39') | ~(⊤(‘A130'')))
//│ | | | | | | | | | | | | | | | | | | | | CONSTRAIN #error<> <! α131'
//│ | | | | | | | | | | | | | | | | | | | |   where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: A39_129'
//│ 		A39_129' :> ⊤(‘A39') | ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ 		α131' :> (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],) | #error<>
//│ 		'X151_160' <: (⊥(‘A142''') | A39_161') & 'X151_163'
//│ 		A39_161' <: ⊥(‘A39') & A39_162'
//│ 		A39_162' <: ((A39_128' | ⊥(‘A130'')) | ~(⊤(‘A142''')))
//│ 		'X151_163' <: (A39_128' | ⊥(‘A130''))
//│ 		'X151_164' :> 'X151_163' | (A39_165' & ⊤(‘A142''')) | (⊤(‘A130'') & A39_129')
//│ 		A39_165' :> A39_162' | ⊤(‘A39') | ((⊤(‘A130'') & A39_129') & ~(⊥(‘A142''')))
//│ | | | | | | | | | | | | | | | | | | | | 1. C #error<> <! α131'    (0)
//│ | | | | | | | | | | | | | | | | | | | | | NEW α131' LB (0)
//│ ╔══[ERROR] Type error in `case` expression
//│ ║  l.42: 	  if l is KS(e1) and r is KS(e2) then [e1, e2] as [K['X], K['X]]
//│ ║        	     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type variable `A` leaks out of its scope
//│ ║  l.18: 	class KS[type A](ev: K[A]) extends K[S[A]]
//│ ║        	              ^
//│ ╙── into expression of type `??A | ~??A0`
//│ TEST CASE FAILURE: There was an unexpected type error
//│ | | | | | | | | | | | | 1. C A39_128' <! ⊥(‘A39')..⊤(‘A39')    (2)
//│ | | | | | | | | | | | | | 1. C A39_128' <! ⊥(‘A39')    (4)
//│ | | | | | | | | | | | | | | NEW A39_128' UB (0)
//│ | | | | | | | | | | | | | | 1. C ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <! ⊥(‘A39')    (6)
//│ | | | | | | | | | | | | | | | 1. ARGH  DNF(0, {}∧⊤(‘A39')∧⊤(‘A142''')∧~(⊥(‘A130'')))  <!  DNF(0, {}∧⊥(‘A39'))
//│ | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | Consider {}∧⊤(‘A39')∧⊤(‘A142''') <: DNF(0, {}∧⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | Possible: List({}∧⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | 1. A  {}∧⊤(‘A39')∧⊤(‘A142''')  %  List()  <!  List(⊥(‘A130''))  %  ⊥
//│ | | | | | | | | | | | | | | | | | 1. A  {}∧⊤(‘A39')∧⊤(‘A142''')  %  List()  <!  List()  %  ⊥(‘A130'')
//│ | | | | | | | | | | | | | | | | | | Tag checking TreeSet(⊤(‘A39'), ⊤(‘A142''')) List(⊥(‘A130''))
//│ | | | | | | | | | | | | | | | | | | CONSTRAINT FAILURE: ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ⊥(‘A39')
//│ | | | | | | | | | | | | | | | | | | allVarPols: +A39'
//│ | | | | | | | | | | | | | | | | | | normLike[+] ‘A39'
//│ | | | | | | | | | | | | | | | | | | | norm[+] ‘A39'
//│ | | | | | | | | | | | | | | | | | | | | DNF: DNF(1, {}∧‘A39')
//│ | | | | | | | | | | | | | | | | | | | ~> ‘A39'
//│ | | | | | 1. : α131'
//│ | | | | 1. : α131'
//│ | | | 1. : α131'
//│ | | 1. : ((l: K[‘L126'], r: K[‘L126'],) -> α131')
//│ | | CONSTRAIN ((l: K[‘L126'], r: K[‘L126'],) -> α131') <! fr168'
//│ | |   where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ⊥(‘A39') & A39_129'
//│ 		A39_129' :> ⊤(‘A39') | ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ 		α131' :> #error<> | (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],) | #error<>
//│ 		'X151_160' <: (⊥(‘A142''') | A39_161') & 'X151_163'
//│ 		A39_161' <: ⊥(‘A39') & A39_162'
//│ 		A39_162' <: ((A39_128' | ⊥(‘A130'')) | ~(⊤(‘A142''')))
//│ 		'X151_163' <: (A39_128' | ⊥(‘A130''))
//│ 		'X151_164' :> 'X151_163' | (A39_165' & ⊤(‘A142''')) | (⊤(‘A130'') & A39_129')
//│ 		A39_165' :> A39_162' | ⊤(‘A39') | ((⊤(‘A130'') & A39_129') & ~(⊥(‘A142''')))
//│ | | 1. C ((l: K[‘L126'], r: K[‘L126'],) -> α131') <! fr168'    (0)
//│ | | | NEW fr168' LB (1)
//│ | Completed TypedNuFun(0,NuFunDef(None,Var(fr),None,List(TypeName(L)),Left(Lam(Tup(List((Some(Var(l)),Fld(_,TyApp(Var(K),List(TypeName(L))))), (Some(Var(r)),Fld(_,TyApp(Var(K),List(TypeName(L))))))),Blk(List(If(IfThen(App(Var(and),Tup(List((None,Fld(_,App(Var(is),Tup(List((None,Fld(_,Var(l))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(e1))))))))))))), (None,Fld(_,App(Var(is),Tup(List((None,Fld(_,Var(r))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(e2)))))))))))))))),Asc(Tup(List((None,Fld(_,Var(e1))), (None,Fld(_,Var(e2))))),Tuple(List((None,Field(None,AppliedType(TypeName(K),List('X)))), (None,Field(None,AppliedType(TypeName(K),List('X)))))))),None)))))),((l: K[‘L126'], r: K[‘L126'],) -> α131')) where 
//│ 		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ⊥(‘A39') & A39_129'
//│ 		A39_129' :> ⊤(‘A39') | ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ 		α131' :> #error<> | (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],) | #error<>
//│ 		'X151_160' <: (⊥(‘A142''') | A39_161') & 'X151_163'
//│ 		A39_161' <: ⊥(‘A39') & A39_162'
//│ 		A39_162' <: ((A39_128' | ⊥(‘A130'')) | ~(⊤(‘A142''')))
//│ 		'X151_163' <: (A39_128' | ⊥(‘A130''))
//│ 		'X151_164' :> 'X151_163' | (A39_165' & ⊤(‘A142''')) | (⊤(‘A130'') & A39_129')
//│ 		A39_165' :> A39_162' | ⊤(‘A39') | ((⊤(‘A130'') & A39_129') & ~(⊥(‘A142''')))
//│ | Typing unit statements
//│ | : None
//│ ======== TYPED ========
//│ fun fr: ‹∀ 0. ((l: K[‘L126'], r: K[‘L126'],) -> α131')› where 
//│ |		A39_128' :> ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ⊥(‘A39') & A39_129'
//│ |		A39_129' :> ⊤(‘A39') | ((⊤(‘A142''') & ⊤(‘A39')) & ~(⊥(‘A130''))) <: ((~(⊤(‘A130'')) | ⊥(‘A142''')) | ⊥(‘A39'))
//│ |		α131' :> #error<> | (K[? :> 'X151_160' <: 'X151_164'], K[? :> 'X151_160' <: 'X151_164'],) | #error<>
//│ |		'X151_160' <: (⊥(‘A142''') | A39_161') & 'X151_163'
//│ |		A39_161' <: ⊥(‘A39') & A39_162'
//│ |		A39_162' <: ((A39_128' | ⊥(‘A130'')) | ~(⊤(‘A142''')))
//│ |		'X151_163' <: (A39_128' | ⊥(‘A130''))
//│ |		'X151_164' :> 'X151_163' | (A39_165' & ⊤(‘A142''')) | (⊤(‘A130'') & A39_129')
//│ |		A39_165' :> A39_162' | ⊤(‘A39') | ((⊤(‘A130'') & A39_129') & ~(⊥(‘A142''')))
//│ fun fr: forall 'L 'X. (l: K['L], r: K['L]) -> (error | [K[in ??A & ??A0 & 'X out 'X | ??A1 & ??A2], K[in ??A & ??A0 & 'X out 'X | ??A1 & ??A2]])





fun sig: (K['L], K['L]) -> Int
//│ fun sig: forall 'L. (K['L], K['L]) -> Int

// :d
fun fr[L](l: K[L], r: K[L]) =
  if l is KS(e1) and r is KS(e2) then sig(e1, e2)
//│ ╔══[ERROR] Type mismatch in `case` expression:
//│ ║  l.822: 	  if l is KS(e1) and r is KS(e2) then sig(e1, e2)
//│ ║         	                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type `??A & ??A0 & ~??A1` does not match type `??A2 | ~??A3`
//│ ║  l.817: 	fun sig: (K['L], K['L]) -> Int
//│ ║         	            ^^
//│ ╟── Note: type parameter A is defined at:
//│ ║  l.18: 	class KS[type A](ev: K[A]) extends K[S[A]]
//│ ╙──      	              ^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ ╔══[ERROR] Type error in `case` expression
//│ ║  l.822: 	  if l is KS(e1) and r is KS(e2) then sig(e1, e2)
//│ ║         	     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── type variable `A` leaks out of its scope
//│ ║  l.18: 	class KS[type A](ev: K[A]) extends K[S[A]]
//│ ║        	              ^
//│ ╟── into type `??A | ~??A0`
//│ ║  l.817: 	fun sig: (K['L], K['L]) -> Int
//│ ║         	                   ^^
//│ ╟── Note: constraint arises from type variable:
//│ ║  l.817: 	fun sig: (K['L], K['L]) -> Int
//│ ╙──       	            ^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ fun fr: forall 'L. (l: K['L], r: K['L]) -> (Int | error)




