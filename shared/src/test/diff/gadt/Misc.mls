:NewDefs

class Ty[type T]
//│ class Ty[T] {
//│   constructor()
//│ }

abstract class Foo[type A](val a: A): Bar | Baz
module Bar extends Foo[Int](1)
module Baz extends Foo[Bool](true)
//│ abstract class Foo[A](a: A): Bar | Baz
//│ module Bar extends Foo
//│ module Baz extends Foo

fun foo(t)(x: Foo[t.T]): t.T = if x is 
    Bar then x.a
    Baz then x.a
//│ fun foo: forall 'T 'T0. {T :> 1 | true | 'T <: 'T0} -> (x: Foo[in 'T out 'T0]) -> 'T0

foo(new Ty)(Bar)
//│ 1 | true
//│ res
//│     = 1

abstract class S[type T]: A | B
module A extends S[Int]
module B extends S[Bool]
//│ abstract class S[T]: A | B
//│ module A extends S
//│ module B extends S

fun f(x: S['a]) = if x is
    A then 1 : x.T
    B then 2 : x.T
//│ fun f: forall 'a. (x: S['a]) -> ('a & (Int | false | true))
//│   where
//│     'a :> 2

f(A)
//│ Int
//│ res
//│     = 1

:e
f(B)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.45: 	f(B)
//│ ║        	^^^^
//│ ╟── integer literal of type `2` is not an instance of type `Bool`
//│ ║  l.34: 	    B then 2 : x.T
//│ ║        	           ^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.27: 	module B extends S[Bool]
//│ ║        	                   ^^^^
//│ ╟── Note: type parameter T is defined at:
//│ ║  l.25: 	abstract class S[type T]: A | B
//│ ╙──      	                      ^
//│ 2 | error | false | true
//│ res
//│     = 2

:e
fun f(x: S): x.T = if x is A then 1 else 0
//│ ╔══[ERROR] Type error in `case` expression
//│ ║  l.63: 	fun f(x: S): x.T = if x is A then 1 else 0
//│ ║        	                      ^^^^^^^^^^^^^^^^^^^^
//│ ╟── type variable `T` leaks out of its scope
//│ ║  l.63: 	fun f(x: S): x.T = if x is A then 1 else 0
//│ ╙──      	                                         ^
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

fun f(x: S[?]) = if x is 
    A then 1 : x.T
    B then true : x.T
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

f(A)
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

fun f(x: S[?]): x.T = if x is 
    A then 1 : x.T
    B then true : x.T
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

f(A)
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

abstract class C[type S, type T]: R[S | T] | I[S]   // TODO just a trick
class R[A] extends C[A, A]
class I[A](val f: A => Int) extends C[A, Int]
//│ abstract class C[S, T]: I[S] | R[S | T]
//│ class R[A] extends C {
//│   constructor()
//│ }
//│ class I[A](f: A -> Int) extends C

fun foo[A, B](x: A, ev: C[A, B]): B = if ev is 
    R then (x : ev.S) : ev.T
    I(f) then ev.f(x : ev.S) : ev.T
//│ fun foo: forall 'A 'B. (x: 'A, ev: C['A, 'B]) -> 'B

foo(true, new R)
//│ true
//│ res
//│     = true

foo(1, I(x => x + 1))
//│ Int
//│ res
//│     = 2

module Foo { val a = 1 }
//│ module Foo {
//│   val a: 1
//│ }

Foo.a
//│ 1
//│ res
//│     = 1

abstract class Option[type out T]: None | Some[T]
module None extends Option[nothing]
class Some[A](get: A) extends Option[A]
//│ abstract class Option[T]: None | Some[T]
//│ module None extends Option
//│ class Some[A](get: A) extends Option

fun optToInt(w: Option[?]) = if w is Some then 1 else 0
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)


:d
:s
optToInt(Some(11))
//│ 0. Typing TypingUnit(List(App(Var(optToInt),Tup(List((None,Fld(_,App(Var(Some),Tup(List((None,Fld(_,IntLit(11)))))))))))))
//│ | Typing unit statements
//│ | | 0. Typing term optToInt(Some(11,),)
//│ | | | 0. Typing term optToInt
//│ | | | | Completing fun optToInt = (w: Option‹?›,) => if (is(w, Some,)) then 1 else 0
//│ | | | | | Type params 
//│ | | | | | Params 
//│ | | | | | 1. Typing term (w: Option‹?›,) => if (is(w, Some,)) then 1 else 0
//│ | | | | | | 1. Typing pattern [w: Option‹?›,]
//│ | | | | | | | 1. Typing pattern w : Option[?]
//│ | | | | | | | | Typing type AppliedType(TypeName(Option),List(TypeName(?)))
//│ | | | | | | | | | vars=Map() newDefsInfo=Map()
//│ | | | | | | | | | 1. type AppliedType(TypeName(Option),List(TypeName(?)))
//│ | | | | | | | | | => Option[? :> ⊥ <: ⊤]
//│ | | | | | | | | => Option[? :> ⊥ <: ⊤] ——— 
//│ | | | | | | | 1. : Option[? :> ⊥ <: ⊤]
//│ | | | | | | 1. : (w: Option[? :> ⊥ <: ⊤],)
//│ | | | | | | 1. Typing term if (is(w, Some,)) then 1 else 0
//│ | | | | | | | [Desugarer.destructPattern] scrutinee = Var(w); pattern = Var(Some)
//│ | | | | | | | [Desugarer.destructPattern] Result: «w is Var(Some)»
//│ | | | | | | | Desugared term: case w of { Some => 1; _ => 0 }
//│ | | | | | | | 1. Typing term case w of { Some => 1; _ => 0 }
//│ | | | | | | | | 1. Typing term w
//│ | | | | | | | | 1. : Option[? :> ⊥ <: ⊤]
//│ | | | | | | | | CONSTRAIN Option[? :> ⊥ <: ⊤] <! Object
//│ | | | | | | | |   where 
//│ | | | | | | | | 1. C Option[? :> ⊥ <: ⊤] <! Object    (0)
//│ | | | | | | | | | Assigning T :: T321' := ? :> ⊥ <: ⊤
//│ | | | | | | | | | Set T321_342 ~> T321'
//│ | | | | | | | | | Assigned Some(⊥..⊤)
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.$anonfun$expandWith$1(TyperHelpers.scala:1129)
//│ 	at: scala.Option.map(Option.scala:242)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.expandWith(TyperHelpers.scala:1097)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.expandWith$(TyperHelpers.scala:1096)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expandWith(TyperDatatypes.scala:429)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.expand(TyperHelpers.scala:1090)
//│ 	at: mlscript.TyperHelpers$TypeRefImpl.expand$(TyperHelpers.scala:1080)
//│ 	at: mlscript.TyperDatatypes$TypeRef.expand(TyperDatatypes.scala:429)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$111(ConstraintSolver.scala:995)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$111$adapted(ConstraintSolver.scala:807)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:119)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrainImpl$106(ConstraintSolver.scala:807)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.ConstraintSolver.recImpl$1(ConstraintSolver.scala:740)
//│ 	at: mlscript.ConstraintSolver.rec$1(ConstraintSolver.scala:720)
//│ 	at: mlscript.ConstraintSolver.constrainImpl(ConstraintSolver.scala:1315)
//│ 	at: mlscript.ConstraintSolver.constrain(ConstraintSolver.scala:211)
//│ 	at: mlscript.Typer.con$1(Typer.scala:819)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:1321)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:1510)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:1332)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:1510)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:1087)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:1510)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.$anonfun$complete$10(NuTypeDefs.scala:1170)
//│ 	at: mlscript.utils.package$GenHelper$.$bar$greater$extension(package.scala:119)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.$anonfun$complete$8(NuTypeDefs.scala:1169)
//│ 	at: mlscript.Typer$Ctx.nextLevel(Typer.scala:88)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.$anonfun$complete$3(NuTypeDefs.scala:1167)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.$anonfun$complete$1(NuTypeDefs.scala:1826)
//│ 	at: scala.Option.getOrElse(Option.scala:201)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.complete(NuTypeDefs.scala:1119)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.complete$(NuTypeDefs.scala:1118)
//│ 	at: mlscript.TyperDatatypes$DelayedTypeInfo.complete(TyperDatatypes.scala:55)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.typeSignature(NuTypeDefs.scala:1834)
//│ 	at: mlscript.NuTypeDefs$DelayedTypeInfoImpl.typeSignature$(NuTypeDefs.scala:1828)
//│ 	at: mlscript.TyperDatatypes$DelayedTypeInfo.typeSignature(TyperDatatypes.scala:55)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$11(Typer.scala:927)
//│ 	at: scala.Option.fold(Option.scala:263)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:893)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:1510)
//│ 	at: mlscript.Typer.typeMonomorphicTerm(Typer.scala:788)
//│ 	at: mlscript.Typer.$anonfun$typeTerm$2(Typer.scala:1182)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.Typer.typeTerm(Typer.scala:1510)
//│ 	at: mlscript.NuTypeDefs.go$1(NuTypeDefs.scala:656)
//│ 	at: mlscript.NuTypeDefs.$anonfun$typeTypingUnit$19(NuTypeDefs.scala:686)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.NuTypeDefs.$anonfun$typeTypingUnit$2(NuTypeDefs.scala:686)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:32)
//│ 	at: mlscript.NuTypeDefs.typeTypingUnit(NuTypeDefs.scala:532)
//│ 	at: mlscript.DiffTests.rec$1(DiffTests.scala:521)
//│ 	at: mlscript.DiffTests.$anonfun$new$3(DiffTests.scala:1037)
//│ 	at: org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
//│ 	at: org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
//│ 	at: org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
//│ 	at: org.scalatest.Transformer.apply(Transformer.scala:22)
//│ 	at: org.scalatest.Transformer.apply(Transformer.scala:20)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)
//│ 	at: org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
//│ 	at: org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
//│ 	at: mlscript.DiffTests.org$scalatest$concurrent$TimeLimitedTests$$super$withFixture(DiffTests.scala:45)
//│ 	at: org.scalatest.concurrent.TimeLimitedTests.$anonfun$withFixture$3(TimeLimitedTests.scala:154)
//│ 	at: org.scalatest.enablers.Timed$$anon$1.timeoutAfter(Timed.scala:127)
//│ 	at: org.scalatest.concurrent.TimeLimits$.failAfterImpl(TimeLimits.scala:282)
//│ 	at: org.scalatest.concurrent.TimeLimitedTests.withFixture(TimeLimitedTests.scala:153)
//│ 	at: org.scalatest.concurrent.TimeLimitedTests.withFixture$(TimeLimitedTests.scala:150)
//│ 	at: mlscript.DiffTests.withFixture(DiffTests.scala:45)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)
//│ 	at: org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)
//│ 	at: mlscript.DiffTests.org$scalatest$OneInstancePerTest$$super$runTest(DiffTests.scala:45)
//│ 	at: org.scalatest.OneInstancePerTest.runTest(OneInstancePerTest.scala:131)
//│ 	at: org.scalatest.OneInstancePerTest.runTest$(OneInstancePerTest.scala:123)
//│ 	at: mlscript.DiffTests.org$scalatest$ParallelTestExecution$$super$runTest(DiffTests.scala:45)
//│ 	at: org.scalatest.ParallelTestExecution.runTest(ParallelTestExecution.scala:164)
//│ 	at: org.scalatest.ParallelTestExecution.runTest$(ParallelTestExecution.scala:148)
//│ 	at: mlscript.DiffTests.runTest(DiffTests.scala:45)
//│ 	at: org.scalatest.OneInstancePerTest.runTests(OneInstancePerTest.scala:181)
//│ 	at: org.scalatest.OneInstancePerTest.runTests$(OneInstancePerTest.scala:172)
//│ 	at: mlscript.DiffTests.org$scalatest$ParallelTestExecution$$super$runTests(DiffTests.scala:45)
//│ 	at: org.scalatest.ParallelTestExecution.runTests(ParallelTestExecution.scala:97)
//│ 	at: org.scalatest.ParallelTestExecution.runTests$(ParallelTestExecution.scala:79)
//│ 	at: mlscript.DiffTests.runTests(DiffTests.scala:45)
//│ 	at: org.scalatest.Suite.run(Suite.scala:1114)
//│ 	at: org.scalatest.Suite.run$(Suite.scala:1096)
//│ 	at: org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1563)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)
//│ 	at: org.scalatest.SuperEngine.runImpl(Engine.scala:535)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)
//│ 	at: org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)
//│ 	at: mlscript.DiffTests.org$scalatest$ParallelTestExecution$$super$run(DiffTests.scala:45)
//│ 	at: org.scalatest.ParallelTestExecution.run(ParallelTestExecution.scala:261)
//│ 	at: org.scalatest.ParallelTestExecution.run$(ParallelTestExecution.scala:258)
//│ 	at: mlscript.DiffTests.run(DiffTests.scala:45)
//│ 	at: org.scalatest.tools.DistributedTestRunnerSuite.run(DistributedTestRunnerSuite.scala:22)
//│ 	at: org.scalatest.tools.SuiteRunner.run(SuiteRunner.scala:47)
//│ 	at: java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
//│ 	at: java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
//│ 	at: java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
//│ 	at: java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
//│ 	at: java.base/java.lang.Thread.run(Thread.java:833)

optToInt(Some(1) as Option[Int])
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

optToInt(None)
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

optToInt(None as Option[nothing])
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

let x = Some(Some(1))
let y = Some(None)
//│ let x: Some['A]
//│ let y: Some['A0]
//│ where
//│   'A0 :> None
//│   'A :> Some['A1]
//│   'A1 :> 1
//│ x
//│   = Some {}
//│ y
//│   = Some {}

x : Option[Option[Int]]
//│ Option[Option[Int]]
//│ res
//│     = Some {}

y : Option[Option[nothing]]
//│ Option[Option[nothing]]
//│ res
//│     = Some {}

abstract class W[type T]: MkW[?]
class MkW[A](val w: A) extends W[Ty[A]]
//│ abstract class W[T]: MkW[anything]
//│ class MkW[A](w: A) extends W

fun test(w: W[Ty[Int]]) = if w is MkW(x) then x
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

test(MkW(1))
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

fun test(w: W[?]) = if w is MkW(x) then x
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

test(MkW(1))
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

:e
fun test(a: Some[Int]) = true as a.T
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.468: 	fun test(a: Some[Int]) = true as a.T
//│ ║         	                         ^^^^
//│ ╟── reference of type `true` is not an instance of type `Int`
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.468: 	fun test(a: Some[Int]) = true as a.T
//│ ╙──       	                                  ^^
//│ fun test: (a: Some[Int]) -> Int

fun test() = 
    let a = Some(1)
    true as a.T
//│ fun test: () -> (1 | true)

let x = Some(1)
//│ let x: Some['A]
//│   where
//│     'A :> 1
//│ x
//│   = Some {}

true as x.T
//│ 1 | true
//│ res
//│     = true

let x: Ty[Int]
//│ let x: Ty[Int]
//│ x
//│   = <missing implementation>

1 as x.T
//│ Int
//│ res
//│     = 1

:e
true as x.T
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.506: 	true as x.T
//│ ║         	^^^^
//│ ╟── reference of type `true` is not an instance of type `Int`
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.506: 	true as x.T
//│ ╙──       	         ^^
//│ Int
//│ res
//│     = true

let x: Some[Int]
//│ let x: Some[Int]
//│ x
//│   = <missing implementation>

1 as x.T
//│ Int
//│ res
//│     = 1

:e
true as x.T
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.529: 	true as x.T
//│ ║         	^^^^
//│ ╟── reference of type `true` is not an instance of type `Int`
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.529: 	true as x.T
//│ ╙──       	         ^^
//│ Int
//│ res
//│     = true

1 : (Some(1)).T
//│ 1
//│ res
//│     = 1

abstract class U[type A, type B]: MkU[?]
class MkU[S](x: S) extends U[S, Int]
//│ abstract class U[A, B]: MkU[anything]
//│ class MkU[S](x: S) extends U

fun uu[T](x: MkU[T]): T = if x is
    MkU(s) then s : x.A
//│ fun uu: forall 'T. (x: MkU['T]) -> 'T

uu(MkU(true))
//│ true
//│ res
//│     = true

fun u(x: U[?, ?]): x.A = if x is
    MkU(s) then s : x.A
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

u(MkU(1))
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

:e
fun w[T](x: U[T, T]): Bool = if x is
    MkU(s) then (s : x.A) : x.B
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

fun w[T](x: U[T, T]): Int = if x is
    MkU(s) then (s : x.A) : x.B
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

fun u[T](x: U[T, 'b]): T = if x is
    MkU(s) then s :x.A
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

u(MkU(1))
//│ /!!!\ Uncaught error: scala.NotImplementedError: an implementation is missing
//│ 	at: scala.Predef$.$qmark$qmark$qmark(Predef.scala:344)
//│ 	at: mlscript.NuTypeDefs.$anonfun$refreshHelper2$3(NuTypeDefs.scala:1883)
//│ 	at: scala.collection.LazyZip2$$anon$1$$anon$2.next(LazyZipOps.scala:42)
//│ 	at: scala.collection.immutable.List.prependedAll(List.scala:153)
//│ 	at: scala.collection.immutable.List$.from(List.scala:684)
//│ 	at: scala.collection.immutable.List$.from(List.scala:681)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:115)
//│ 	at: scala.collection.BuildFromLowPriority2$$anon$11.fromSpecific(BuildFrom.scala:112)
//│ 	at: scala.collection.LazyZip2.map(LazyZipOps.scala:37)
//│ 	at: mlscript.NuTypeDefs.refreshHelper2(NuTypeDefs.scala:1863)

abstract class U[type A, type B]: MkU[A]
class MkU[S](x: S) extends U[S, Int]
//│ abstract class U[A, B]: MkU[A]
//│ class MkU[S](x: S) extends U

fun u[T](x: U[T, 'b]): T = if x is
    MkU(s) then s : x.A
//│ fun u: forall 'T 'b. (x: U['T, 'b]) -> 'T

fun w[T](x: U[T, T]): Int = if x is
    MkU(s) then (s : x.A) : x.B
//│ fun w: forall 'T. (x: U['T, 'T]) -> Int

w(MkU(1))
//│ Int
//│ res
//│     = 1

:e
w(MkU(true))
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.662: 	w(MkU(true))
//│ ║         	^^^^^^^^^^^^
//│ ╟── reference of type `true` is not an instance of `Int`
//│ ║  l.662: 	w(MkU(true))
//│ ║         	      ^^^^
//│ ╟── Note: constraint arises from type reference:
//│ ║  l.644: 	class MkU[S](x: S) extends U[S, Int]
//│ ║         	                                ^^^
//│ ╟── Note: type parameter B is defined at:
//│ ║  l.643: 	abstract class U[type A, type B]: MkU[A]
//│ ╙──       	                              ^
//│ Int | error
//│ res
//│     = true

abstract class U[type A, type B]: MkU
class MkU[S](x: S) extends U[S, Int]
//│ abstract class U[A, B]: MkU[anything]
//│ class MkU[S](x: S) extends U

// TODO no variable leaks now ?
fun u[T](x: U[T, 'b]): T = if x is
    MkU(s) then s : x.A
//│ fun u: forall 'T 'b. (x: U['T, 'b]) -> 'T

