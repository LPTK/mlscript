:NewDefs
:DontDistributeForalls

:NoJS



class Z 
class S[type P]
//│ class Z {
//│   constructor()
//│ }
//│ class S[P] {
//│   constructor()
//│ }



(x: S) => x as S[?]
//│ (x: S[?]) -> S[?]


class Foo[type A](val foo: Foo[A])
//│ class Foo[A](foo: Foo[A])


(x: Foo[?]) => x as Foo[?]
//│ (x: Foo[?]) -> Foo[?]

(x: Foo) => x as Foo[?]
//│ (x: Foo[?]) -> Foo[?]

(x: Foo[?]) => x as Foo
//│ (x: Foo[?]) -> Foo[?]

(x: Foo[?]) => x.foo as Foo[?]
//│ (x: Foo[?]) -> Foo[?]

(x: Foo) => x.foo as Foo[?]
//│ (x: Foo[?]) -> Foo[?]

(x: Foo) => x.foo as x.A
//│ ╔══[ERROR] Type error in type ascription
//│ ║  l.42: 	(x: Foo) => x.foo as x.A
//│ ║        	            ^^^^^
//│ ╟── type variable `A` leaks out of its scope
//│ ║  l.23: 	class Foo[type A](val foo: Foo[A])
//│ ╙──      	                           ^^^^^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ (x: Foo[?]) -> ??A

(x: Foo[?]) => x.foo as x.A
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.52: 	(x: Foo[?]) => x.foo as x.A
//│ ║        	               ^^^^^
//│ ╟── type `Foo[?]` does not match type `nothing`
//│ ║  l.23: 	class Foo[type A](val foo: Foo[A])
//│ ║        	                           ^^^^^^
//│ ╟── but it flows into field selection with expected type `nothing`
//│ ║  l.52: 	(x: Foo[?]) => x.foo as x.A
//│ ║        	               ^^^^^
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.52: 	(x: Foo[?]) => x.foo as x.A
//│ ╙──      	                         ^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ (x: Foo[?]) -> anything

(x: Foo) => if x is
  Foo then
    x.foo as x.A
//│ ╔══[ERROR] Type error in `case` expression
//│ ║  l.68: 	(x: Foo) => if x is
//│ ║        	               ^^^^
//│ ║  l.69: 	  Foo then
//│ ║        	^^^^^^^^^^
//│ ║  l.70: 	    x.foo as x.A
//│ ║        	^^^^^^^^^
//│ ╟── type variable `A` leaks out of its scope
//│ ║  l.23: 	class Foo[type A](val foo: Foo[A])
//│ ╙──      	               ^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ (x: Foo[?]) -> (error | ??A & ??A0)

(x: Foo[?]) => if x is
  Foo then
    x.foo as x.A
//│ ╔══[ERROR] Type mismatch in `case` expression:
//│ ║  l.84: 	(x: Foo[?]) => if x is
//│ ║        	                  ^^^^
//│ ║  l.85: 	  Foo then
//│ ║        	^^^^^^^^^^
//│ ║  l.86: 	    x.foo as x.A
//│ ║        	^^^^^^^^^
//│ ╙── expression of type `Foo[in ??A out ??A0 & ?A] & ~??A` does not match type `nothing`
//│ TEST CASE FAILURE: There was an unexpected type error
//│ (x: Foo[?]) -> ??A



fun fz(l) =
  if l is Foo(ea) and 0 is 0 then
    ea : Foo[ea.A]
//│ fun fz: forall 'A 'A0. Foo[in 'A out 'A0] -> Foo[in 'A & 'A0 | ??A out ??A0 & 'A0]




// abstract class K[type T]: KZ | KS[?]
abstract class K[type T]: KS[?]
// class KZ() extends K[Z]
class KS[type A](ev: K[A]) extends K[S[A]]
//│ abstract class K[T]: KS[?]
//│ class KS[A](ev: K[A]) extends K

:d

fun fz(l) =
  if l is KS(ea) then
    ea : K[ea.T]
//│ fun fz: forall 'A 'A0. KS[in 'A0 out 'A] -> K[in S[?] | 'A0 & 'A | ??A out ??A0 & 'A & S[?]]


:d
fun fz(l) =
  if l is KS(ea) then
    () => ea : K[ea.T]
//│ 0. Typing TypingUnit(List(NuFunDef(None,Var(fz),None,List(),Left(Lam(Tup(List((None,Fld(_,Var(l))))),Blk(List(If(IfThen(App(Var(is),Tup(List((None,Fld(_,Var(l))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(ea))))))))))),Blk(List(Lam(Tup(List()),Asc(Var(ea),AppliedType(TypeName(K),List(Selection(TypeName(ea),TypeName(T))))))))),None))))))))
//│ | 0. Created lazy type info for NuFunDef(None,Var(fz),None,List(),Left(Lam(Tup(List((None,Fld(_,Var(l))))),Blk(List(If(IfThen(App(Var(is),Tup(List((None,Fld(_,Var(l))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(ea))))))))))),Blk(List(Lam(Tup(List()),Asc(Var(ea),AppliedType(TypeName(K),List(Selection(TypeName(ea),TypeName(T))))))))),None))))))
//│ | Completing fun fz = (l,) => {if (is(l, KS(ea,),)) then {() => ea : K[ea.T]}}
//│ | | Type params 
//│ | | Params 
//│ | | Type fz polymorphically? true && (0 === 0 || false || false
//│ | | 1. Typing term (l,) => {if (is(l, KS(ea,),)) then {() => ea : K[ea.T]}}
//│ | | | 1. Typing pattern [l,]
//│ | | | | 1. Typing pattern l
//│ | | | | 1. : l211'
//│ | | | 1. : (l211',)
//│ | | | 1. Typing term {if (is(l, KS(ea,),)) then {() => ea : K[ea.T]}}
//│ | | | | 1. Typing term if (is(l, KS(ea,),)) then {() => ea : K[ea.T]}
//│ | | | | | [Desugarer.destructPattern] scrutinee = Var(l); pattern = App(Var(KS),Tup(List((None,Fld(_,Var(ea))))))
//│ | | | | | [Desugarer.destructPattern] Result: «l is Var(KS)»
//│ | | | | | Desugared term: case l of { KS => let $unapp = (KS).unapply(l,) in let ea = ($unapp).0 in {() => ea : K[ea.T]} }
//│ | | | | | 1. Typing term case l of { KS => let $unapp = (KS).unapply(l,) in let ea = ($unapp).0 in {() => ea : K[ea.T]} }
//│ | | | | | | 1. Typing term l
//│ | | | | | | 1. : l211'
//│ | | | | | | CONSTRAIN l211' <! Object
//│ | | | | | |   where 
//│ | | | | | | 1. C l211' <! Object    (0)
//│ | | | | | | | NEW l211' UB (0)
//│ | | | | | | Match arm KS: #KS<Object,K> & {A: mut A160_212'..A160_213'} intl {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}
//│ | | | | | | var rfn: l :: ⊤ & #KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}
//│ | | | | | | 2. Typing term let $unapp = (KS).unapply(l,) in let ea = ($unapp).0 in {() => ea : K[ea.T]}
//│ | | | | | | | 2. Typing term (KS).unapply(l,)
//│ | | | | | | | | 2. Typing term (KS).unapply
//│ | | | | | | | | | 2. Typing term (x::3,) => let _ = x : KS in [(x).#ev,]
//│ | | | | | | | | | | TYPING POLY LAM
//│ | | | | | | | | | | 3. Typing pattern [x::3,]
//│ | | | | | | | | | | | 3. Typing pattern x::3
//│ | | | | | | | | | | | 3. : x216'''
//│ | | | | | | | | | | 3. : (x216''',)
//│ | | | | | | | | | | 3. Typing term let _ = x : KS in [(x).#ev,]
//│ | | | | | | | | | | | 3. Typing term x : KS
//│ | | | | | | | | | | | | 3. Typing term x
//│ | | | | | | | | | | | | 3. : x216'''
//│ | | | | | | | | | | | | Typing type TypeName(KS)
//│ | | | | | | | | | | | | | vars=Map() newDefsInfo=Map()
//│ | | | | | | | | | | | | | 3. type TypeName(KS)
//│ | | | | | | | | | | | | | => #KS<Object,K>
//│ | | | | | | | | | | | | => #KS<Object,K> ——— 
//│ | | | | | | | | | | | | CONSTRAIN x216''' <! #KS<Object,K>
//│ | | | | | | | | | | | |   where 
//│ | | | | | | | | | | | | 3. C x216''' <! #KS<Object,K>    (0)
//│ | | | | | | | | | | | | | NEW x216''' UB (0)
//│ | | | | | | | | | | | 3. : #KS<Object,K>
//│ | | | | | | | | | | | 3. Typing term [(x).#ev,]
//│ | | | | | | | | | | | | 3. Typing term (x).#ev
//│ | | | | | | | | | | | | | 3. Typing term x
//│ | | | | | | | | | | | | | 3. : x216'''
//│ | | | | | | | | | | | | | CONSTRAIN x216''' <! {#ev: #ev217'''}
//│ | | | | | | | | | | | | |   where 
//│ 		x216''' <: #KS<Object,K>
//│ | | | | | | | | | | | | | 3. C x216''' <! {#ev: #ev217'''}    (0)
//│ | | | | | | | | | | | | | | NEW x216''' UB (3)
//│ | | | | | | | | | | | | 3. : #ev217'''
//│ | | | | | | | | | | | 3. : (#ev217''',)
//│ | | | | | | | | | | 3. : (#ev217''',)
//│ | | | | | | | | | | Inferred poly constr: (x216''' -> (#ev217''',))  —— where 
//│ 		x216''' <: {#ev: #ev217'''} & #KS<Object,K>
//│ | | | | | | | | | 2. : ‹∀ 2. (x216''' -> (#ev217''',))›
//│ | | | | | | | | 2. : ‹∀ 2. (x216''' -> (#ev217''',))›
//│ | | | | | | | | 2. Typing term l
//│ | | | | | | | | 2. : (#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')})
//│ | | | | | | | | CONSTRAIN ‹∀ 2. (x216''' -> (#ev217''',))› <! ((#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}) -> α218'')
//│ | | | | | | | |   where 
//│ 		A160_212' <: A160_213'
//│ 		x216''' <: {#ev: #ev217'''} & #KS<Object,K>
//│ | | | | | | | | 2. C ‹∀ 2. (x216''' -> (#ev217''',))› <! ((#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}) -> α218'')    (0)
//│ | | | | | | | | | INST [2]   ‹∀ 2. (x216''' -> (#ev217''',))›
//│ | | | | | | | | |   where  
//│ 		x216''' <: {#ev: #ev217'''} & #KS<Object,K>
//│ | | | | | | | | | TO [2] ~>  (x216_219'' -> (#ev217_220'',))
//│ | | | | | | | | |   where  
//│ 		x216_219'' <: {#ev: #ev217_220''} & #KS<Object,K>
//│ | | | | | | | | | 2. C (x216_219'' -> (#ev217_220'',)) <! ((#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}) -> α218'')    (2)
//│ | | | | | | | | | | 2. C ((#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}),) <! (x216_219'',)    (2)
//│ | | | | | | | | | | | 2. C (#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}) <! x216_219''    (3)
//│ | | | | | | | | | | | | NEW x216_219'' LB (2)
//│ | | | | | | | | | | | | 2. C (#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}) <! {#ev: #ev217_220''}    (6)
//│ | | | | | | | | | | | | | 2. ARGH  DNF(2, #KS<Object,K>{A: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213')})  <!  DNF(2, {#ev: #ev217_220''})
//│ | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | Consider #KS<Object,K>{A: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213')} <: DNF(2, {#ev: #ev217_220''})
//│ | | | | | | | | | | | | | | Possible: List({#ev: #ev217_220''})
//│ | | | | | | | | | | | | | | 2. A  #KS<Object,K>{A: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213')}  %  List()  <!  List({#ev: #ev217_220''})  %  ⊥
//│ | | | | | | | | | | | | | | | 2. A  #KS<Object,K>{A: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213')}  %  List()  <!  List()  %  {#ev:#ev217_220''}
//│ | | | | | | | | | | | | | | | | 2. A  #KS<Object,K>{A: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213')}  %  List()  <!  List()  %  |{#ev:#ev217_220''}
//│ | | | | | | | | | | | | | | | | | Looking up field #ev in Some(KS) & TreeSet() & {...}
//│ | | | | | | | | | | | | | | | | | | Lookup KS.ev : Some(K[‘A160']) where 
//│ | | | | | | | | | | | | | | | | | | Lookup: Found mut (A160_212' | ‘A214'')..(‘A214'' & A160_213')
//│ | | | | | | | | | | | | | | | | | | Fresh[0] KS.ev : Some(K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')]) where Some(
//│ 		A160_212' <: A160_213')
//│ | | | | | | | | | | | | | | | | | |   & None  (from refinement)
//│ | | | | | | | | | | | | | | | | | 2. C K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')] <! #ev217_220''    (5)
//│ | | | | | | | | | | | | | | | | | | NEW #ev217_220'' LB (2)
//│ | | | | | | | | | | | | 2. C (#KS<Object,K> & {A: mut (A160_212' | ‘A214'')..(A160_213' & ‘A214'')}) <! #KS<Object,K>    (6)
//│ | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | 2. C (#ev217_220'',) <! α218''    (2)
//│ | | | | | | | | | | | NEW α218'' LB (2)
//│ | | | | | | | 2. : α218''
//│ | | | | | | | 2. Typing term let ea = ($unapp).0 in {() => ea : K[ea.T]}
//│ | | | | | | | | 2. Typing term ($unapp).0
//│ | | | | | | | | | 2. Typing term $unapp
//│ | | | | | | | | | 2. : α218''
//│ | | | | | | | | | CONSTRAIN α218'' <! {0: α221''}
//│ | | | | | | | | |   where 
//│ 		A160_212' <: A160_213'
//│ 		α218'' :> (#ev217_220'',)
//│ 		#ev217_220'' :> K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')]
//│ | | | | | | | | | 2. C α218'' <! {0: α221''}    (0)
//│ | | | | | | | | | | NEW α218'' UB (2)
//│ | | | | | | | | | | 2. C (#ev217_220'',) <! {0: α221''}    (2)
//│ | | | | | | | | | | | 2. C {0: #ev217_220''} <! {0: α221''}    (4)
//│ | | | | | | | | | | | | 2. C #ev217_220'' <! α221''    (3)
//│ | | | | | | | | | | | | | NEW #ev217_220'' UB (2)
//│ | | | | | | | | | | | | | 2. C K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')] <! α221''    (5)
//│ | | | | | | | | | | | | | | NEW α221'' LB (2)
//│ | | | | | | | | 2. : α221''
//│ | | | | | | | | 2. Typing term {() => ea : K[ea.T]}
//│ | | | | | | | | | 2. Typing term () => ea : K[ea.T]
//│ | | | | | | | | | | TYPING POLY LAM
//│ | | | | | | | | | | 3. Typing pattern []
//│ | | | | | | | | | | 3. : ()
//│ | | | | | | | | | | 3. Typing term ea : K[ea.T]
//│ | | | | | | | | | | | 3. Typing term ea
//│ | | | | | | | | | | | 3. : α221''
//│ | | | | | | | | | | | Typing type AppliedType(TypeName(K),List(Selection(TypeName(ea),TypeName(T))))
//│ | | | | | | | | | | | | vars=Map() newDefsInfo=Map()
//│ | | | | | | | | | | | | 3. type AppliedType(TypeName(K),List(Selection(TypeName(ea),TypeName(T))))
//│ | | | | | | | | | | | | | 3. type Selection(TypeName(ea),TypeName(T))
//│ | | | | | | | | | | | | | | 3. type TypeName(ea)
//│ | | | | | | | | | | | | | | | ty var: Var(ea) : α221''
//│ | | | | | | | | | | | | | | => α221''
//│ | | | | | | | | | | | | | | Type selection : α221'' <=< {T: mut T222'''..T223'''}
//│ | | | | | | | | | | | | | | CONSTRAIN α221'' <! {T: mut T222'''..T223'''}
//│ | | | | | | | | | | | | | |   where 
//│ 		A160_212' <: A160_213'
//│ 		α221'' :> K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')]
//│ | | | | | | | | | | | | | | 3. C α221'' <! {T: mut T222'''..T223'''}    (0)
//│ | | | | | | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | | | | | | EXTR[-] {T: mut T222'''..T223'''} || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | EXTR[+] T222''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | => T222_224''
//│ | | | | | | | | | | | | | | | | EXTR[-] T223''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | => T223_225''
//│ | | | | | | | | | | | | | | | => {T: mut T222_224''..T223_225''}
//│ | | | | | | | | | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | | | | | | | | | | Reconstraining T222_224''
//│ | | | | | | | | | | | | | | | | Reconstraining T223_225''
//│ | | | | | | | | | | | | | | | EXTR RHS  ~>  {T: mut T222_224''..T223_225''}  to 2
//│ | | | | | | | | | | | | | | |  where 
//│ | | | | | | | | | | | | | | | 3. C α221'' <! {T: mut T222_224''..T223_225''}    (2)
//│ | | | | | | | | | | | | | | | | NEW α221'' UB (2)
//│ | | | | | | | | | | | | | | | | 3. C K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')] <! {T: mut T222_224''..T223_225''}    (3)
//│ | | | | | | | | | | | | | | | | | Assigning T :: T157' := (A160_212' | ‘A214'')..(‘A214'' & A160_213') where 
//│ 		A160_212' <: A160_213'
//│ | | | | | | | | | | | | | | | | | Set T157_226'' ~> T157'
//│ | | | | | | | | | | | | | | | | | Assigned Some((A160_212' | ‘A214'')..(‘A214'' & A160_213'))
//│ | | | | | | | | | | | | | | | | | Assigning A :: A160' := ? :> ⊥ <: ⊤
//│ | | | | | | | | | | | | | | | | | Set A160_227 ~> A160'
//│ | | | | | | | | | | | | | | | | | Assigned Some(⊥..⊤)
//│ | | | | | | | | | | | | | | | | | 3. ARGH  DNF(2, #KS<Object,K>{T: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213'), A: mut ..⊤})  <!  DNF(2, {T: mut T222_224''..T223_225''})
//│ | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | Consider #KS<Object,K>{T: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213'), A: mut ..⊤} <: DNF(2, {T: mut T222_224''..T223_225''})
//│ | | | | | | | | | | | | | | | | | | Possible: List({T: mut T222_224''..T223_225''})
//│ | | | | | | | | | | | | | | | | | | 3. A  #KS<Object,K>{T: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213'), A: mut ..⊤}  %  List()  <!  List({T: mut T222_224''..T223_225''})  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | 3. A  #KS<Object,K>{T: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213'), A: mut ..⊤}  %  List()  <!  List()  %  {T:mut T222_224''..T223_225''}
//│ | | | | | | | | | | | | | | | | | | | | 3. A  #KS<Object,K>{T: mut (A160_212' | ‘A214'')..(‘A214'' & A160_213'), A: mut ..⊤}  %  List()  <!  List()  %  |{T:mut T222_224''..T223_225''}
//│ | | | | | | | | | | | | | | | | | | | | | Looking up field T in Some(KS) & TreeSet() & {...}
//│ | | | | | | | | | | | | | | | | | | | | | | Lookup KS.T : Some(mut T157_162'#..T157_162'#) where 
//│ 		T157_162'# := S[‘A160']
//│ | | | | | | | | | | | | | | | | | | | | | | Lookup: Found mut ..⊤
//│ | | | | | | | | | | | | | | | | | | | | | | Fresh[0] KS.T : Some(mut T157_228'''#..T157_228'''#) where Some(
//│ 		T157_228'''# := S[⊥..⊤])
//│ | | | | | | | | | | | | | | | | | | | | | |   & Some(mut (A160_212' | ‘A214'')..(‘A214'' & A160_213'))  (from refinement)
//│ | | | | | | | | | | | | | | | | | | | | | 3. C (T157_228'''# & (‘A214'' & A160_213')) <! T223_225''    (2)
//│ | | | | | | | | | | | | | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | | | | | | | | | | | | | EXTR[+] (T157_228'''# & (‘A214'' & A160_213')) || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] T157_228'''# || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] S[⊥..⊤] || 2 .. 1024  0 true
//│ | | | | | | | | | | | | | | | | | | | | | | | | => S[⊥..⊤]
//│ | | | | | | | | | | | | | | | | | | | | | | | | EXTR[-] S[⊥..⊤] || 2 .. 1024  0 true
//│ | | | | | | | | | | | | | | | | | | | | | | | | => S[⊥..⊤]
//│ | | | | | | | | | | | | | | | | | | | | | | | => T157_229''#
//│ | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] (‘A214'' & A160_213') || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | | | | | | | | | => (‘A214'' & A160_213')
//│ | | | | | | | | | | | | | | | | | | | | | | => (T157_229''# & (‘A214'' & A160_213'))
//│ | | | | | | | | | | | | | | | | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | | | | | | | | | | | | | | | | | No need to reconstrain assigned T157_229''#
//│ | | | | | | | | | | | | | | | | | | | | | | EXTR LHS  ~>  (T157_229''# & (‘A214'' & A160_213'))  to 2
//│ | | | | | | | | | | | | | | | | | | | | | |  where 
//│ 		T157_229''# := S[⊥..⊤]
//│ | | | | | | | | | | | | | | | | | | | | | | 3. C (T157_229''# & (‘A214'' & A160_213')) <! T223_225''    (5)
//│ | | | | | | | | | | | | | | | | | | | | | | | NEW T223_225'' LB (2)
//│ | | | | | | | | | | | | | | | | | | | | | 3. C T222_224'' <! (T157_228'''# | (A160_212' | ‘A214''))    (2)
//│ | | | | | | | | | | | | | | | | | | | | | | wrong level: 2
//│ | | | | | | | | | | | | | | | | | | | | | | EXTR[-] ((T222_224'' & ~(‘A214'')) & ~(A160_212')) || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | | | | | | | | => ((T222_224'' & ~(‘A214'')) & ~(A160_212'))
//│ | | | | | | | | | | | | | | | | | | | | | | EXTR RHS  ~>  ((T222_224'' & ~(‘A214'')) & ~(A160_212'))  to 2
//│ | | | | | | | | | | | | | | | | | | | | | |  where 
//│ 		A160_212' <: A160_213'
//│ | | | | | | | | | | | | | | | | | | | | | | 3. C T222_224'' <! ((T222_224'' & ~(‘A214'')) & ~(A160_212'))    (5)
//│ | | | | | | | | | | | | | | | | | | | | | | | NEW T222_224'' UB (2)
//│ | | | | | | | | | | | | | => T222'''..T223'''
//│ | | | | | | | | | | | | => K[T222'''..T223''']
//│ | | | | | | | | | | | => K[T222'''..T223'''] ——— 
//│ | | | | | | | | | | | CONSTRAIN α221'' <! K[T222'''..T223''']
//│ | | | | | | | | | | |   where 
//│ 		A160_212' <: A160_213'
//│ 		α221'' :> K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')] <: {T: mut T222_224''..T223_225''}
//│ 		T222''' <: T222_224''
//│ 		T223''' :> T223_225''
//│ 		T222_224'' <: ((T222_224'' & ~(‘A214'')) & ~(A160_212'))
//│ 		T223_225'' :> (T157_229''# & (‘A214'' & A160_213'))
//│ 		T157_229''# := S[⊥..⊤]
//│ | | | | | | | | | | | 3. C α221'' <! K[T222'''..T223''']    (0)
//│ | | | | | | | | | | | | wrong level: 3
//│ | | | | | | | | | | | | EXTR[-] K[T222'''..T223'''] || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | EXTR[+] T222'''..T223''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | EXTR[+] T223''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | EXTR[+] T223_225'' || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | => T223_225''
//│ | | | | | | | | | | | | | | => T223_230''
//│ | | | | | | | | | | | | | => T223_230''
//│ | | | | | | | | | | | | | EXTR[-] T222'''..T223''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | EXTR[-] T222''' || 2 .. 1024  3 false
//│ | | | | | | | | | | | | | | | EXTR[-] T222_224'' || 2 .. 1024  2 true
//│ | | | | | | | | | | | | | | | => T222_224''
//│ | | | | | | | | | | | | | | => T222_231''
//│ | | | | | | | | | | | | | => T222_231''
//│ | | | | | | | | | | | | => K[? :> T223_230'' <: T222_231'']
//│ | | | | | | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | | | | | | | Reconstraining T223_230''
//│ | | | | | | | | | | | | | Reconstraining T222_231''
//│ | | | | | | | | | | | | EXTR RHS  ~>  K[? :> T223_230'' <: T222_231'']  to 2
//│ | | | | | | | | | | | |  where 
//│ 		A160_212' <: A160_213'
//│ 		T222_224'' <: ((T222_224'' & ~(‘A214'')) & ~(A160_212'))
//│ 		T223_225'' :> (T157_229''# & (‘A214'' & A160_213'))
//│ 		T157_229''# := S[⊥..⊤]
//│ 		T223_230'' :> T223_225''
//│ 		T222_231'' <: T222_224''
//│ | | | | | | | | | | | | 3. C α221'' <! K[? :> T223_230'' <: T222_231'']    (2)
//│ | | | | | | | | | | | | | NEW α221'' UB (2)
//│ | | | | | | | | | | | | | 3. C K[(A160_212' | ‘A214'')..(‘A214'' & A160_213')] <! K[? :> T223_230'' <: T222_231'']    (5)
//│ | | | | | | | | | | | | | | 3. C T223_230'' <! (A160_212' | ‘A214'')..(‘A214'' & A160_213')    (3)
//│ | | | | | | | | | | | | | | | 3. C T223_230'' <! (A160_212' | ‘A214'')    (6)
//│ | | | | | | | | | | | | | | | | NEW T223_230'' UB (2)
//│ | | | | | | | | | | | | | | | | 3. C T223_225'' <! (A160_212' | ‘A214'')    (9)
//│ | | | | | | | | | | | | | | | | | NEW T223_225'' UB (2)
//│ | | | | | | | | | | | | | | | | | 3. C (T157_229''# & (‘A214'' & A160_213')) <! (A160_212' | ‘A214'')    (11)
//│ | | | | | | | | | | | | | | | | | | Already a subtype by <:<
//│ | | | | | | | | | | | | | | 3. C (A160_212' | ‘A214'')..(‘A214'' & A160_213') <! T222_231''    (3)
//│ | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! T222_231''    (6)
//│ | | | | | | | | | | | | | | | | NEW T222_231'' LB (2)
//│ | | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! T222_224''    (9)
//│ | | | | | | | | | | | | | | | | | NEW T222_224'' LB (2)
//│ | | | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! ((T222_224'' & ~(‘A214'')) & ~(A160_212'))    (11)
//│ | | | | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! (T222_224'' & ~(‘A214''))    (13)
//│ | | | | | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! T222_224''    (15)
//│ | | | | | | | | | | | | | | | | | | | | Cached!
//│ | | | | | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! ~(‘A214'')    (15)
//│ | | | | | | | | | | | | | | | | | | | | 3. ARGH  DNF(2, {}∧‘A214''∧A160_213')  <!  DNF(2, ~(‘A214''))
//│ | | | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | | | Consider {}∧‘A214'' <: DNF(2, ~(‘A214''))
//│ | | | | | | | | | | | | | | | | | | | | | Possible: List(~(‘A214''))
//│ | | | | | | | | | | | | | | | | | | | | | 3. A  {}∧‘A214''  %  List()  <!  List(~(‘A214''))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | 3. A  {}∧‘A214''  %  List(‘A214'')  <!  List()  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | | 3. A  {}∧‘A214''  %  List()  <!  List()  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | | | CONSTRAINT FAILURE: (‘A214'' & A160_213') <: ~(‘A214'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | allVarPols: +A160_214''
//│ | | | | | | | | | | | | | | | | | | | | | | | | normLike[-] ~(‘A214'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | norm[-] ~(‘A214'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(2, ~(‘A214''))
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | norm[+] ‘A214''
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(2, {}∧‘A214'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | ~> ‘A214''
//│ | | | | | | | | | | | | | | | | | | | | | | | | | ~> ~(‘A214'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | allVarPols: +A160_213', +A160_214''
//│ | | | | | | | | | | | | | | | | | | | | | | | | normLike[+] (‘A214'' & A160_213')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | norm[+] (‘A214'' & A160_213')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | | DNF: DNF(2, {}∧‘A214''∧A160_213')
//│ | | | | | | | | | | | | | | | | | | | | | | | | | ~> (‘A214'' & A160_213')
//│ | | | | | | | | | | | | | | | | | | | | | | | | CONSTRAIN #error<> <! K[T222'''..T223''']
//│ | | | | | | | | | | | | | | | | | | | | | | | |   where 
//│ 		A160_212' <: A160_213'
//│ 		T222''' :> T222_231'' <: T222_224''
//│ 		T223''' :> T223_225'' <: T223_230''
//│ 		T222_224'' :> (‘A214'' & A160_213') <: ((T222_224'' & ~(‘A214'')) & ~(A160_212'))
//│ 		T223_225'' :> (T157_229''# & (‘A214'' & A160_213')) <: (A160_212' | ‘A214'')
//│ 		T157_229''# := S[⊥..⊤]
//│ 		T223_230'' :> T223_225'' <: (A160_212' | ‘A214'')
//│ 		T222_231'' :> (‘A214'' & A160_213') <: T222_224''
//│ | | | | | | | | | | | | | | | | | | | | | | | | 3. C #error<> <! K[T222'''..T223''']    (0)
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.126: 	    () => ea : K[ea.T]
//│ ║         	          ^^
//│ ╟── expression of type `A & ?A` does not match type `~A`
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.126: 	    () => ea : K[ea.T]
//│ ╙──       	                   ^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ | | | | | | | | | | | | | | | | | | 3. C (‘A214'' & A160_213') <! ~(A160_212')    (13)
//│ | | | | | | | | | | | | | | | | | | | 3. ARGH  DNF(2, {}∧‘A214''∧A160_213')  <!  DNF(1, ~(A160_212'))
//│ | | | | | | | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | | | | | | | Consider {}∧‘A214'' <: DNF(1, ~(A160_212'))
//│ | | | | | | | | | | | | | | | | | | | | Possible: List(~(A160_212'))
//│ | | | | | | | | | | | | | | | | | | | | 3. A  {}∧‘A214''  %  List()  <!  List(~(A160_212'))  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | 3. A  {}∧‘A214''  %  List(A160_212')  <!  List()  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | 3. A  {}∧‘A214''  %  List()  <!  List()  %  ⊥
//│ | | | | | | | | | | | | | | | | | | | | | | | 3. C A160_212' <! ~(‘A214'')    (8)
//│ | | | | | | | | | | | | | | | | | | | | | | | | wrong level: 2
//│ | | | | | | | | | | | | | | | | | | | | | | | | EXTR[-] ~(‘A214'') || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | | | EXTR[+] ‘A214'' || 1 .. 1024  2 false
//│ | | | | | | | | | | | | | | | | | | | | | | | | | => ⊤(‘A214'')
//│ | | | | | | | | | | | | | | | | | | | | | | | | => ~(⊤(‘A214''))
//│ | | | | | | | | | | | | | | | | | | | | | | | | EXTR RHS  ~>  ~(⊤(‘A214''))  to 1
//│ | | | | | | | | | | | | | | | | | | | | | | | |  where 
//│ | | | | | | | | | | | | | | | | | | | | | | | | 3. C A160_212' <! ~(⊤(‘A214''))    (10)
//│ | | | | | | | | | | | | | | | | | | | | | | | | | NEW A160_212' UB (0)
//│ | | | | | | | | | | 3. : K[T222'''..T223''']
//│ | | | | | | | | | | Inferred poly constr: (() -> K[T222'''..T223'''])  —— where 
//│ 		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ 		T222''' :> T222_231'' <: T222_224''
//│ 		T223''' :> T223_225'' <: T223_230''
//│ 		T222_224'' :> (‘A214'' & A160_213') <: ((T222_224'' & ~(‘A214'')) & ~(A160_212'))
//│ 		T223_225'' :> (T157_229''# & (‘A214'' & A160_213')) <: (A160_212' | ‘A214'')
//│ 		T157_229''# := S[⊥..⊤]
//│ 		T223_230'' :> T223_225'' <: (A160_212' | ‘A214'')
//│ 		T222_231'' :> (‘A214'' & A160_213') <: T222_224''
//│ | | | | | | | | | 2. : ‹∀ 2. (() -> K[T222'''..T223'''])›
//│ | | | | | | | | 2. : ‹∀ 2. (() -> K[T222'''..T223'''])›
//│ | | | | | | | 2. : ‹∀ 2. (() -> K[T222'''..T223'''])›
//│ | | | | | | 2. : ‹∀ 2. (() -> K[T222'''..T223'''])›
//│ | | | | | | CONSTRAIN ‹∀ 2. (() -> K[T222'''..T223'''])› <! α215'
//│ | | | | | |   where 
//│ 		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ 		T222''' :> T222_231'' <: T222_224''
//│ 		T223''' :> T223_225'' <: T223_230''
//│ 		T222_224'' :> (‘A214'' & A160_213') <: ((T222_224'' & ~(‘A214'')) & ~(A160_212'))
//│ 		T223_225'' :> (T157_229''# & (‘A214'' & A160_213')) <: (A160_212' | ‘A214'')
//│ 		T157_229''# := S[⊥..⊤]
//│ 		T223_230'' :> T223_225'' <: (A160_212' | ‘A214'')
//│ 		T222_231'' :> (‘A214'' & A160_213') <: T222_224''
//│ | | | | | | 2. C ‹∀ 2. (() -> K[T222'''..T223'''])› <! α215'    (0)
//│ | | | | | | | wrong level: 2
//│ | | | | | | | EXTR[+] ‹∀ 2. (() -> K[T222'''..T223'''])› || 1 .. 1024  2 false
//│ | | | | | | | | EXTR[+] (() -> K[T222'''..T223''']) || 1 .. 2  3 false
//│ | | | | | | | | | EXTR[-] () || 1 .. 2  0 true
//│ | | | | | | | | | => ()
//│ | | | | | | | | | EXTR[+] K[T222'''..T223'''] || 1 .. 2  3 false
//│ | | | | | | | | | | EXTR[-] T222'''..T223''' || 1 .. 2  3 false
//│ | | | | | | | | | | | EXTR[-] T222''' || 1 .. 2  3 false
//│ | | | | | | | | | | | | EXTR[+] T222_231'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | EXTR[+] (‘A214'' & A160_213') || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | EXTR[+] ‘A214'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | => ⊤(‘A214'')
//│ | | | | | | | | | | | | | | EXTR[+] A160_213' || 1 .. 2  1 true
//│ | | | | | | | | | | | | | | => A160_213'
//│ | | | | | | | | | | | | | => (⊤(‘A214'') & A160_213')
//│ | | | | | | | | | | | | => T222_233'
//│ | | | | | | | | | | | | EXTR[-] T222_224'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | EXTR[-] ((T222_224'' & ~(‘A214'')) & ~(A160_212')) || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | EXTR[-] (T222_224'' & ~(‘A214'')) || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | EXTR[-] T222_224'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | => T222_234'
//│ | | | | | | | | | | | | | | | EXTR[-] ~(‘A214'') || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | | EXTR[+] ‘A214'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | | => ⊤(‘A214'')
//│ | | | | | | | | | | | | | | | => ~(⊤(‘A214''))
//│ | | | | | | | | | | | | | | => (T222_234' & ~(⊤(‘A214'')))
//│ | | | | | | | | | | | | | | EXTR[-] ~(A160_212') || 1 .. 2  1 true
//│ | | | | | | | | | | | | | | => ~(A160_212')
//│ | | | | | | | | | | | | | => ((T222_234' & ~(⊤(‘A214''))) & ~(A160_212'))
//│ | | | | | | | | | | | | => T222_234'
//│ | | | | | | | | | | | => T222_232'''
//│ | | | | | | | | | | => T222_232'''
//│ | | | | | | | | | | EXTR[+] T222'''..T223''' || 1 .. 2  3 false
//│ | | | | | | | | | | | EXTR[+] T223''' || 1 .. 2  3 false
//│ | | | | | | | | | | | | EXTR[+] T223_225'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | EXTR[+] (T157_229''# & (‘A214'' & A160_213')) || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | EXTR[+] T157_229''# || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | EXTR[+] S[⊥..⊤] || 1 .. 2  0 true
//│ | | | | | | | | | | | | | | | => S[⊥..⊤]
//│ | | | | | | | | | | | | | | | EXTR[-] S[⊥..⊤] || 1 .. 2  0 true
//│ | | | | | | | | | | | | | | | => S[⊥..⊤]
//│ | | | | | | | | | | | | | | => T157_237'#
//│ | | | | | | | | | | | | | | EXTR[+] (‘A214'' & A160_213') || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | EXTR[+] ‘A214'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | | => ⊤(‘A214'')
//│ | | | | | | | | | | | | | | | EXTR[+] A160_213' || 1 .. 2  1 true
//│ | | | | | | | | | | | | | | | => A160_213'
//│ | | | | | | | | | | | | | | => (⊤(‘A214'') & A160_213')
//│ | | | | | | | | | | | | | => (T157_237'# & (⊤(‘A214'') & A160_213'))
//│ | | | | | | | | | | | | => T223_236'
//│ | | | | | | | | | | | | EXTR[-] T223_230'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | EXTR[-] (A160_212' | ‘A214'') || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | EXTR[-] A160_212' || 1 .. 2  1 true
//│ | | | | | | | | | | | | | | => A160_212'
//│ | | | | | | | | | | | | | | EXTR[-] ‘A214'' || 1 .. 2  2 false
//│ | | | | | | | | | | | | | | => ⊥(‘A214'')
//│ | | | | | | | | | | | | | => (A160_212' | ⊥(‘A214''))
//│ | | | | | | | | | | | | => T223_238'
//│ | | | | | | | | | | | => T223_235'''
//│ | | | | | | | | | | => T223_235'''
//│ | | | | | | | | | => K[? :> T222_232''' <: T223_235''']
//│ | | | | | | | | => (() -> K[? :> T222_232''' <: T223_235'''])
//│ | | | | | | | => ‹∀ 2. (() -> K[? :> T222_232''' <: T223_235'''])›
//│ | | | | | | | RECONSTRAINING TVs
//│ | | | | | | | | Reconstraining T222_232'''
//│ | | | | | | | | 2. C T222_233' <! T222_234'    (1)
//│ | | | | | | | | | NEW T222_233' UB (1)
//│ | | | | | | | | | 2. C (⊤(‘A214'') & A160_213') <! T222_234'    (4)
//│ | | | | | | | | | | NEW T222_234' LB (1)
//│ | | | | | | | | | | 2. C (⊤(‘A214'') & A160_213') <! ((T222_234' & ~(⊤(‘A214''))) & ~(A160_212'))    (7)
//│ | | | | | | | | | | | 2. C (⊤(‘A214'') & A160_213') <! (T222_234' & ~(⊤(‘A214'')))    (10)
//│ | | | | | | | | | | | | 2. C (⊤(‘A214'') & A160_213') <! T222_234'    (13)
//│ | | | | | | | | | | | | | Cached!
//│ | | | | | | | | | | | | 2. C (⊤(‘A214'') & A160_213') <! ~(⊤(‘A214''))    (13)
//│ | | | | | | | | | | | | | 2. ARGH  DNF(1, {}∧⊤(‘A214'')∧A160_213')  <!  DNF(0, ~(⊤(‘A214'')))
//│ | | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | | 2. C A160_213' <! ~(⊤(‘A214''))    (15)
//│ | | | | | | | | | | | | | | | NEW A160_213' UB (0)
//│ | | | | | | | | | | | 2. C (⊤(‘A214'') & A160_213') <! ~(A160_212')    (10)
//│ | | | | | | | | | | | | 2. ARGH  DNF(1, {}∧⊤(‘A214'')∧A160_213')  <!  DNF(1, ~(A160_212'))
//│ | | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | | 2. C A160_213' <! (~(A160_212') | ~(⊤(‘A214'')))    (12)
//│ | | | | | | | | | | | | | | NEW A160_213' UB (1)
//│ | | | | | | | | Reconstraining T222_233'
//│ | | | | | | | | Reconstraining T222_234'
//│ | | | | | | | | Reconstraining T223_235'''
//│ | | | | | | | | 2. C T223_236' <! T223_238'    (1)
//│ | | | | | | | | | NEW T223_236' UB (1)
//│ | | | | | | | | | 2. C (T157_237'# & (⊤(‘A214'') & A160_213')) <! T223_238'    (4)
//│ | | | | | | | | | | NEW T223_238' LB (1)
//│ | | | | | | | | | | 2. C (T157_237'# & (⊤(‘A214'') & A160_213')) <! (A160_212' | ⊥(‘A214''))    (7)
//│ | | | | | | | | | | | Assigning P :: P32' := ⊥..⊤ where 
//│ | | | | | | | | | | | Set P32_239 ~> P32'
//│ | | | | | | | | | | | Assigned Some(⊥..⊤)
//│ | | | | | | | | | | | 2. ARGH  DNF(1, #S<Object>{P: mut ..⊤}∧⊤(‘A214'')∧A160_213')  <!  DNF(1, A160_212' | {}∧⊥(‘A214''))
//│ | | | | | | | | | | | | DNF DISCHARGE CONSTRAINTS
//│ | | | | | | | | | | | | DNF finished with same type at both sides
//│ | | | | | | | | Reconstraining T223_236'
//│ | | | | | | | | No need to reconstrain assigned T157_237'#
//│ | | | | | | | | Reconstraining T223_238'
//│ | | | | | | | EXTR LHS  ~>  ‹∀ 2. (() -> K[? :> T222_232''' <: T223_235'''])›  to 1
//│ | | | | | | |  where 
//│ 		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ 		A160_213' <: (~(A160_212') | ~(⊤(‘A214''))) & ~(⊤(‘A214''))
//│ 		T222_232''' :> T222_233' <: T222_234'
//│ 		T222_233' :> (⊤(‘A214'') & A160_213') <: T222_234'
//│ 		T222_234' :> (⊤(‘A214'') & A160_213') <: ((T222_234' & ~(⊤(‘A214''))) & ~(A160_212'))
//│ 		T223_235''' :> T223_236' <: T223_238'
//│ 		T223_236' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: T223_238'
//│ 		T157_237'# := S[⊥..⊤]
//│ 		T223_238' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: (A160_212' | ⊥(‘A214''))
//│ | | | | | | | 2. C ‹∀ 2. (() -> K[? :> T222_232''' <: T223_235'''])› <! α215'    (2)
//│ | | | | | | | | NEW α215' LB (1)
//│ | | | | | | finishing branch: [(#KS<Object,K>,{A: mut A160_212'..A160_213'})] + List() and [α215'] | ⊥
//│ | | | | | | finishing case l211' <: (#KS<Object,K> & {A: mut A160_212'..A160_213'})
//│ | | | | | | CONSTRAIN l211' <! (#KS<Object,K> & {A: mut A160_212'..A160_213'})
//│ | | | | | |   where 
//│ 		l211' <: Object
//│ 		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ 		A160_213' <: (~(A160_212') | ~(⊤(‘A214''))) & ~(⊤(‘A214''))
//│ | | | | | | 1. C l211' <! (#KS<Object,K> & {A: mut A160_212'..A160_213'})    (0)
//│ | | | | | | | NEW l211' UB (1)
//│ | | | | | 1. : α215'
//│ | | | | 1. : α215'
//│ | | | 1. : α215'
//│ | | 1. : (l211' -> α215')
//│ | | CONSTRAIN (l211' -> α215') <! fz240'
//│ | |   where 
//│ 		l211' <: (#KS<Object,K> & {A: mut A160_212'..A160_213'}) & Object
//│ 		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ 		A160_213' <: (~(A160_212') | ~(⊤(‘A214''))) & ~(⊤(‘A214''))
//│ 		α215' :> ‹∀ 2. (() -> K[? :> T222_232''' <: T223_235'''])›
//│ 		T222_232''' :> T222_233' <: T222_234'
//│ 		T222_233' :> (⊤(‘A214'') & A160_213') <: T222_234'
//│ 		T222_234' :> (⊤(‘A214'') & A160_213') <: ((T222_234' & ~(⊤(‘A214''))) & ~(A160_212'))
//│ 		T223_235''' :> T223_236' <: T223_238'
//│ 		T223_236' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: T223_238'
//│ 		T157_237'# := S[⊥..⊤]
//│ 		T223_238' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: (A160_212' | ⊥(‘A214''))
//│ | | 1. C (l211' -> α215') <! fz240'    (0)
//│ | | | NEW fz240' LB (1)
//│ | Completed TypedNuFun(0,NuFunDef(None,Var(fz),None,List(),Left(Lam(Tup(List((None,Fld(_,Var(l))))),Blk(List(If(IfThen(App(Var(is),Tup(List((None,Fld(_,Var(l))), (None,Fld(_,App(Var(KS),Tup(List((None,Fld(_,Var(ea))))))))))),Blk(List(Lam(Tup(List()),Asc(Var(ea),AppliedType(TypeName(K),List(Selection(TypeName(ea),TypeName(T))))))))),None)))))),(l211' -> α215')) where 
//│ 		l211' <: (#KS<Object,K> & {A: mut A160_212'..A160_213'}) & Object
//│ 		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ 		A160_213' <: (~(A160_212') | ~(⊤(‘A214''))) & ~(⊤(‘A214''))
//│ 		α215' :> ‹∀ 2. (() -> K[? :> T222_232''' <: T223_235'''])›
//│ 		T222_232''' :> T222_233' <: T222_234'
//│ 		T222_233' :> (⊤(‘A214'') & A160_213') <: T222_234'
//│ 		T222_234' :> (⊤(‘A214'') & A160_213') <: ((T222_234' & ~(⊤(‘A214''))) & ~(A160_212'))
//│ 		T223_235''' :> T223_236' <: T223_238'
//│ 		T223_236' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: T223_238'
//│ 		T157_237'# := S[⊥..⊤]
//│ 		T223_238' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: (A160_212' | ⊥(‘A214''))
//│ | Typing unit statements
//│ | : None
//│ ======== TYPED ========
//│ fun fz: ‹∀ 0. (l211' -> α215')› where 
//│ |		l211' <: (#KS<Object,K> & {A: mut A160_212'..A160_213'}) & Object
//│ |		A160_212' <: ~(⊤(‘A214'')) & A160_213'
//│ |		A160_213' <: (~(A160_212') | ~(⊤(‘A214''))) & ~(⊤(‘A214''))
//│ |		α215' :> ‹∀ 2. (() -> K[? :> T222_232''' <: T223_235'''])›
//│ |		T222_232''' :> T222_233' <: T222_234'
//│ |		T222_233' :> (⊤(‘A214'') & A160_213') <: T222_234'
//│ |		T222_234' :> (⊤(‘A214'') & A160_213') <: ((T222_234' & ~(⊤(‘A214''))) & ~(A160_212'))
//│ |		T223_235''' :> T223_236' <: T223_238'
//│ |		T223_236' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: T223_238'
//│ |		T157_237'# := S[⊥..⊤]
//│ |		T223_238' :> (T157_237'# & (⊤(‘A214'') & A160_213')) <: (A160_212' | ⊥(‘A214''))
//│ fun fz: forall 'A. KS[out 'A & ~??A] -> () -> K[in ~??A out S[?] & ??A & 'A]

// :d
fun fz(l) =
  if l is KS(ea) and 0 is 0 then
    ea : K[ea.T]
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.647: 	    ea : K[ea.T]
//│ ║         	    ^^
//│ ╟── expression of type `A & ?A` does not match type `~A`
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.647: 	    ea : K[ea.T]
//│ ╙──       	             ^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ fun fz: forall 'A. KS[out 'A] -> K[in ~??A out S[?] & ??A & 'A]



fun fz[L](l: K[L], r: K[L]) =
  if l is KS(ea) and r is KS(eb) then
    let zt: K[ea.T] = ea ; 0
  else 0
//│ ╔══[ERROR] Type mismatch in type ascription:
//│ ║  l.662: 	    let zt: K[ea.T] = ea ; 0
//│ ║         	                      ^^
//│ ╟── expression of type `A & ?A` does not match type `~A`
//│ ╟── Note: constraint arises from type selection:
//│ ║  l.662: 	    let zt: K[ea.T] = ea ; 0
//│ ╙──       	                ^^
//│ TEST CASE FAILURE: There was an unexpected type error
//│ fun fz: forall 'L. (l: K['L], r: K['L]) -> 0





