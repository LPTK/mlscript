:NewParser
:NewDefs

:js
module A {
  let a = 42
  class B(x: int) {
    fun b = x + 1
  }
}
//│ module A() {
//│   class B(x: int) {
//│     fun b: int
//│   }
//│   let a: 42
//│ }
//│ // Prelude
//│ let res;
//│ class TypingUnit {
//│   #A;
//│   constructor() {
//│   }
//│   get A() {
//│     const outter = this;
//│     if (this.#A === undefined) {
//│       class A {
//│         #B;
//│         #a;
//│         get a() { return this.#a; }
//│         constructor() {
//│           this.#a = 42;
//│           const a = this.#a;
//│         }
//│         get B() {
//│           const outter1 = this;
//│           if (this.#B === undefined) {
//│             class B {
//│               #x;
//│               get x() { return this.#x; }
//│               constructor(x) {
//│                 this.#x = x;
//│               }
//│               get b() {
//│                 const x = this.#x;
//│                 return x + 1;
//│               }
//│             };
//│             this.#B = ((x) => new B(x));
//│             this.#B.class = B;
//│           }
//│           return this.#B;
//│         }
//│       }
//│       this.#A = new A();
//│       this.#A.class = A;
//│     }
//│     return this.#A;
//│   }
//│ }
//│ globalThis["typing_unit"] = new TypingUnit;
//│ globalThis.A = typing_unit.A;
//│ // End of generated code

:e
:js
let bb = A.B(A.a)
bb.b
//│ ╔══[ERROR] access to class member not yet supported
//│ ║  l.66: 	let bb = A.B(A.a)
//│ ╙──      	          ^^
//│ let bb: error
//│ error
//│ // Prelude
//│ class TypingUnit1 {
//│   #bb;
//│   get bb() { return this.#bb; }
//│   constructor() {
//│     this.#bb = A.B(A.a);
//│     const bb = this.#bb;
//│     bb.b;
//│   }
//│ }
//│ globalThis["typing_unit1"] = new TypingUnit1;
//│ globalThis.bb = typing_unit1.bb;
//│ // Query 1
//│ globalThis.bb1 = A.B(A.a);
//│ // Query 2
//│ res = bb1.b;
//│ // End of generated code
//│ bb
//│    = B {}
//│ res
//│     = 43

:js
class B(x: int) {
  let outter = 42
  class C(y: int) {
  }
}
//│ class B(x: int) {
//│   class C(y: int)
//│   let outter: 42
//│ }
//│ // Prelude
//│ class TypingUnit2 {
//│   #B;
//│   constructor() {
//│   }
//│   get B() {
//│     const outter = this;
//│     if (this.#B === undefined) {
//│       class B {
//│         #C;
//│         #x;
//│         #outter;
//│         get x() { return this.#x; }
//│         get outter() { return this.#outter; }
//│         constructor(x) {
//│           this.#x = x;
//│           this.#outter = 42;
//│           const outter1 = this.#outter;
//│         }
//│         get C() {
//│           const outter1 = this;
//│           if (this.#C === undefined) {
//│             class C {
//│               #y;
//│               get y() { return this.#y; }
//│               constructor(y) {
//│                 this.#y = y;
//│               }
//│             };
//│             this.#C = ((y) => new C(y));
//│             this.#C.class = C;
//│           }
//│           return this.#C;
//│         }
//│       };
//│       this.#B = ((x) => new B(x));
//│       this.#B.class = B;
//│     }
//│     return this.#B;
//│   }
//│ }
//│ globalThis["typing_unit2"] = new TypingUnit2;
//│ globalThis.B = typing_unit2.B;
//│ // End of generated code

:js
mixin C() {
  mixin D() {
    mixin E() {}
  }
}
//│ mixin C() {
//│   mixin D() {
//│     mixin E()
//│   }
//│ }
//│ // Prelude
//│ class TypingUnit3 {
//│   constructor() {
//│   }
//│   C(base) {
//│     const outter = this;
//│     return (class C extends base {
//│       constructor(...rest) {
//│         super(...rest);
//│       }
//│       D(base) {
//│         const outter1 = this;
//│         return (class D extends base {
//│           constructor(...rest) {
//│             super(...rest);
//│           }
//│           E(base) {
//│             const outter2 = this;
//│             return (class E extends base {
//│               constructor(...rest) {
//│                 super(...rest);
//│               }
//│             });
//│           }
//│         });
//│       }
//│     });
//│   }
//│ }
//│ globalThis["typing_unit3"] = new TypingUnit3;
//│ globalThis.C = typing_unit3.C;
//│ // End of generated code

:js
module D {
  class E(x: int) {}
  fun createE(x: int) = E(x + 1)
}
//│ module D() {
//│   class E(x: int)
//│   fun createE: (x: int,) -> E
//│ }
//│ // Prelude
//│ class TypingUnit4 {
//│   #D;
//│   constructor() {
//│   }
//│   get D() {
//│     const outter = this;
//│     if (this.#D === undefined) {
//│       class D {
//│         #E;
//│         constructor() {
//│         }
//│         createE(x) {
//│           const self = this;
//│           return self.E(x + 1);
//│         }
//│         get E() {
//│           const outter1 = this;
//│           if (this.#E === undefined) {
//│             class E {
//│               #x;
//│               get x() { return this.#x; }
//│               constructor(x) {
//│                 this.#x = x;
//│               }
//│             };
//│             this.#E = ((x) => new E(x));
//│             this.#E.class = E;
//│           }
//│           return this.#E;
//│         }
//│       }
//│       this.#D = new D();
//│       this.#D.class = D;
//│     }
//│     return this.#D;
//│   }
//│ }
//│ globalThis["typing_unit4"] = new TypingUnit4;
//│ globalThis.D = typing_unit4.D;
//│ // End of generated code

:js
let ee = D.createE(42)
ee.x
//│ let ee: E
//│ int
//│ // Prelude
//│ class TypingUnit5 {
//│   #ee;
//│   get ee() { return this.#ee; }
//│   constructor() {
//│     this.#ee = D.createE(42);
//│     const ee = this.#ee;
//│     ee.x;
//│   }
//│ }
//│ globalThis["typing_unit5"] = new TypingUnit5;
//│ globalThis.ee = typing_unit5.ee;
//│ // Query 1
//│ globalThis.ee1 = D.createE(42);
//│ // Query 2
//│ res = ee1.x;
//│ // End of generated code
//│ ee
//│    = E {}
//│ res
//│     = 43

:js
class E(x: int) {
  class F(y: int) {
    fun sum = x + y
    class G(z: int) {
      fun sum = x + y + z
    }
  }
}
//│ class E(x: int) {
//│   class F(y: int) {
//│     class G(z: int) {
//│       fun sum: int
//│     }
//│     fun sum: int
//│   }
//│ }
//│ // Prelude
//│ class TypingUnit6 {
//│   #E;
//│   constructor() {
//│   }
//│   get E() {
//│     const outter = this;
//│     if (this.#E === undefined) {
//│       class E {
//│         #F;
//│         #x;
//│         get x() { return this.#x; }
//│         constructor(x) {
//│           this.#x = x;
//│         }
//│         get F() {
//│           const outter1 = this;
//│           if (this.#F === undefined) {
//│             class F {
//│               #G;
//│               #y;
//│               get y() { return this.#y; }
//│               constructor(y) {
//│                 this.#y = y;
//│               }
//│               get sum() {
//│                 const y = this.#y;
//│                 return outter1.x + y;
//│               }
//│               get G() {
//│                 const outter2 = this;
//│                 if (this.#G === undefined) {
//│                   class G {
//│                     #z;
//│                     get z() { return this.#z; }
//│                     constructor(z) {
//│                       this.#z = z;
//│                     }
//│                     get sum() {
//│                       const z = this.#z;
//│                       return outter1.x + outter2.y + z;
//│                     }
//│                   };
//│                   this.#G = ((z) => new G(z));
//│                   this.#G.class = G;
//│                 }
//│                 return this.#G;
//│               }
//│             };
//│             this.#F = ((y) => new F(y));
//│             this.#F.class = F;
//│           }
//│           return this.#F;
//│         }
//│       };
//│       this.#E = ((x) => new E(x));
//│       this.#E.class = E;
//│     }
//│     return this.#E;
//│   }
//│ }
//│ globalThis["typing_unit6"] = new TypingUnit6;
//│ globalThis.E = typing_unit6.E;
//│ // End of generated code

:e
:js
let es = E(1)
let fff = es.F(2)
let gg = fff.G(3)
gg.sum
//│ ╔══[ERROR] access to class member not yet supported
//│ ║  l.357: 	let fff = es.F(2)
//│ ╙──       	            ^^
//│ let es: E
//│ let fff: error
//│ let gg: error
//│ error
//│ // Prelude
//│ class TypingUnit7 {
//│   #es;
//│   #fff;
//│   #gg;
//│   get es() { return this.#es; }
//│   get fff() { return this.#fff; }
//│   get gg() { return this.#gg; }
//│   constructor() {
//│     this.#es = E(1);
//│     const es = this.#es;
//│     this.#fff = es.F(2);
//│     const fff = this.#fff;
//│     this.#gg = fff.G(3);
//│     const gg = this.#gg;
//│     gg.sum;
//│   }
//│ }
//│ globalThis["typing_unit7"] = new TypingUnit7;
//│ globalThis.es = typing_unit7.es;
//│ globalThis.fff = typing_unit7.fff;
//│ globalThis.gg = typing_unit7.gg;
//│ // Query 1
//│ globalThis.es1 = E(1);
//│ // Query 2
//│ globalThis.fff1 = es1.F(2);
//│ // Query 3
//│ globalThis.gg1 = fff1.G(3);
//│ // Query 4
//│ res = gg1.sum;
//│ // End of generated code
//│ es
//│    = E {}
//│ fff
//│     = F {}
//│ gg
//│    = G {}
//│ res
//│     = 6

:js
class F() {
  let x = 42
  class G() {
    let x1 = x + 1
  }
}
//│ class F() {
//│   class G() {
//│     let x1: int
//│   }
//│   let x: 42
//│ }
//│ // Prelude
//│ class TypingUnit8 {
//│   #F;
//│   constructor() {
//│   }
//│   get F() {
//│     const outter = this;
//│     if (this.#F === undefined) {
//│       class F {
//│         #G;
//│         #x;
//│         get x() { return this.#x; }
//│         constructor() {
//│           this.#x = 42;
//│           const x = this.#x;
//│         }
//│         get G() {
//│           const outter1 = this;
//│           if (this.#G === undefined) {
//│             class G {
//│               #x1;
//│               get x1() { return this.#x1; }
//│               constructor() {
//│                 this.#x1 = outter1.x + 1;
//│                 const x1 = this.#x1;
//│               }
//│             };
//│             this.#G = (() => new G());
//│             this.#G.class = G;
//│           }
//│           return this.#G;
//│         }
//│       };
//│       this.#F = (() => new F());
//│       this.#F.class = F;
//│     }
//│     return this.#F;
//│   }
//│ }
//│ globalThis["typing_unit8"] = new TypingUnit8;
//│ globalThis.F = typing_unit8.F;
//│ // End of generated code


:js
module G {
  class I(x: int) {}
  module H {
    fun i1(x: int) = I(x + 1)
    class J(x: int) {
      fun ii(a: int) = I(x + a)
    }
  }
}
//│ module G() {
//│   module H() {
//│     class J(x: int) {
//│       fun ii: (a: int,) -> I
//│     }
//│     fun i1: (x: int,) -> I
//│   }
//│   class I(x: int)
//│ }
//│ // Prelude
//│ class TypingUnit9 {
//│   #G;
//│   constructor() {
//│   }
//│   get G() {
//│     const outter = this;
//│     if (this.#G === undefined) {
//│       class G {
//│         #I;
//│         #H;
//│         constructor() {
//│         }
//│         get H() {
//│           const outter1 = this;
//│           if (this.#H === undefined) {
//│             class H {
//│               #J;
//│               constructor() {
//│               }
//│               i1(x) {
//│                 return outter1.I(x + 1);
//│               }
//│               get J() {
//│                 const outter2 = this;
//│                 if (this.#J === undefined) {
//│                   class J {
//│                     #x;
//│                     get x() { return this.#x; }
//│                     constructor(x) {
//│                       this.#x = x;
//│                     }
//│                     ii(a) {
//│                       const x = this.#x;
//│                       return outter1.I(x + a);
//│                     }
//│                   };
//│                   this.#J = ((x) => new J(x));
//│                   this.#J.class = J;
//│                 }
//│                 return this.#J;
//│               }
//│             }
//│             this.#H = new H();
//│             this.#H.class = H;
//│           }
//│           return this.#H;
//│         }
//│         get I() {
//│           const outter1 = this;
//│           if (this.#I === undefined) {
//│             class I {
//│               #x;
//│               get x() { return this.#x; }
//│               constructor(x) {
//│                 this.#x = x;
//│               }
//│             };
//│             this.#I = ((x) => new I(x));
//│             this.#I.class = I;
//│           }
//│           return this.#I;
//│         }
//│       }
//│       this.#G = new G();
//│       this.#G.class = G;
//│     }
//│     return this.#G;
//│   }
//│ }
//│ globalThis["typing_unit9"] = new TypingUnit9;
//│ globalThis.G = typing_unit9.G;
//│ // End of generated code


:e
:js
let jj = G.H.J(42)
let i = jj.ii(2)
i.x
//│ ╔══[ERROR] access to module member not yet supported
//│ ║  l.560: 	let jj = G.H.J(42)
//│ ╙──       	          ^^
//│ let jj: error
//│ let i: error
//│ error
//│ // Prelude
//│ class TypingUnit10 {
//│   #jj;
//│   #i;
//│   get jj() { return this.#jj; }
//│   get i() { return this.#i; }
//│   constructor() {
//│     this.#jj = G.H.J(42);
//│     const jj = this.#jj;
//│     this.#i = jj.ii(2);
//│     const i = this.#i;
//│     i.x;
//│   }
//│ }
//│ globalThis["typing_unit10"] = new TypingUnit10;
//│ globalThis.jj = typing_unit10.jj;
//│ globalThis.i = typing_unit10.i;
//│ // Query 1
//│ globalThis.jj1 = G.H.J(42);
//│ // Query 2
//│ globalThis.i1 = jj1.ii(2);
//│ // Query 3
//│ res = i1.x;
//│ // End of generated code
//│ jj
//│    = J {}
//│ i
//│   = I {}
//│ res
//│     = 44

:js
module H {
  class I(x: int)
  class J(x: int) {
    let i = I(x + 1)
  }
}
//│ module H() {
//│   class I(x: int)
//│   class J(x: int) {
//│     let i: I
//│   }
//│ }
//│ // Prelude
//│ class TypingUnit11 {
//│   #H;
//│   constructor() {
//│   }
//│   get H() {
//│     const outter = this;
//│     if (this.#H === undefined) {
//│       class H {
//│         #I;
//│         #J;
//│         constructor() {
//│         }
//│         get I() {
//│           const outter1 = this;
//│           if (this.#I === undefined) {
//│             class I {
//│               #x;
//│               get x() { return this.#x; }
//│               constructor(x) {
//│                 this.#x = x;
//│               }
//│             };
//│             this.#I = ((x) => new I(x));
//│             this.#I.class = I;
//│           }
//│           return this.#I;
//│         }
//│         get J() {
//│           const outter1 = this;
//│           if (this.#J === undefined) {
//│             class J {
//│               #x;
//│               #i;
//│               get x() { return this.#x; }
//│               get i() { return this.#i; }
//│               constructor(x) {
//│                 this.#x = x;
//│                 this.#i = outter1.I(x + 1);
//│                 const i = this.#i;
//│               }
//│             };
//│             this.#J = ((x) => new J(x));
//│             this.#J.class = J;
//│           }
//│           return this.#J;
//│         }
//│       }
//│       this.#H = new H();
//│       this.#H.class = H;
//│     }
//│     return this.#H;
//│   }
//│ }
//│ globalThis["typing_unit11"] = new TypingUnit11;
//│ globalThis.H = typing_unit11.H;
//│ // End of generated code


:e
:js
let j = H.J(42)
j.i.x
//│ ╔══[ERROR] access to class member not yet supported
//│ ║  l.674: 	let j = H.J(42)
//│ ╙──       	         ^^
//│ let j: error
//│ error
//│ // Prelude
//│ class TypingUnit12 {
//│   #j;
//│   get j() { return this.#j; }
//│   constructor() {
//│     this.#j = H.J(42);
//│     const j = this.#j;
//│     j.i.x;
//│   }
//│ }
//│ globalThis["typing_unit12"] = new TypingUnit12;
//│ globalThis.j = typing_unit12.j;
//│ // Query 1
//│ globalThis.j1 = H.J(42);
//│ // Query 2
//│ res = j1.i.x;
//│ // End of generated code
//│ j
//│   = J {}
//│ res
//│     = 43

:js
:e
class I(x: int) {
  let y = x + 1
  class J(x: int) {
    let y = x + 2
    fun incY = y + 1
  }
}
let i = I(1)
let ij = i.J(0)
ij.incY
//│ ╔══[ERROR] access to class member not yet supported
//│ ║  l.713: 	let ij = i.J(0)
//│ ╙──       	          ^^
//│ class I(x: int) {
//│   class J(x: int) {
//│     fun incY: int
//│     let y: int
//│   }
//│   let y: int
//│ }
//│ let i: I
//│ let ij: error
//│ error
//│ // Prelude
//│ class TypingUnit13 {
//│   #I;
//│   #i;
//│   #ij;
//│   get i() { return this.#i; }
//│   get ij() { return this.#ij; }
//│   constructor() {
//│     const self = this;
//│     this.#i = self.I(1);
//│     const i = this.#i;
//│     this.#ij = i.J(0);
//│     const ij = this.#ij;
//│     ij.incY;
//│   }
//│   get I() {
//│     const outter = this;
//│     if (this.#I === undefined) {
//│       class I {
//│         #J;
//│         #x;
//│         #y;
//│         get x() { return this.#x; }
//│         get y() { return this.#y; }
//│         constructor(x) {
//│           this.#x = x;
//│           this.#y = x + 1;
//│           const y = this.#y;
//│         }
//│         get J() {
//│           const outter1 = this;
//│           if (this.#J === undefined) {
//│             class J {
//│               #x;
//│               #y;
//│               get x() { return this.#x; }
//│               get y() { return this.#y; }
//│               constructor(x) {
//│                 this.#x = x;
//│                 this.#y = x + 2;
//│                 const y = this.#y;
//│               }
//│               get incY() {
//│                 const x = this.#x;
//│                 const self = this;
//│                 return self.y + 1;
//│               }
//│             };
//│             this.#J = ((x) => new J(x));
//│             this.#J.class = J;
//│           }
//│           return this.#J;
//│         }
//│       };
//│       this.#I = ((x) => new I(x));
//│       this.#I.class = I;
//│     }
//│     return this.#I;
//│   }
//│ }
//│ globalThis["typing_unit13"] = new TypingUnit13;
//│ globalThis.I = typing_unit13.I;
//│ globalThis.i2 = typing_unit13.i2;
//│ globalThis.ij = typing_unit13.ij;
//│ // Query 1
//│ globalThis.i3 = I(1);
//│ // Query 2
//│ globalThis.ij1 = i3.J(0);
//│ // Query 3
//│ res = ij1.incY;
//│ // End of generated code
//│ i
//│   = I {}
//│ ij
//│    = J {}
//│ res
//│     = 3

:e
:js
module J {
  class K(x: int) {}
  mixin L() {}
  class M() extends K(1) {}
  class N(x: int) extends K(x + 2), L
}
//│ ╔══[ERROR] Class inheritance is not supported yet (use mixins)
//│ ║  l.757: 	  class M() extends K(1) {}
//│ ╙──       	                    ^^^^
//│ ╔══[ERROR] Class inheritance is not supported yet (use mixins)
//│ ║  l.758: 	  class N(x: int) extends K(x + 2), L
//│ ╙──       	                          ^^^^^^^^
//│ module J() {
//│   class K(x: int)
//│   mixin L()
//│   class M()
//│   class N(x: int)
//│ }
//│ // Prelude
//│ class TypingUnit14 {
//│   #J;
//│   constructor() {
//│   }
//│   get J() {
//│     const outter = this;
//│     if (this.#J === undefined) {
//│       class J {
//│         #K;
//│         #M;
//│         #N;
//│         constructor() {
//│         }
//│         L(base) {
//│           const outter1 = this;
//│           return (class L extends base {
//│             constructor(...rest) {
//│               super(...rest);
//│             }
//│           });
//│         }
//│         get K() {
//│           const outter1 = this;
//│           if (this.#K === undefined) {
//│             class K {
//│               #x;
//│               get x() { return this.#x; }
//│               constructor(x) {
//│                 this.#x = x;
//│               }
//│             };
//│             this.#K = ((x) => new K(x));
//│             this.#K.class = K;
//│           }
//│           return this.#K;
//│         }
//│         get M() {
//│           const outter1 = this;
//│           if (this.#M === undefined) {
//│             class M extends outter1.K.class {
//│               constructor() {
//│                 super(1);
//│               }
//│             };
//│             this.#M = (() => new M());
//│             this.#M.class = M;
//│           }
//│           return this.#M;
//│         }
//│         get N() {
//│           const outter1 = this;
//│           if (this.#N === undefined) {
//│             class N extends outter1.L(outter1.K.class) {
//│               #x;
//│               get x() { return this.#x; }
//│               constructor(x) {
//│                 super(x + 2);
//│                 this.#x = x;
//│               }
//│             };
//│             this.#N = ((x) => new N(x));
//│             this.#N.class = N;
//│           }
//│           return this.#N;
//│         }
//│       }
//│       this.#J = new J();
//│       this.#J.class = J;
//│     }
//│     return this.#J;
//│   }
//│ }
//│ globalThis["typing_unit14"] = new TypingUnit14;
//│ globalThis.J = typing_unit14.J;
//│ // End of generated code

:e
:js
let m = J.M()
let n = J.N(2)
//│ ╔══[ERROR] access to class member not yet supported
//│ ║  l.851: 	let m = J.M()
//│ ╙──       	         ^^
//│ ╔══[ERROR] access to class member not yet supported
//│ ║  l.852: 	let n = J.N(2)
//│ ╙──       	         ^^
//│ let m: error
//│ let n: error
//│ // Prelude
//│ class TypingUnit15 {
//│   #m;
//│   #n;
//│   get m() { return this.#m; }
//│   get n() { return this.#n; }
//│   constructor() {
//│     this.#m = J.M();
//│     const m = this.#m;
//│     this.#n = J.N(2);
//│     const n = this.#n;
//│   }
//│ }
//│ globalThis["typing_unit15"] = new TypingUnit15;
//│ globalThis.m = typing_unit15.m;
//│ globalThis.n = typing_unit15.n;
//│ // Query 1
//│ globalThis.m1 = J.M();
//│ // Query 2
//│ globalThis.n1 = J.N(2);
//│ // End of generated code
//│ m
//│   = M {}
//│ n
//│   = N {}


module K {
  let x = 1
  module L {
    let x = 42
    class M() {
      fun f = x
    }
  }
}
//│ module K() {
//│   module L() {
//│     class M() {
//│       fun f: 42
//│     }
//│     let x: 42
//│   }
//│   let x: 1
//│ }

:e
let m = K.L.M()
m.f
//│ ╔══[ERROR] access to module member not yet supported
//│ ║  l.908: 	let m = K.L.M()
//│ ╙──       	         ^^
//│ let m: error
//│ error
//│ m
//│   = M {}
//│ res
//│     = 42

:e
module L {
  class M(x: int) {}
  module N {
    module O {
      class P(y: int) extends M(y + 1) {}
    }
  }
}
//│ ╔══[ERROR] Class inheritance is not supported yet (use mixins)
//│ ║  l.925: 	      class P(y: int) extends M(y + 1) {}
//│ ╙──       	                              ^^^^^^^^
//│ module L() {
//│   class M(x: int)
//│   module N() {
//│     module O() {
//│       class P(y: int)
//│     }
//│   }
//│ }

:e
let op = L.N.O.P(0)
op.x
//│ ╔══[ERROR] access to module member not yet supported
//│ ║  l.942: 	let op = L.N.O.P(0)
//│ ╙──       	          ^^
//│ let op: error
//│ error
//│ op
//│    = P {}
//│ res
//│     = 1

:js
module M {
  module N {
    fun op(x) = if x is
      O then 0
      P then 1
      _ then 2
  }
  class O()
  class P()
  fun op(x) = if x is
    O then 0
    P then 1
    _ then 2
}
//│ module M() {
//│   module N() {
//│     fun op: anything -> (0 | 1 | 2)
//│   }
//│   class O()
//│   class P()
//│   fun op: anything -> (0 | 1 | 2)
//│ }
//│ // Prelude
//│ class TypingUnit20 {
//│   #M;
//│   constructor() {
//│   }
//│   get M() {
//│     const outter = this;
//│     if (this.#M === undefined) {
//│       class M {
//│         #O;
//│         #P;
//│         #N;
//│         constructor() {
//│         }
//│         op(x) {
//│           const self = this;
//│           return a = x, a instanceof self.O.class ? 0 : a instanceof self.P.class ? 1 : 2;
//│         }
//│         get N() {
//│           const outter1 = this;
//│           if (this.#N === undefined) {
//│             class N {
//│               constructor() {
//│               }
//│               op(x) {
//│                 return a = x, a instanceof outter1.O.class ? 0 : a instanceof outter1.P.class ? 1 : 2;
//│               }
//│             }
//│             this.#N = new N();
//│             this.#N.class = N;
//│           }
//│           return this.#N;
//│         }
//│         get O() {
//│           const outter1 = this;
//│           if (this.#O === undefined) {
//│             class O {};
//│             this.#O = (() => new O());
//│             this.#O.class = O;
//│           }
//│           return this.#O;
//│         }
//│         get P() {
//│           const outter1 = this;
//│           if (this.#P === undefined) {
//│             class P {};
//│             this.#P = (() => new P());
//│             this.#P.class = P;
//│           }
//│           return this.#P;
//│         }
//│       }
//│       this.#M = new M();
//│       this.#M.class = M;
//│     }
//│     return this.#M;
//│   }
//│ }
//│ globalThis["typing_unit20"] = new TypingUnit20;
//│ globalThis.M = typing_unit20.M;
//│ // End of generated code

:e
:js
module N {
  module O {
    class P() extends Q
  }
  class Q()
}
//│ ╔══[ERROR] Class inheritance is not supported yet (use mixins)
//│ ║  l.1043: 	    class P() extends Q
//│ ╙──        	                      ^
//│ module N() {
//│   module O() {
//│     class P()
//│   }
//│   class Q()
//│ }
//│ // Prelude
//│ class TypingUnit21 {
//│   #N;
//│   constructor() {
//│   }
//│   get N() {
//│     const outter = this;
//│     if (this.#N === undefined) {
//│       class N {
//│         #Q;
//│         #O;
//│         constructor() {
//│         }
//│         get O() {
//│           const outter1 = this;
//│           if (this.#O === undefined) {
//│             class O {
//│               #P;
//│               constructor() {
//│               }
//│               get P() {
//│                 const outter2 = this;
//│                 if (this.#P === undefined) {
//│                   class P extends outter1.Q.class {
//│                     constructor() {
//│                       super();
//│                     }
//│                   };
//│                   this.#P = (() => new P());
//│                   this.#P.class = P;
//│                 }
//│                 return this.#P;
//│               }
//│             }
//│             this.#O = new O();
//│             this.#O.class = O;
//│           }
//│           return this.#O;
//│         }
//│         get Q() {
//│           const outter1 = this;
//│           if (this.#Q === undefined) {
//│             class Q {};
//│             this.#Q = (() => new Q());
//│             this.#Q.class = Q;
//│           }
//│           return this.#Q;
//│         }
//│       }
//│       this.#N = new N();
//│       this.#N.class = N;
//│     }
//│     return this.#N;
//│   }
//│ }
//│ globalThis["typing_unit21"] = new TypingUnit21;
//│ globalThis.N = typing_unit21.N;
//│ // End of generated code

:e
N.O.P()
//│ ╔══[ERROR] access to module member not yet supported
//│ ║  l.1116: 	N.O.P()
//│ ╙──        	 ^^
//│ error
//│ res
//│     = P {}
