
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

// :e // Works since inconsistent constrained types...
:e // No longer signature-checks after fix to freshening levels
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('a -> 'b
//│   where
//│     forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: (forall 'e, 'g, 'h, 'i. ('g -> 'h
//│   where
//│     'e <: 'e -> ('g -> 'h & 'i))) -> 'f) <: (forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: (forall 'e, 'g, 'h, 'i. ('g -> 'h
//│   where
//│     'e <: 'e -> ('g -> 'h & 'i))) -> 'f)) -> ('a -> 'b & 'c))) -> 'j & 'd) -> 'j
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.12: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.13: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α45_105'' -> α52_109'') where: α36_103' :> ((‹∀ 2. {(α46_107''' -> α48_108''') where: α45_105'' :> ((α45_105'',) -> α47_106''')}›,) -> α52_109'')}›  <:  α45_126'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α45_53'' -> α52_57'') where: α36' :> ((‹∀ 2. {(α46_55''' -> α48_56''') where: α45_53'' :> ((α45_53'',) -> α47_54''')}›,) -> α52_57'')}›  <:  α45_105''
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: (int & 'a) -> int -> (int | 'b)
//│     = [Function: pow1]

pow1 3 4
//│ res: int | 'a
//│    = 64


:e
z (fun self -> 1)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.51: 	z (fun self -> 1)
//│ ║        	^^^^^^^^^^^^^^^^^
//│ ╟── integer literal of type `1` is not a function
//│ ║  l.51: 	z (fun self -> 1)
//│ ║        	               ^
//│ ╟── Note: constraint arises from function type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ║       	                       ^^^^^^^^^^
//│ ╟── from intersection type:
//│ ║  l.6: 	def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ ╙──     	                      ^^^^^^^^^^^^^^^^^
//│ res: error
//│    = 1


zid = z (fun self -> id)
//│ zid: 'a -> 'a
//│    = [Function: id]

zid 1
//│ res: 1
//│    = 1


zargs = z (fun self -> fun x -> self)
//│ zargs: 'a -> 'b
//│   where
//│     'b :> 'a -> 'b
//│      = [Function (anonymous)]

zargs 1
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]

zargs 1 2 3 4
//│ res: 'b
//│   where
//│     'b :> anything -> 'b
//│    = [Function (anonymous)]


loop = z (fun self -> self)
//│ loop: anything -> nothing
//│     = [Function (anonymous)]

:re
loop 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int) -> int -> (int & 'a) -> int
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: (int & 'a) -> int -> (int | 'b)
//│    = [Function: pow2]
//│ res: int | 'a
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function: oops]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded



:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('a -> 'b
//│   where
//│     forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: (forall 'e, 'g, 'h, 'i. ('g -> 'h
//│   where
//│     'e <: 'e -> ('g -> 'h & 'i))) -> 'f) <: (forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: (forall 'e, 'g, 'h, 'i. ('g -> 'h
//│   where
//│     'e <: 'e -> ('g -> 'h & 'i))) -> 'f)) -> ('a -> 'b & 'c))) -> 'j & 'd) -> 'j
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition; a type annotation may be required
//│ ║  l.136: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.137: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α368_428'' -> α375_432'') where: α359_426' :> ((‹∀ 2. {(α369_430''' -> α371_431''') where: α368_428'' :> ((α368_428'',) -> α370_429''')}›,) -> α375_432'')}›  <:  α368_449'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α368_376'' -> α375_380'') where: α359' :> ((‹∀ 2. {(α369_378''' -> α371_379''') where: α368_376'' :> ((α368_376'',) -> α370_377''')}›,) -> α375_380'')}›  <:  α368_428''
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
// :e
// FIXME should be caught by cycle checker!
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('a -> 'b
//│   where
//│     forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: (forall 'e, 'g, 'h, 'i. ('g -> 'h
//│   where
//│     'e <: 'e -> ('g -> 'h & 'i))) -> 'f) <: (forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: (forall 'e, 'g, 'h, 'i. ('g -> 'h
//│   where
//│     'e <: 'e -> ('g -> 'h & 'i))) -> 'f)) -> ('a -> 'b & 'c))) -> 'j & 'd) -> 'j
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g. ?d -> ?f <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (300)
//│ ║  l.166: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.167: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α466_526'' -> α473_530'') where: α457_524' :> ((‹∀ 2. {(α467_528''' -> α469_529''') where: α466_526'' :> ((α466_526'',) -> α468_527''')}›,) -> α473_530'')}›  <!<  α466_611'
//│ ╟── while constraining:  α466_603'  <!<  α466_611'
//│ ╟── while constraining:  (α466_603',)  <!<  (α466_611',)
//│ ╟── while constraining:  (α466_611' -> α473_615')  <!<  ((α466_603',) -> α468_608')
//│ ╟── while constraining:  {(α466_611' -> α473_615') where: α457_524' :> ((‹∀ 2. {(α467_613''' -> α469_614''') where: α466_611' :> ((α466_611',) -> α468_612''')}›,) -> α473_615')}  <!<  ((α466_603',) -> α468_608')
//│ ╟── while constraining:  ‹∀ 1. {(α466_526'' -> α473_530'') where: α457_524' :> ((‹∀ 2. {(α467_528''' -> α469_529''') where: α466_526'' :> ((α466_526'',) -> α468_527''')}›,) -> α473_530'')}›  <!<  ((α466_603',) -> α468_608')
//│ ╟── while constraining:  ‹∀ 1. {(α466_526'' -> α473_530'') where: α457_524' :> ((‹∀ 2. {(α467_528''' -> α469_529''') where: α466_526'' :> ((α466_526'',) -> α468_527''')}›,) -> α473_530'')}›  <!<  α466_603'
//│ ╟── while constraining:  α466_595'  <!<  α466_603'
//│ ╟── while constraining:  (α466_595',)  <!<  (α466_603',)
//│ ╟── while constraining:  (α466_603' -> α473_607')  <!<  ((α466_595',) -> α468_600')
//│ ╟── while constraining:  {(α466_603' -> α473_607') where: α457_524' :> ((‹∀ 2. {(α467_605''' -> α469_606''') where: α466_603' :> ((α466_603',) -> α468_604''')}›,) -> α473_607')}  <!<  ((α466_595',) -> α468_600')
//│ ╟── while constraining:  ‹∀ 1. {(α466_526'' -> α473_530'') where: α457_524' :> ((‹∀ 2. {(α467_528''' -> α469_529''') where: α466_526'' :> ((α466_526'',) -> α468_527''')}›,) -> α473_530'')}›  <!<  ((α466_595',) -> α468_600')
//│ ╟── while constraining:  ‹∀ 1. {(α466_526'' -> α473_530'') where: α457_524' :> ((‹∀ 2. {(α467_528''' -> α469_529''') where: α466_526'' :> ((α466_526'',) -> α468_527''')}›,) -> α473_530'')}›  <!<  α466_595'
//│ ╟── while constraining:  α466_587'  <!<  α466_595'
//│ ╟── while constraining:  (α466_587',)  <!<  (α466_595',)
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α458_525'  <!<  α466_539'
//│ ╟── while constraining:  (α458_525',)  <!<  (α466_539',)
//│ ╟── while constraining:  (α466_539' -> α473_543')  <!<  ((α458_525',) -> α460_536')
//│ ╟── while constraining:  {(α466_539' -> α473_543') where: α457_524' :> ((‹∀ 2. {(α467_541''' -> α469_542''') where: α466_539' :> ((α466_539',) -> α468_540''')}›,) -> α473_543')}  <!<  ((α458_525',) -> α460_536')
//│ ╟── while constraining:  ‹∀ 1. {(α466_526'' -> α473_530'') where: α457_524' :> ((‹∀ 2. {(α467_528''' -> α469_529''') where: α466_526'' :> ((α466_526'',) -> α468_527''')}›,) -> α473_530'')}›  <!<  ((α458_525',) -> α460_536')
//│ ╟── while constraining:  α458_525'  <!<  ((α458_525',) -> α460_536')
//│ ╟── while constraining:  {(α459_537' -> α461_538') where: α458_525' :> ((α458_525',) -> α460_536')}  <!<  (‘a_521' -> ‘b_522')
//│ ╟── while constraining:  ‹∀ 1. {(α459_532'' -> α461_533'') where: α458_525' :> ((α458_525',) -> α460_531'')}›  <!<  (‘a_521' -> ‘b_522')
//│ ╟── while constraining:  (‹∀ 1. {(α459_532'' -> α461_533'') where: α458_525' :> ((α458_525',) -> α460_531'')}›,)  <!<  ((‘a_521' -> ‘b_522'),)
//│ ╟── while constraining:  ((‘a_521' -> ‘b_522') -> ((‘a_521' -> ‘b_522') & ‘c_523'))  <!<  ((‹∀ 1. {(α459_532'' -> α461_533'') where: α458_525' :> ((α458_525',) -> α460_531'')}›,) -> α465_534')
//│ ╟── while constraining:  ((‘a_521' -> ‘b_522') -> ((‘a_521' -> ‘b_522') & ‘c_523'))  <!<  α457_524'
//│ ╟── while constraining:  (((‘a_521' -> ‘b_522') -> ((‘a_521' -> ‘b_522') & ‘c_523')),)  <!<  (α457_524',)
//│ ╟── while constraining:  (α457_524' -> α479_535')  <!<  (((‘a_521' -> ‘b_522') -> ((‘a_521' -> ‘b_522') & ‘c_523')) -> ‘c_523')
//│ ╟── while constraining:  ‹∀ 0. (α457' -> α479')›  <!<  (((‘a_521' -> ‘b_522') -> ((‘a_521' -> ‘b_522') & ‘c_523')) -> ‘c_523')
//│ ╙── while constraining:  ‹∀ 0. (α457' -> α479')›  <!<  ‹∀ 0. ((('a21_24' -> 'b22_25') -> (('a21_24' -> 'b22_25') & 'c23_26')) -> 'c23_26')›
//│  = [Function: z2]

