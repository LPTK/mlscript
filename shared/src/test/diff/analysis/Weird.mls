
class Base1[A]
  method M1: A -> Base1[A]
// class Derived2[C, D]: Base1[{ c: C; d: D }]
//   method M1 r = Derived2 { c = r.c; d = r.d }
//│ Defined class Base1[-A]
//│ Declared Base1.M1: Base1['A] -> 'A -> Base1['A]

// * See [FIXME:1]
class Derived2[C]: Base1[anything]
  method M1 r = Derived2{}
//│ Defined class Derived2[=C]
//│ Defined Derived2.M1: Derived2['C] -> anything -> (forall 'C. Derived2['C])

Derived2.M1
//│ res: Derived2['C] -> anything -> (forall 'C0. Derived2['C0])
//│    = undefined
