:NewDefs


class Foo[type A](val a: A)
//│ class Foo[A](a: A)

fun foo(f: Foo) = f.a
//│ fun foo: (f: Foo[anything]) -> ??A

fun foo(f: Foo[Int]) = f.a
//│ fun foo: (f: Foo[Int]) -> Int

fun foo(a, f: Foo[a]): Int = f.a : f.A
//│ fun foo: forall 'A. ('A, f: Foo['A]) -> Int
//│   where
//│     'A <: Int

foo(2, Foo(1))
//│ Int
//│ res
//│     = 1

class Foo[A](val a: A -> A)
//│ class Foo[A](a: A -> A)

fun foo(f: Foo) = f.a
//│ fun foo: (f: Foo[in anything out nothing]) -> ??A -> ??A0


fun foo(f) = f : Foo
//│ fun foo: Foo[in anything out nothing] -> Foo[?]


