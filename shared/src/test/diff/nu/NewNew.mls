:NewDefs


class Foo(x: Int)
//│ class Foo(x: Int)

let f = Foo(1)
//│ let f: Foo
//│ f
//│   = Foo {}

let f = new Foo(1)
//│ let f: Foo
//│ f
//│   = Foo {}

if f is Foo then 1 else 0
//│ 0 | 1
//│ res
//│     = 1

if f is Foo(a) then a else 0
//│ Int
//│ res
//│     = 1


class PoInt[A](x: A, y: A)
//│ class PoInt[A](x: A, y: A)

new PoInt(1, 2)
//│ PoInt[1 | 2]
//│ res
//│     = PoInt {}

:e
new PoInt
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.37: 	new PoInt
//│ ║        	    ^^^^^
//│ ╟── argument list of type `[]` does not match type `[x: ?A, y: ?A]`
//│ ║  l.37: 	new PoInt
//│ ╙──      	         ^
//│ PoInt[nothing] | error
//│ res
//│     = PoInt {}

:e
new PoInt['_]
//│ ╔══[ERROR] Type arguments in `new` expressions are not yet supported
//│ ║  l.49: 	new PoInt['_]
//│ ╙──      	    ^^^^^^^^^
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.49: 	new PoInt['_]
//│ ║        	    ^^^^^^^^^
//│ ╟── argument list of type `[]` does not match type `[x: ?A, y: ?A]`
//│ ║  l.49: 	new PoInt['_]
//│ ╙──      	             ^
//│ PoInt[nothing] | error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: TyApp(Var(PoInt), List('_))

:e
new PoInt[Str](0, 0)
//│ ╔══[ERROR] Type arguments in `new` expressions are not yet supported
//│ ║  l.64: 	new PoInt[Str](0, 0)
//│ ╙──      	^^^^^^^^^^^^^^^^^^^^
//│ PoInt[0]
//│ Code generation encountered an error:
//│   Unsupported `new` class term: TyApp(Var(PoInt), List(TypeName(Str)))

type T = PoInt[Str]
//│ type T = PoInt[Str]

:e
new T(0, 0)
//│ ╔══[ERROR] Type alias T cannot be used in `new` expression
//│ ║  l.76: 	new T(0, 0)
//│ ╙──      	^^^^^^^^^^^
//│ error
//│ Code generation encountered an error:
//│   type alias T is not a valid expression

let origin = new PoInt(0, 0)
//│ let origin: PoInt[0]
//│ origin
//│        = PoInt {}

:e // TODO support
let origin = PoInt[Int](0, 0)
//│ ╔══[ERROR] Type application syntax is not yet supported
//│ ║  l.90: 	let origin = PoInt[Int](0, 0)
//│ ╙──      	             ^^^^^^^^^^
//│ let origin: PoInt[0]
//│ origin
//│        = PoInt {}

:e // TODO support
let origin = new PoInt[Int](0, 0)
//│ ╔══[ERROR] Type arguments in `new` expressions are not yet supported
//│ ║  l.99: 	let origin = new PoInt[Int](0, 0)
//│ ╙──      	             ^^^^^^^^^^^^^^^^^^^^
//│ let origin: PoInt[0]
//│ Code generation encountered an error:
//│   Unsupported `new` class term: TyApp(Var(PoInt), List(TypeName(Int)))


:e // TODO support
new {}
//│ ╔══[ERROR] Unexpected type `anything` after `new` keyword
//│ ║  l.109: 	new {}
//│ ╙──       	    ^^
//│ error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: Bra(rcd = true, Rcd())

:pe
:e
new
//│ ╔══[PARSE ERROR] Unexpected end of input; an expression was expected here
//│ ║  l.119: 	new
//│ ╙──       	   ^
//│ ╔══[ERROR] Unexpected type `()` after `new` keyword
//│ ║  l.119: 	new
//│ ╙──       	   ^
//│ error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: UnitLit(true)

:e // support?
new
  x: 0
//│ ╔══[ERROR] Not a recognized type
//│ ║  l.132: 	  x: 0
//│ ╙──       	  ^
//│ ╔══[ERROR] Unexpected type `nothing` after `new` keyword
//│ ║  l.132: 	  x: 0
//│ ╙──       	  ^
//│ error
//│ Code generation encountered an error:
//│   Unsupported `new` class term: Blk(...)




fun f(x) = {x}
//│ fun f: forall 'a. 'a -> {x: 'a}

:e
new f(1)
//│ ╔══[ERROR] Unexpected type `forall ?a. ?a -> {x: ?a}` after `new` keyword
//│ ║  l.150: 	new f(1)
//│ ╙──       	    ^
//│ error
//│ res
//│     = { x: 1 }


module Oops
//│ module Oops

:e
new Oops
//│ ╔══[ERROR] Module Oops cannot be used in `new` expression
//│ ║  l.163: 	new Oops
//│ ╙──       	    ^^^^
//│ error
//│ res
//│     = Oops {}


:e
new Oops2
trait Oops2
//│ ╔══[ERROR] Trait Oops2 cannot be used in `new` expression
//│ ║  l.173: 	new Oops2
//│ ╙──       	    ^^^^^
//│ trait Oops2
//│ error
//│ Code generation encountered an error:
//│   trait used in term position


