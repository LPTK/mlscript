
:w
// class G[A]: { a: G[A] & A & G[A] }
class G[A]: { a: G[A] }
//│ Defined class G[±A]
//│ ╔══[WARNING] Type definition G has bivariant type parameters:
//│ ║  l.4: 	class G[A]: { a: G[A] }
//│ ║       	      ^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.4: 	class G[A]: { a: G[A] }
//│ ╙──     	        ^

def g: G['a] & {a: 'a} as 'a
//│ g: 'a
//│   where
//│     'a :> G[?] with {a: 'a}
//│  = <missing implementation>

:NoJS

rec def g2 a = G { a }
//│ g2: (G[?] & 'a) -> (G[?] with {a: 'a})

:e
g = g2
//│ (G[?] & 'a) -> (G[?] with {a: 'a})
//│   <:  g:
//│ 'a
//│   where
//│     'a :> G[?] with {a: 'a}
//│ ╔══[ERROR] Type mismatch in def definition:
//│ ║  l.25: 	g = g2
//│ ║        	^^^^^^
//│ ╟── function of type `?b -> (G[?] & {G#A = ?A, a: ?a})` is not an instance of type `G`
//│ ║  l.21: 	rec def g2 a = G { a }
//│ ║        	           ^^^^^^^^^^^
//│ ╟── but it flows into reference with expected type `G[?]`
//│ ║  l.25: 	g = g2
//│ ║        	    ^^
//│ ╟── Note: constraint arises from applied type reference:
//│ ║  l.13: 	def g: G['a] & {a: 'a} as 'a
//│ ║        	       ^^^^^
//│ ╟── from local type binding:
//│ ║  l.13: 	def g: G['a] & {a: 'a} as 'a
//│ ╙──      	       ^^^^^^^^^^^^^^^

rec def g2 = G { a = g2 }
//│ g2: 'a
//│   where
//│     'a :> G[?] with {a: 'a}

g = g2
//│ 'a
//│   where
//│     'a :> G[?] with {a: 'a}
//│   <:  g:
//│ 'a
//│   where
//│     'a :> G[?] with {a: 'a}

g = g
//│ 'a
//│   where
//│     'a :> G[?] with {a: 'a}
//│   <:  g:
//│ 'a
//│   where
//│     'a :> G[?] with {a: 'a}


def manual: 'a -> nothing as 'a
//│ manual: 'a
//│   where
//│     'a := 'a -> nothing

:d
manual id
//│ 0. Typing term manual (id,)
//│ | 0. Typing term manual
//│ | 0. : ‹∀ 0. 'a108'#›
//│ | 0. Typing term id
//│ | 0. : ‹∀ 0. (α19' -> α19')›
//│ | could be distribbed: Set()
//│ | INST [0]   ‹∀ 0. 'a108'#›
//│ |   where  
//│ 		'a108'# := ('a108'# -> Nothing)
//│ | TO [0] ~>  'a108_112#
//│ |   where  
//│ 		'a108_112# := ('a108_112# -> Nothing)
//│ | CONSTRAIN ‹∀ 0. 'a108'#› <! (‹∀ 0. (α19' -> α19')› -> α113)
//│ |   where 
//│ 		'a108'# := ('a108'# -> Nothing)
//│ | 0. C ‹∀ 0. 'a108'#› <! (‹∀ 0. (α19' -> α19')› -> α113)    (0)
//│ | | Add to cache DNF(0, 'a108'#) DNF(0, (‹∀ 0. (α19' -> α19')› -> α113){})
//│ | | could be distribbed: Set()
//│ | | INST [0]   ‹∀ 0. 'a108'#›
//│ | |   where  
//│ 		'a108'# := ('a108'# -> Nothing)
//│ | | TO [0] ~>  'a108_114#
//│ | |   where  
//│ 		'a108_114# := ('a108_114# -> Nothing)
//│ | | 0. C 'a108_114# <! (‹∀ 0. (α19' -> α19')› -> α113)    (2)
//│ | | | Add to cache DNF(0, 'a108_114#) DNF(0, (‹∀ 0. (α19' -> α19')› -> α113){})
//│ | | | 0. C ('a108_114# -> Nothing) <! (‹∀ 0. (α19' -> α19')› -> α113)    (4)
//│ | | | | Add to cache DNF(0, ('a108_114# -> ⊥){}) DNF(0, (‹∀ 0. (α19' -> α19')› -> α113){})
//│ | | | | 0. C (‹∀ 0. (α19' -> α19')›,) <! ('a108_114#,)    (3)
//│ | | | | | Add to cache DNF(0, (‹∀ 0. (α19' -> α19')›,){}) DNF(0, ('a108_114#,){})
//│ | | | | | 0. C ‹∀ 0. (α19' -> α19')› <! 'a108_114#    (4)
//│ | | | | | | Add to cache DNF(0, (α19' -> α19'){}) DNF(0, 'a108_114#)
//│ | | | | | | 0. C ‹∀ 0. (α19' -> α19')› <! ('a108_114# -> Nothing)    (6)
//│ | | | | | | | Add to cache DNF(0, (α19' -> α19'){}) DNF(0, ('a108_114# -> ⊥){})
//│ | | | | | | | could be distribbed: Set(α19')
//│ | | | | | | | cannot be distribbed: Set(α19')
//│ | | | | | | | INST [0]   ‹∀ 0. (α19' -> α19')›
//│ | | | | | | |   where  
//│ | | | | | | | TO [0] ~>  (α19_115 -> α19_115)
//│ | | | | | | |   where  
//│ | | | | | | | 0. C (α19_115 -> α19_115) <! ('a108_114# -> Nothing)    (8)
//│ | | | | | | | | Add to cache DNF(0, (α19_115 -> α19_115){}) DNF(0, ('a108_114# -> ⊥){})
//│ | | | | | | | | 0. C ('a108_114#,) <! (α19_115,)    (7)
//│ | | | | | | | | | Add to cache DNF(0, ('a108_114#,){}) DNF(0, (α19_115,){})
//│ | | | | | | | | | 0. C 'a108_114# <! α19_115    (8)
//│ | | | | | | | | | | Add to cache DNF(0, 'a108_114#) DNF(0, α19_115)
//│ | | | | | | | | | | 0. C ('a108_114# -> Nothing) <! α19_115    (10)
//│ | | | | | | | | | | | Add to cache DNF(0, ('a108_114# -> ⊥){}) DNF(0, α19_115)
//│ | | | | | | | | | | | NEW α19_115 LB (0)
//│ | | | | | | | | 0. C α19_115 <! Nothing    (7)
//│ | | | | | | | | | Add to cache DNF(0, α19_115) DNF(0, )
//│ | | | | | | | | | NEW α19_115 UB (0)
//│ | | | | | | | | | 0. C ('a108_114# -> Nothing) <! Nothing    (9)
//│ | | | | | | | | | | Add to cache DNF(0, ('a108_114# -> ⊥){}) DNF(0, )
//│ | | | | | | | | | | 0. C ('a108_114# -> Nothing) <! ⊥    (11)
//│ | | | | | | | | | | | Cached! (DNF) DNF(0, ('a108_114# -> ⊥){}) DNF(0, )
//│ | | | | 0. C Nothing <! α113    (3)
//│ | | | | | Add to cache DNF(0, ) DNF(0, α113)
//│ | | | | | NEW α113 LB (0)
//│ 0. : α113
//│ ⬤ Typed as: α113
//│  where: 
//│ 		α113 :> Nothing
//│ res: nothing

def manual: 'a -> anything as 'a
//│ manual: 'a
//│   where
//│     'a := 'a -> anything

manual id
//│ res: anything


def f: { mut x: int }
//│ f: {mut x: int}

f: { mut x: int }
//│ res: {mut x: int}

f = { mut x = 1 }
//│ {mut x: 'x}
//│   where
//│     'x :> 1
//│   <:  f:
//│ {mut x: int}




