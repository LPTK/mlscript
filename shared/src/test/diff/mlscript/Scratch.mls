:NoRecursiveTypes
:IrregularTypes

type Lol = forall 'a. int -> ('a, Lol)
//│ Defined type alias Lol

def lol: Lol
//│ lol: Lol
//│    = <missing implementation>

:w
// type Oops = int -> (anything, Oops)
type Oops[A] = int -> (anything, Oops[Oops[A]])
//│ Defined type alias Oops[±A]
//│ ╔══[WARNING] Type definition Oops has bivariant type parameters:
//│ ║  l.13: 	type Oops[A] = int -> (anything, Oops[Oops[A]])
//│ ║        	     ^^^^
//│ ╟── A is irrelevant and may be removed
//│ ║  l.13: 	type Oops[A] = int -> (anything, Oops[Oops[A]])
//│ ╙──      	          ^

// lol: int -> anything

// * The cycle is due to irregular types, which are not yet shadowed
:e
lol: Oops[int]
//│ ╔══[ERROR] Subtyping constraint of the form `Lol <: Oops[?]` exceeded recursion depth limit (300)
//│ ║  l.26: 	lol: Oops[int]
//│ ║        	^^^
//│ ╟── while constraining:  ('a21_87, Lol,)  <!<  (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],)
//│ ╟── while constraining:  ‹∀ 1. ('a21_22'', Lol,)›  <!<  (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],)
//│ ╟── while constraining:  (Int -> ‹∀ 1. ('a21_22'', Lol,)›)  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],))
//│ ╟── while constraining:  ‹∀ 1. (Int -> ('a21_22'', Lol,))›  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],))
//│ ╟── while constraining:  Lol  <!<  Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
//│ ╟── while constraining:  ('a21_86, Lol,)  <!<  (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],)
//│ ╟── while constraining:  ‹∀ 1. ('a21_22'', Lol,)›  <!<  (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],)
//│ ╟── while constraining:  (Int -> ‹∀ 1. ('a21_22'', Lol,)›)  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],))
//│ ╟── while constraining:  ‹∀ 1. (Int -> ('a21_22'', Lol,))›  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],))
//│ ╟── while constraining:  Lol  <!<  Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
//│ ╟── while constraining:  ('a21_85, Lol,)  <!<  (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],)
//│ ╟── while constraining:  ‹∀ 1. ('a21_22'', Lol,)›  <!<  (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],)
//│ ╟── while constraining:  (Int -> ‹∀ 1. ('a21_22'', Lol,)›)  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],))
//│ ╟── while constraining:  ‹∀ 1. (Int -> ('a21_22'', Lol,))›  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],))
//│ ╟── while constraining:  Lol  <!<  Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Oops[Int]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ('a21_30, Lol,)  <!<  (Anything, Oops[Oops[Oops[Oops[Int]]]],)
//│ ╟── while constraining:  ‹∀ 1. ('a21_22'', Lol,)›  <!<  (Anything, Oops[Oops[Oops[Oops[Int]]]],)
//│ ╟── while constraining:  (Int -> ‹∀ 1. ('a21_22'', Lol,)›)  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Int]]]],))
//│ ╟── while constraining:  ‹∀ 1. (Int -> ('a21_22'', Lol,))›  <!<  (Int -> (Anything, Oops[Oops[Oops[Oops[Int]]]],))
//│ ╟── while constraining:  Lol  <!<  Oops[Oops[Oops[Int]]]
//│ ╟── while constraining:  ('a21_29, Lol,)  <!<  (Anything, Oops[Oops[Oops[Int]]],)
//│ ╟── while constraining:  ‹∀ 1. ('a21_22'', Lol,)›  <!<  (Anything, Oops[Oops[Oops[Int]]],)
//│ ╟── while constraining:  (Int -> ‹∀ 1. ('a21_22'', Lol,)›)  <!<  (Int -> (Anything, Oops[Oops[Oops[Int]]],))
//│ ╟── while constraining:  ‹∀ 1. (Int -> ('a21_22'', Lol,))›  <!<  (Int -> (Anything, Oops[Oops[Oops[Int]]],))
//│ ╟── while constraining:  Lol  <!<  Oops[Oops[Int]]
//│ ╟── while constraining:  ('a21_28, Lol,)  <!<  (Anything, Oops[Oops[Int]],)
//│ ╟── while constraining:  ‹∀ 1. ('a21_22'', Lol,)›  <!<  (Anything, Oops[Oops[Int]],)
//│ ╟── while constraining:  (Int -> ‹∀ 1. ('a21_22'', Lol,)›)  <!<  (Int -> (Anything, Oops[Oops[Int]],))
//│ ╟── while constraining:  ‹∀ 1. (Int -> ('a21_22'', Lol,))›  <!<  (Int -> (Anything, Oops[Oops[Int]],))
//│ ╙── while constraining:  Lol  <!<  Oops[Int]
//│ res: Oops[?]
//│    = <no result>
//│      lol is not implemented



// rec def produce arg = { tail = produce (succ arg) }
// // rec def consume strm = add strm.head (consume strm.tail)
// //│ produce: int -> 'a
// //│   where
// //│     'a :> {tail: 'a}
// //│        = [Function: produce]

// rec def consume strm = let t = strm.tail in (consume strm.tail)
// //│ consume: 'a -> nothing
// //│   where
// //│     'a <: {tail: 'a}
// //│        = [Function: consume]

// codata = produce 42
// rec def codata2 = { tail = { tail = codata2 } }
// //│ codata: 'a
// //│   where
// //│     'a :> {tail: 'a}
// //│ Runtime error:
// //│   RangeError: Maximum call stack size exceeded
// //│ codata2: 'codata2
// //│   where
// //│     'codata2 :> {tail: {tail: 'codata2}}
// //│        = [Function: codata2]

// rec def produce3 b = { tail = if b then codata else codata2 }
// //│ produce3: bool -> {tail: forall 'codata2, 'a. 'codata2 | 'a}
// //│   where
// //│     'a :> {tail: 'a}
// //│     'codata2 :> {tail: {tail: 'codata2}}
// //│         = [Function: produce3]

// // :d
// res = fun x -> consume (produce3 x)
// //│ res: bool -> (forall 'a. 'a)
// //│    = [Function: res1]


def f b = if b then 0 else 1
//│ f: bool -> (0 | 1)
//│  = [Function: f]



