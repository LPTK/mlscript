
// * Here the two occurrences of `'a` in different types are separate:
def foo(f: (~'a) -> 'a, a: 'a) =
  f a
//│ foo: (~'a -> 'a, ~'a,) -> 'a
//│    = [Function: foo]

def foo(fa: ((~'a) -> 'a, 'a)) =
  fa._1 fa._2
//│ foo: (~'a -> 'a, 'a,) -> 'a
//│    = [Function: foo1]

:ns
foo
//│ res: forall 'a 'b 'c. (~('c & 'b) -> ('c & 'b), 'c & 'b,) -> 'c
//│   where
//│     'b <: ~'a
//│     'a <: 'c & 'b
//│    = [Function: foo1]

