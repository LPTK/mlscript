:global
:bbml


(x => x + 1): [A extends Int] -> A -> Int
//│ Type: forall α0_2: (Int) ->{⊥} Int


(x => x): [A restricts Int] -> A -> A
//│ Type: forall α1_2: (α1_2) ->{⊥} α1_2
//│ Where:
//│   Int <: α1_2


(x => x - 1): [A extends Int restricts Int] -> A -> A
//│ Type: forall α2_2: (α2_2) ->{⊥} α2_2
//│ Where:
//│   Int <: α2_2
//│   α2_2 <: Int
